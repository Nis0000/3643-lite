{
	"id": "3ce1c8fb0964613fa339a6206945b2f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/registry/ClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"contracts/registry/interface/IClaimTopicsRegistry.sol\";\n\n/// @title ERC-3643 - ClaimTopicsRegistry\n/// @dev A registry for managing claim topics.\ncontract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable(msg.sender) {\n    /// @dev An array to hold all required claim topics.\n    uint256[] private _claimTopics;\n\n    /// @notice Adds a claim topic to the registry.\n    /// @dev Can only be called by the owner of the contract.\n    /// Emits a ClaimTopicAdded event.\n    /// @param _claimTopic The claim topic to add.\n    function addClaimTopic(uint256 _claimTopic) external onlyOwner {\n        require(_isClaimTopicUnique(_claimTopic), \"ERC-3643: Topic exists\");\n\n        _claimTopics.push(_claimTopic);\n        emit ClaimTopicAdded(_claimTopic);\n    }\n\n    /// @notice Removes a claim topic from the registry.\n    /// @dev Can only be called by the owner of the contract.\n    /// Emits a ClaimTopicRemoved event.\n    /// @param _claimTopic The claim topic to remove.\n    function removeClaimTopic(uint256 _claimTopic) external onlyOwner {\n        uint256 length = _claimTopics.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_claimTopics[i] == _claimTopic) {\n                _claimTopics[i] = _claimTopics[length - 1];\n                _claimTopics.pop();\n                emit ClaimTopicRemoved(_claimTopic);\n                break;\n            }\n        }\n    }\n\n    /// @notice Retrieves all claim topics from the registry.\n    /// @return uint256[] An array of claim topics.\n    function getClaimTopics() external view returns (uint256[] memory) {\n        return _claimTopics;\n    }\n\n    /// @notice Checks if a claim topic is unique in the registry.\n    /// @dev Private function to check the uniqueness of a claim topic.\n    /// @param claimTopic The claim topic to check.\n    /// @return bool True if the claim topic is unique, false otherwise.\n    function _isClaimTopicUnique(\n        uint256 claimTopic\n    ) private view returns (bool) {\n        uint256[] memory claimTopics = _claimTopics;\n        uint256 length = _claimTopics.length;\n        for (uint256 i = 0; i < length; ) {\n            if (claimTopics[i] == claimTopic) {\n                return false;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        return true;\n    }\n}\n"
			},
			"contracts/registry/interface/IClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\ninterface IClaimTopicsRegistry {\n    /**\n     *  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n     *  the event is emitted by the 'addClaimTopic' function\n     *  `claimTopic` is the required claim added to the Claim Topics Registry\n     */\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    /**\n     *  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n     *  the event is emitted by the 'removeClaimTopic' function\n     *  `claimTopic` is the required claim removed from the Claim Topics Registry\n     */\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    /**\n     * @dev Add a claim claim topic (For example: KYC=1, AML=2).\n     * Only owner can call.\n     * emits `ClaimTopicAdded` event\n     * cannot add more than 15 topics for 1 token as adding more could create gas issues\n     * @param _claimTopic The claim topic index\n     */\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Remove a claim claim topic (For example: KYC=1, AML=2).\n     *  Only owner can call.\n     *  emits `ClaimTopicRemoved` event\n     *  @param _claimTopic The claim topic index\n     */\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Get the claim claim topics for the security token\n     *  @return Array of claim claim topics\n     */\n    function getClaimTopics() external view returns (uint256[] memory);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.17;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe6dd1bb1b56d51404c2664bf6a0fce775e228e0b21af652072be31534e72728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c60f1471735a5f3bde3c627f9da51ddf7cc28b4d536cc99ff744c8d38e4ab895\",\"dweb:/ipfs/Qmap8wDcLTZaPjzv6g8mrrFX6h7qmzWaM2cABndwvSAzA8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/registry/ClaimTopicsRegistry.sol": {
				"ClaimTopicsRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A registry for managing claim topics.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addClaimTopic(uint256)": {
								"details": "Can only be called by the owner of the contract. Emits a ClaimTopicAdded event.",
								"params": {
									"_claimTopic": "The claim topic to add."
								}
							},
							"getClaimTopics()": {
								"returns": {
									"_0": "uint256[] An array of claim topics."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeClaimTopic(uint256)": {
								"details": "Can only be called by the owner of the contract. Emits a ClaimTopicRemoved event.",
								"params": {
									"_claimTopic": "The claim topic to remove."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"_claimTopics": {
								"details": "An array to hold all required claim topics."
							}
						},
						"title": "ERC-3643 - ClaimTopicsRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/registry/ClaimTopicsRegistry.sol\":268:2427  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/registry/ClaimTopicsRegistry.sol\":330:340  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/registry/ClaimTopicsRegistry.sol\":268:2427  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable(msg.sender) {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_11:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_12:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_17\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_11\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_13:\n    /* \"#utility.yul\":328:352   */\n  tag_19\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_6:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_21\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_13\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/registry/ClaimTopicsRegistry.sol\":268:2427  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable(msg.sender) {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":268:2427  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x08297846\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc7b22551\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdf09d604\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1097:1509  function removeClaimTopic(uint256 _claimTopic) external onlyOwner {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":646:877  function addClaimTopic(uint256 _claimTopic) external onlyOwner {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1629:1732  function getClaimTopics() external view returns (uint256[] memory) {... */\n    tag_7:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1097:1509  function removeClaimTopic(uint256 _claimTopic) external onlyOwner {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_31:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1173:1187  uint256 length */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1190:1202  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1190:1209  _claimTopics.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1173:1209  uint256 length = _claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1224:1233  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1219:1503  for (uint256 i = 0; i < length; i++) {... */\n    tag_34:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1243:1249  length */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1239:1240  i */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1239:1249  i < length */\n      lt\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1219:1503  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1293:1304  _claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1274:1286  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1287:1288  i */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1274:1289  _claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_37\n      jumpi\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n    tag_37:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1274:1304  _claimTopics[i] == _claimTopic */\n      sub\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1270:1493  if (_claimTopics[i] == _claimTopic) {... */\n      tag_41\n      jumpi\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1342:1354  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1364:1365  1 */\n      dup1\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1355:1361  length */\n      dup4\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1355:1365  length - 1 */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1342:1366  _claimTopics[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_45\n      tag_39\n      jump\t// in\n    tag_45:\n    tag_44:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1324:1336  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1337:1338  i */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1324:1339  _claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_48\n      tag_39\n      jump\t// in\n    tag_48:\n    tag_47:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1324:1366  _claimTopics[i] = _claimTopics[length - 1] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1384:1396  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1384:1402  _claimTopics.pop() */\n      dup1\n      sload\n      dup1\n      tag_50\n      jumpi\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1443:1454  _claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1425:1455  ClaimTopicRemoved(_claimTopic) */\n      0x0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1473:1478  break */\n      jump(tag_35)\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1270:1493  if (_claimTopics[i] == _claimTopic) {... */\n    tag_41:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1251:1254  i++ */\n      dup1\n      dup1\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      swap2\n      pop\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1219:1503  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_34)\n    tag_35:\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1163:1509  {... */\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1097:1509  function removeClaimTopic(uint256 _claimTopic) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":646:877  function addClaimTopic(uint256 _claimTopic) external onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_63:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":727:759  _isClaimTopicUnique(_claimTopic) */\n      tag_65\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":747:758  _claimTopic */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":727:746  _isClaimTopicUnique */\n      tag_66\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":727:759  _isClaimTopicUnique(_claimTopic) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":719:786  require(_isClaimTopicUnique(_claimTopic), \"ERC-3643: Topic exists\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":797:809  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":815:826  _claimTopic */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":797:827  _claimTopics.push(_claimTopic) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":858:869  _claimTopic */\n      dup1\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":842:870  ClaimTopicAdded(_claimTopic) */\n      0x01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":646:877  function addClaimTopic(uint256 _claimTopic) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1629:1732  function getClaimTopics() external view returns (uint256[] memory) {... */\n    tag_23:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1678:1694  uint256[] memory */\n      0x60\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1713:1725  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1706:1725  return _claimTopics */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1629:1732  function getClaimTopics() external view returns (uint256[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_16\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2002:2425  function _isClaimTopicUnique(... */\n    tag_66:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2087:2091  bool */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2103:2131  uint256[] memory claimTopics */\n      dup1\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2134:2146  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2103:2146  uint256[] memory claimTopics = _claimTopics */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2156:2170  uint256 length */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2173:2185  _claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2173:2192  _claimTopics.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2156:2192  uint256 length = _claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2207:2216  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2202:2398  for (uint256 i = 0; i < length; ) {... */\n    tag_91:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2226:2232  length */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2222:2223  i */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2222:2232  i < length */\n      lt\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2202:2398  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2272:2282  claimTopic */\n      dup5\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2254:2265  claimTopics */\n      dup4\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2266:2267  i */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2254:2268  claimTopics[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_95\n      tag_39\n      jump\t// in\n    tag_95:\n    tag_94:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2254:2282  claimTopics[i] == claimTopic */\n      sub\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2250:2329  if (claimTopics[i] == claimTopic) {... */\n      tag_96\n      jumpi\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2309:2314  false */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2302:2314  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_88)\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2250:2329  if (claimTopics[i] == claimTopic) {... */\n    tag_96:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2370:2373  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2202:2398  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_91)\n    tag_92:\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2414:2418  true */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2407:2418  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2002:2425  function _isClaimTopicUnique(... */\n    tag_88:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_99:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_101:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_102:\n        /* \"#utility.yul\":490:514   */\n      tag_126\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_101\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_127:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_103:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_129\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_102\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_132\n      tag_99\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":766:885   */\n    tag_131:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_133\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_103\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_104:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_105:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_136\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_104\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_106:\n        /* \"#utility.yul\":1346:1370   */\n      tag_138\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_105\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_18:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_140\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_106\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1725   */\n    tag_107:\n        /* \"#utility.yul\":1678:1684   */\n      0x00\n        /* \"#utility.yul\":1712:1717   */\n      dup2\n        /* \"#utility.yul\":1706:1718   */\n      mload\n        /* \"#utility.yul\":1696:1718   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1731:1915   */\n    tag_108:\n        /* \"#utility.yul\":1830:1841   */\n      0x00\n        /* \"#utility.yul\":1864:1870   */\n      dup3\n        /* \"#utility.yul\":1859:1862   */\n      dup3\n        /* \"#utility.yul\":1852:1871   */\n      mstore\n        /* \"#utility.yul\":1904:1908   */\n      0x20\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1895:1909   */\n      add\n        /* \"#utility.yul\":1880:1909   */\n      swap1\n      pop\n        /* \"#utility.yul\":1731:1915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1921:2053   */\n    tag_109:\n        /* \"#utility.yul\":1988:1992   */\n      0x00\n        /* \"#utility.yul\":2011:2014   */\n      dup2\n        /* \"#utility.yul\":2003:2014   */\n      swap1\n      pop\n        /* \"#utility.yul\":2041:2045   */\n      0x20\n        /* \"#utility.yul\":2036:2039   */\n      dup3\n        /* \"#utility.yul\":2032:2046   */\n      add\n        /* \"#utility.yul\":2024:2046   */\n      swap1\n      pop\n        /* \"#utility.yul\":1921:2053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2167   */\n    tag_110:\n        /* \"#utility.yul\":2136:2160   */\n      tag_145\n        /* \"#utility.yul\":2154:2159   */\n      dup2\n        /* \"#utility.yul\":2136:2160   */\n      tag_101\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2131:2134   */\n      dup3\n        /* \"#utility.yul\":2124:2161   */\n      mstore\n        /* \"#utility.yul\":2059:2167   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2173:2352   */\n    tag_111:\n        /* \"#utility.yul\":2242:2252   */\n      0x00\n        /* \"#utility.yul\":2263:2309   */\n      tag_147\n        /* \"#utility.yul\":2305:2308   */\n      dup4\n        /* \"#utility.yul\":2297:2303   */\n      dup4\n        /* \"#utility.yul\":2263:2309   */\n      tag_110\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2341:2345   */\n      0x20\n        /* \"#utility.yul\":2336:2339   */\n      dup4\n        /* \"#utility.yul\":2332:2346   */\n      add\n        /* \"#utility.yul\":2318:2346   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2358:2471   */\n    tag_112:\n        /* \"#utility.yul\":2428:2432   */\n      0x00\n        /* \"#utility.yul\":2460:2464   */\n      0x20\n        /* \"#utility.yul\":2455:2458   */\n      dup3\n        /* \"#utility.yul\":2451:2465   */\n      add\n        /* \"#utility.yul\":2443:2465   */\n      swap1\n      pop\n        /* \"#utility.yul\":2358:2471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2507:3239   */\n    tag_113:\n        /* \"#utility.yul\":2626:2629   */\n      0x00\n        /* \"#utility.yul\":2655:2709   */\n      tag_150\n        /* \"#utility.yul\":2703:2708   */\n      dup3\n        /* \"#utility.yul\":2655:2709   */\n      tag_107\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2725:2811   */\n      tag_151\n        /* \"#utility.yul\":2804:2810   */\n      dup2\n        /* \"#utility.yul\":2799:2802   */\n      dup6\n        /* \"#utility.yul\":2725:2811   */\n      tag_108\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2718:2811   */\n      swap4\n      pop\n        /* \"#utility.yul\":2835:2891   */\n      tag_152\n        /* \"#utility.yul\":2885:2890   */\n      dup4\n        /* \"#utility.yul\":2835:2891   */\n      tag_109\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2914:2921   */\n      dup1\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2930:3214   */\n    tag_153:\n        /* \"#utility.yul\":2955:2961   */\n      dup4\n        /* \"#utility.yul\":2952:2953   */\n      dup2\n        /* \"#utility.yul\":2949:2962   */\n      lt\n        /* \"#utility.yul\":2930:3214   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":3031:3037   */\n      dup2\n        /* \"#utility.yul\":3025:3038   */\n      mload\n        /* \"#utility.yul\":3058:3121   */\n      tag_156\n        /* \"#utility.yul\":3117:3120   */\n      dup9\n        /* \"#utility.yul\":3102:3115   */\n      dup3\n        /* \"#utility.yul\":3058:3121   */\n      tag_111\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3051:3121   */\n      swap8\n      pop\n        /* \"#utility.yul\":3144:3204   */\n      tag_157\n        /* \"#utility.yul\":3197:3203   */\n      dup4\n        /* \"#utility.yul\":3144:3204   */\n      tag_112\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3134:3204   */\n      swap3\n      pop\n        /* \"#utility.yul\":2990:3214   */\n      pop\n        /* \"#utility.yul\":2977:2978   */\n      0x01\n        /* \"#utility.yul\":2974:2975   */\n      dup2\n        /* \"#utility.yul\":2970:2979   */\n      add\n        /* \"#utility.yul\":2965:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2930:3214   */\n      jump(tag_153)\n    tag_155:\n        /* \"#utility.yul\":2934:2948   */\n      pop\n        /* \"#utility.yul\":3230:3233   */\n      dup6\n        /* \"#utility.yul\":3223:3233   */\n      swap4\n      pop\n        /* \"#utility.yul\":2631:3239   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2507:3239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:3618   */\n    tag_25:\n        /* \"#utility.yul\":3388:3392   */\n      0x00\n        /* \"#utility.yul\":3426:3428   */\n      0x20\n        /* \"#utility.yul\":3415:3424   */\n      dup3\n        /* \"#utility.yul\":3411:3429   */\n      add\n        /* \"#utility.yul\":3403:3429   */\n      swap1\n      pop\n        /* \"#utility.yul\":3475:3484   */\n      dup2\n        /* \"#utility.yul\":3469:3473   */\n      dup2\n        /* \"#utility.yul\":3465:3485   */\n      sub\n        /* \"#utility.yul\":3461:3462   */\n      0x00\n        /* \"#utility.yul\":3450:3459   */\n      dup4\n        /* \"#utility.yul\":3446:3463   */\n      add\n        /* \"#utility.yul\":3439:3486   */\n      mstore\n        /* \"#utility.yul\":3503:3611   */\n      tag_159\n        /* \"#utility.yul\":3606:3610   */\n      dup2\n        /* \"#utility.yul\":3597:3603   */\n      dup5\n        /* \"#utility.yul\":3503:3611   */\n      tag_113\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3495:3611   */\n      swap1\n      pop\n        /* \"#utility.yul\":3245:3618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3624:3746   */\n    tag_114:\n        /* \"#utility.yul\":3697:3721   */\n      tag_161\n        /* \"#utility.yul\":3715:3720   */\n      dup2\n        /* \"#utility.yul\":3697:3721   */\n      tag_105\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3690:3695   */\n      dup2\n        /* \"#utility.yul\":3687:3722   */\n      eq\n        /* \"#utility.yul\":3677:3740   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":3736:3737   */\n      0x00\n        /* \"#utility.yul\":3733:3734   */\n      dup1\n        /* \"#utility.yul\":3726:3738   */\n      revert\n        /* \"#utility.yul\":3677:3740   */\n    tag_162:\n        /* \"#utility.yul\":3624:3746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3752:3891   */\n    tag_115:\n        /* \"#utility.yul\":3798:3803   */\n      0x00\n        /* \"#utility.yul\":3836:3842   */\n      dup2\n        /* \"#utility.yul\":3823:3843   */\n      calldataload\n        /* \"#utility.yul\":3814:3843   */\n      swap1\n      pop\n        /* \"#utility.yul\":3852:3885   */\n      tag_164\n        /* \"#utility.yul\":3879:3884   */\n      dup2\n        /* \"#utility.yul\":3852:3885   */\n      tag_114\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3752:3891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:4226   */\n    tag_28:\n        /* \"#utility.yul\":3956:3962   */\n      0x00\n        /* \"#utility.yul\":4005:4007   */\n      0x20\n        /* \"#utility.yul\":3993:4002   */\n      dup3\n        /* \"#utility.yul\":3984:3991   */\n      dup5\n        /* \"#utility.yul\":3980:4003   */\n      sub\n        /* \"#utility.yul\":3976:4008   */\n      slt\n        /* \"#utility.yul\":3973:4092   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":4011:4090   */\n      tag_167\n      tag_99\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3973:4092   */\n    tag_166:\n        /* \"#utility.yul\":4131:4132   */\n      0x00\n        /* \"#utility.yul\":4156:4209   */\n      tag_168\n        /* \"#utility.yul\":4201:4208   */\n      dup5\n        /* \"#utility.yul\":4192:4198   */\n      dup3\n        /* \"#utility.yul\":4181:4190   */\n      dup6\n        /* \"#utility.yul\":4177:4199   */\n      add\n        /* \"#utility.yul\":4156:4209   */\n      tag_115\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4146:4209   */\n      swap2\n      pop\n        /* \"#utility.yul\":4102:4219   */\n      pop\n        /* \"#utility.yul\":3897:4226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4412   */\n    tag_39:\n        /* \"#utility.yul\":4280:4357   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4277:4278   */\n      0x00\n        /* \"#utility.yul\":4270:4358   */\n      mstore\n        /* \"#utility.yul\":4377:4381   */\n      0x32\n        /* \"#utility.yul\":4374:4375   */\n      0x04\n        /* \"#utility.yul\":4367:4382   */\n      mstore\n        /* \"#utility.yul\":4401:4405   */\n      0x24\n        /* \"#utility.yul\":4398:4399   */\n      0x00\n        /* \"#utility.yul\":4391:4406   */\n      revert\n        /* \"#utility.yul\":4418:4598   */\n    tag_116:\n        /* \"#utility.yul\":4466:4543   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4463:4464   */\n      0x00\n        /* \"#utility.yul\":4456:4544   */\n      mstore\n        /* \"#utility.yul\":4563:4567   */\n      0x11\n        /* \"#utility.yul\":4560:4561   */\n      0x04\n        /* \"#utility.yul\":4553:4568   */\n      mstore\n        /* \"#utility.yul\":4587:4591   */\n      0x24\n        /* \"#utility.yul\":4584:4585   */\n      0x00\n        /* \"#utility.yul\":4577:4592   */\n      revert\n        /* \"#utility.yul\":4604:4798   */\n    tag_43:\n        /* \"#utility.yul\":4644:4648   */\n      0x00\n        /* \"#utility.yul\":4664:4684   */\n      tag_172\n        /* \"#utility.yul\":4682:4683   */\n      dup3\n        /* \"#utility.yul\":4664:4684   */\n      tag_101\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4659:4684   */\n      swap2\n      pop\n        /* \"#utility.yul\":4698:4718   */\n      tag_173\n        /* \"#utility.yul\":4716:4717   */\n      dup4\n        /* \"#utility.yul\":4698:4718   */\n      tag_101\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4693:4718   */\n      swap3\n      pop\n        /* \"#utility.yul\":4742:4743   */\n      dup3\n        /* \"#utility.yul\":4739:4740   */\n      dup3\n        /* \"#utility.yul\":4735:4744   */\n      sub\n        /* \"#utility.yul\":4727:4744   */\n      swap1\n      pop\n        /* \"#utility.yul\":4766:4767   */\n      dup2\n        /* \"#utility.yul\":4760:4764   */\n      dup2\n        /* \"#utility.yul\":4757:4768   */\n      gt\n        /* \"#utility.yul\":4754:4791   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":4771:4789   */\n      tag_175\n      tag_116\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4754:4791   */\n    tag_174:\n        /* \"#utility.yul\":4604:4798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4804:4984   */\n    tag_52:\n        /* \"#utility.yul\":4852:4929   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4849:4850   */\n      0x00\n        /* \"#utility.yul\":4842:4930   */\n      mstore\n        /* \"#utility.yul\":4949:4953   */\n      0x31\n        /* \"#utility.yul\":4946:4947   */\n      0x04\n        /* \"#utility.yul\":4939:4954   */\n      mstore\n        /* \"#utility.yul\":4973:4977   */\n      0x24\n        /* \"#utility.yul\":4970:4971   */\n      0x00\n        /* \"#utility.yul\":4963:4978   */\n      revert\n        /* \"#utility.yul\":4990:5223   */\n    tag_55:\n        /* \"#utility.yul\":5029:5032   */\n      0x00\n        /* \"#utility.yul\":5052:5076   */\n      tag_178\n        /* \"#utility.yul\":5070:5075   */\n      dup3\n        /* \"#utility.yul\":5052:5076   */\n      tag_101\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5043:5076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5098:5164   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5091:5096   */\n      dup3\n        /* \"#utility.yul\":5088:5165   */\n      sub\n        /* \"#utility.yul\":5085:5188   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":5168:5186   */\n      tag_180\n      tag_116\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5085:5188   */\n    tag_179:\n        /* \"#utility.yul\":5215:5216   */\n      0x01\n        /* \"#utility.yul\":5208:5213   */\n      dup3\n        /* \"#utility.yul\":5204:5217   */\n      add\n        /* \"#utility.yul\":5197:5217   */\n      swap1\n      pop\n        /* \"#utility.yul\":4990:5223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5229:5398   */\n    tag_117:\n        /* \"#utility.yul\":5313:5324   */\n      0x00\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5342:5345   */\n      dup3\n        /* \"#utility.yul\":5335:5354   */\n      mstore\n        /* \"#utility.yul\":5387:5391   */\n      0x20\n        /* \"#utility.yul\":5382:5385   */\n      dup3\n        /* \"#utility.yul\":5378:5392   */\n      add\n        /* \"#utility.yul\":5363:5392   */\n      swap1\n      pop\n        /* \"#utility.yul\":5229:5398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5404:5576   */\n    tag_118:\n        /* \"#utility.yul\":5544:5568   */\n      0x4552432d333634333a20546f7069632065786973747300000000000000000000\n        /* \"#utility.yul\":5540:5541   */\n      0x00\n        /* \"#utility.yul\":5532:5538   */\n      dup3\n        /* \"#utility.yul\":5528:5542   */\n      add\n        /* \"#utility.yul\":5521:5569   */\n      mstore\n        /* \"#utility.yul\":5404:5576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5582:5948   */\n    tag_119:\n        /* \"#utility.yul\":5724:5727   */\n      0x00\n        /* \"#utility.yul\":5745:5812   */\n      tag_184\n        /* \"#utility.yul\":5809:5811   */\n      0x16\n        /* \"#utility.yul\":5804:5807   */\n      dup4\n        /* \"#utility.yul\":5745:5812   */\n      tag_117\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5738:5812   */\n      swap2\n      pop\n        /* \"#utility.yul\":5821:5914   */\n      tag_185\n        /* \"#utility.yul\":5910:5913   */\n      dup3\n        /* \"#utility.yul\":5821:5914   */\n      tag_118\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5939:5941   */\n      0x20\n        /* \"#utility.yul\":5934:5937   */\n      dup3\n        /* \"#utility.yul\":5930:5942   */\n      add\n        /* \"#utility.yul\":5923:5942   */\n      swap1\n      pop\n        /* \"#utility.yul\":5582:5948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5954:6373   */\n    tag_69:\n        /* \"#utility.yul\":6120:6124   */\n      0x00\n        /* \"#utility.yul\":6158:6160   */\n      0x20\n        /* \"#utility.yul\":6147:6156   */\n      dup3\n        /* \"#utility.yul\":6143:6161   */\n      add\n        /* \"#utility.yul\":6135:6161   */\n      swap1\n      pop\n        /* \"#utility.yul\":6207:6216   */\n      dup2\n        /* \"#utility.yul\":6201:6205   */\n      dup2\n        /* \"#utility.yul\":6197:6217   */\n      sub\n        /* \"#utility.yul\":6193:6194   */\n      0x00\n        /* \"#utility.yul\":6182:6191   */\n      dup4\n        /* \"#utility.yul\":6178:6195   */\n      add\n        /* \"#utility.yul\":6171:6218   */\n      mstore\n        /* \"#utility.yul\":6235:6366   */\n      tag_187\n        /* \"#utility.yul\":6361:6365   */\n      dup2\n        /* \"#utility.yul\":6235:6366   */\n      tag_119\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6227:6366   */\n      swap1\n      pop\n        /* \"#utility.yul\":5954:6373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207ee1188b11ad1378e3d1f22a212825ffed7e575b5ba4a66ac0070b4bc26f782064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b61093b806101bc5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80630829784614610064578063715018a6146100805780638da5cb5b1461008a578063c7b22551146100a8578063df09d604146100c4578063f2fde38b146100e2575b5f80fd5b61007e600480360381019061007991906105dd565b6100fe565b005b6100886101f3565b005b610092610206565b60405161009f9190610647565b60405180910390f35b6100c260048036038101906100bd91906105dd565b61022d565b005b6100cc6102d3565b6040516100d99190610717565b60405180910390f35b6100fc60048036038101906100f79190610761565b610329565b005b6101066103ad565b5f60018054905090505f5b818110156101ee57826001828154811061012e5761012d61078c565b5b905f5260205f200154036101db576001808361014a91906107e6565b8154811061015b5761015a61078c565b5b905f5260205f200154600182815481106101785761017761078c565b5b905f5260205f200181905550600180548061019657610195610819565b5b600190038181905f5260205f20015f90559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a26101ee565b80806101e690610846565b915050610111565b505050565b6101fb6103ad565b6102045f610434565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102356103ad565b61023e816104f5565b61027d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610274906108e7565b60405180910390fd5b600181908060018154018082558091505060019003905f5260205f20015f9091909190915055807f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d660405160405180910390a250565b6060600180548060200260200160405190810160405280929190818152602001828054801561031f57602002820191905f5260205f20905b81548152602001906001019080831161030b575b5050505050905090565b6103316103ad565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103989190610647565b60405180910390fd5b6103aa81610434565b50565b6103b561059f565b73ffffffffffffffffffffffffffffffffffffffff166103d3610206565b73ffffffffffffffffffffffffffffffffffffffff1614610432576103f661059f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104299190610647565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80600180548060200260200160405190810160405280929190818152602001828054801561054157602002820191905f5260205f20905b81548152602001906001019080831161052d575b505050505090505f60018054905090505f5b81811015610592578483828151811061056f5761056e61078c565b5b602002602001015103610587575f935050505061059a565b806001019050610553565b506001925050505b919050565b5f33905090565b5f80fd5b5f819050919050565b6105bc816105aa565b81146105c6575f80fd5b50565b5f813590506105d7816105b3565b92915050565b5f602082840312156105f2576105f16105a6565b5b5f6105ff848285016105c9565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61063182610608565b9050919050565b61064181610627565b82525050565b5f60208201905061065a5f830184610638565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610692816105aa565b82525050565b5f6106a38383610689565b60208301905092915050565b5f602082019050919050565b5f6106c582610660565b6106cf818561066a565b93506106da8361067a565b805f5b8381101561070a5781516106f18882610698565b97506106fc836106af565b9250506001810190506106dd565b5085935050505092915050565b5f6020820190508181035f83015261072f81846106bb565b905092915050565b61074081610627565b811461074a575f80fd5b50565b5f8135905061075b81610737565b92915050565b5f60208284031215610776576107756105a6565b5b5f6107838482850161074d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107f0826105aa565b91506107fb836105aa565b9250828203905081811115610813576108126107b9565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b5f610850826105aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610882576108816107b9565b5b600182019050919050565b5f82825260208201905092915050565b7f4552432d333634333a20546f70696320657869737473000000000000000000005f82015250565b5f6108d160168361088d565b91506108dc8261089d565b602082019050919050565b5f6020820190508181035f8301526108fe816108c5565b905091905056fea26469706673582212207ee1188b11ad1378e3d1f22a212825ffed7e575b5ba4a66ac0070b4bc26f782064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x93B DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8297846 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xC7B22551 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xDF09D604 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH2 0x3AD JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EE JUMPI DUP3 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0x78C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x1DB JUMPI PUSH1 0x1 DUP1 DUP4 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15B JUMPI PUSH2 0x15A PUSH2 0x78C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x78C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP3 PUSH32 0xB1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1EE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1E6 SWAP1 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x111 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x204 PUSH0 PUSH2 0x434 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274 SWAP1 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 PUSH32 0x1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x30B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x3AD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x59F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D3 PUSH2 0x206 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x432 JUMPI PUSH2 0x3F6 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x52D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x592 JUMPI DUP5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x56F JUMPI PUSH2 0x56E PUSH2 0x78C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x587 JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x59A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x553 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BC DUP2 PUSH2 0x5AA JUMP JUMPDEST DUP2 EQ PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D7 DUP2 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F2 JUMPI PUSH2 0x5F1 PUSH2 0x5A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5FF DUP5 DUP3 DUP6 ADD PUSH2 0x5C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x631 DUP3 PUSH2 0x608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65A PUSH0 DUP4 ADD DUP5 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x5AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6A3 DUP4 DUP4 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C5 DUP3 PUSH2 0x660 JUMP JUMPDEST PUSH2 0x6CF DUP2 DUP6 PUSH2 0x66A JUMP JUMPDEST SWAP4 POP PUSH2 0x6DA DUP4 PUSH2 0x67A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70A JUMPI DUP2 MLOAD PUSH2 0x6F1 DUP9 DUP3 PUSH2 0x698 JUMP JUMPDEST SWAP8 POP PUSH2 0x6FC DUP4 PUSH2 0x6AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x72F DUP2 DUP5 PUSH2 0x6BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x740 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP2 EQ PUSH2 0x74A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x75B DUP2 PUSH2 0x737 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x5A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x783 DUP5 DUP3 DUP6 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7F0 DUP3 PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP PUSH2 0x7FB DUP4 PUSH2 0x5AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x813 JUMPI PUSH2 0x812 PUSH2 0x7B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x850 DUP3 PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x882 JUMPI PUSH2 0x881 PUSH2 0x7B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552432D333634333A20546F7069632065786973747300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8D1 PUSH1 0x16 DUP4 PUSH2 0x88D JUMP JUMPDEST SWAP2 POP PUSH2 0x8DC DUP3 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8FE DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xE1188B11AD1378E3D1F22A212825FFED7E575B5BA4A66AC0070B4BC26F7820 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "268:2159:2:-:0;;;;;;;;;;;;;330:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;268:2159:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;268:2159:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 941,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isClaimTopicUnique_326": {
									"entryPoint": 1269,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_159": {
									"entryPoint": 1439,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1076,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addClaimTopic_218": {
									"entryPoint": 557,
									"id": 218,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getClaimTopics_281": {
									"entryPoint": 723,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 518,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeClaimTopic_271": {
									"entryPoint": 254,
									"id": 271,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 499,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 809,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6376:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:4"
															},
															"nodeType": "YulIf",
															"src": "766:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:4",
														"type": ""
													}
												],
												"src": "690:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:4",
														"type": ""
													}
												],
												"src": "1025:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:4",
														"type": ""
													}
												],
												"src": "1157:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1685:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1696:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1668:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1678:6:4",
														"type": ""
													}
												],
												"src": "1611:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1842:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1859:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1864:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1852:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1880:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1880:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1814:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1819:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1830:11:4",
														"type": ""
													}
												],
												"src": "1731:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1993:60:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2003:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2011:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2003:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2024:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2036:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2041:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:14:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1980:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1988:4:4",
														"type": ""
													}
												],
												"src": "1921:132:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2114:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2131:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2154:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2136:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2102:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2109:3:4",
														"type": ""
													}
												],
												"src": "2059:108:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2253:99:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2305:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2263:33:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:46:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:46:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2318:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2336:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:14:4"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2318:10:4"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2226:6:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2234:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2242:10:4",
														"type": ""
													}
												],
												"src": "2173:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2443:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2455:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:14:4"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "2443:4:4"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2420:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "2428:4:4",
														"type": ""
													}
												],
												"src": "2358:113:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:608:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2641:68:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2703:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2655:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:54:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2645:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2718:93:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2799:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2804:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2725:73:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:86:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2820:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2885:5:4"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2835:49:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:56:4"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "2824:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2900:21:4",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "2914:7:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2904:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2990:224:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3004:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3031:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3025:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3025:13:4"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3008:13:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3051:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3102:13:4"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3117:3:4"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3058:43:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3058:63:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3051:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3134:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3197:6:4"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3144:52:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3144:60:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2952:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2955:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2949:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2963:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2965:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2974:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2977:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2970:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2970:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2965:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2934:14:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2936:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2945:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "2940:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2930:284:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3223:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3230:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2610:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2617:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2626:3:4",
														"type": ""
													}
												],
												"src": "2507:732:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3393:225:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3403:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3415:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3403:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3450:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3461:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3469:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3465:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3495:116:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3606:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3503:93:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:108:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3495:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3365:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3377:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3388:4:4",
														"type": ""
													}
												],
												"src": "3245:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3667:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3724:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3733:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3736:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3726:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3726:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3690:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3715:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3697:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3697:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:43:4"
															},
															"nodeType": "YulIf",
															"src": "3677:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3660:5:4",
														"type": ""
													}
												],
												"src": "3624:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3804:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3814:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3836:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3823:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3814:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3879:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3852:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3852:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3782:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3790:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3798:5:4",
														"type": ""
													}
												],
												"src": "3752:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3963:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4009:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4011:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4011:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4011:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3984:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3993:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3980:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:32:4"
															},
															"nodeType": "YulIf",
															"src": "3973:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4102:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4117:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4131:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4121:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4146:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4181:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4192:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4177:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4177:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4201:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4156:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4156:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4146:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3933:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3944:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3956:6:4",
														"type": ""
													}
												],
												"src": "3897:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4260:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4277:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4280:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4270:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4374:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4377:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4367:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4367:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4391:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4232:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4466:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4563:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4553:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4584:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4587:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4577:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4577:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4418:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4649:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4659:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4682:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4664:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4659:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4693:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4716:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4698:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4693:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4727:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4739:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4742:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4727:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4769:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4771:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4771:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4771:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4760:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4766:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4757:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:11:4"
															},
															"nodeType": "YulIf",
															"src": "4754:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4635:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4638:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4644:4:4",
														"type": ""
													}
												],
												"src": "4604:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4832:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4852:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4842:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4946:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:4:4",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4970:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4973:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4963:15:4"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "4804:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5033:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5043:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5070:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5052:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5043:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5166:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5168:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5168:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5168:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5091:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5098:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5088:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5088:77:4"
															},
															"nodeType": "YulIf",
															"src": "5085:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5197:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5208:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5215:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5197:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5019:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5029:3:4",
														"type": ""
													}
												],
												"src": "4990:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5325:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5342:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5347:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5363:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5382:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5378:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5363:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5297:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5302:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5313:11:4",
														"type": ""
													}
												],
												"src": "5229:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5510:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5532:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5540:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5528:14:4"
																	},
																	{
																		"hexValue": "4552432d333634333a20546f70696320657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5544:24:4",
																		"type": "",
																		"value": "ERC-3643: Topic exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5521:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5502:6:4",
														"type": ""
													}
												],
												"src": "5404:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5728:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5738:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5804:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5809:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5745:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5910:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d",
																	"nodeType": "YulIdentifier",
																	"src": "5821:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5821:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5821:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5923:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5934:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5923:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5716:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5724:3:4",
														"type": ""
													}
												],
												"src": "5582:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6125:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6135:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6182:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6193:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6201:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6207:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6197:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6227:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6361:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6235:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6235:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6227:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6105:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6120:4:4",
														"type": ""
													}
												],
												"src": "5954:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC-3643: Topic exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80630829784614610064578063715018a6146100805780638da5cb5b1461008a578063c7b22551146100a8578063df09d604146100c4578063f2fde38b146100e2575b5f80fd5b61007e600480360381019061007991906105dd565b6100fe565b005b6100886101f3565b005b610092610206565b60405161009f9190610647565b60405180910390f35b6100c260048036038101906100bd91906105dd565b61022d565b005b6100cc6102d3565b6040516100d99190610717565b60405180910390f35b6100fc60048036038101906100f79190610761565b610329565b005b6101066103ad565b5f60018054905090505f5b818110156101ee57826001828154811061012e5761012d61078c565b5b905f5260205f200154036101db576001808361014a91906107e6565b8154811061015b5761015a61078c565b5b905f5260205f200154600182815481106101785761017761078c565b5b905f5260205f200181905550600180548061019657610195610819565b5b600190038181905f5260205f20015f90559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a26101ee565b80806101e690610846565b915050610111565b505050565b6101fb6103ad565b6102045f610434565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102356103ad565b61023e816104f5565b61027d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610274906108e7565b60405180910390fd5b600181908060018154018082558091505060019003905f5260205f20015f9091909190915055807f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d660405160405180910390a250565b6060600180548060200260200160405190810160405280929190818152602001828054801561031f57602002820191905f5260205f20905b81548152602001906001019080831161030b575b5050505050905090565b6103316103ad565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103989190610647565b60405180910390fd5b6103aa81610434565b50565b6103b561059f565b73ffffffffffffffffffffffffffffffffffffffff166103d3610206565b73ffffffffffffffffffffffffffffffffffffffff1614610432576103f661059f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104299190610647565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80600180548060200260200160405190810160405280929190818152602001828054801561054157602002820191905f5260205f20905b81548152602001906001019080831161052d575b505050505090505f60018054905090505f5b81811015610592578483828151811061056f5761056e61078c565b5b602002602001015103610587575f935050505061059a565b806001019050610553565b506001925050505b919050565b5f33905090565b5f80fd5b5f819050919050565b6105bc816105aa565b81146105c6575f80fd5b50565b5f813590506105d7816105b3565b92915050565b5f602082840312156105f2576105f16105a6565b5b5f6105ff848285016105c9565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61063182610608565b9050919050565b61064181610627565b82525050565b5f60208201905061065a5f830184610638565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610692816105aa565b82525050565b5f6106a38383610689565b60208301905092915050565b5f602082019050919050565b5f6106c582610660565b6106cf818561066a565b93506106da8361067a565b805f5b8381101561070a5781516106f18882610698565b97506106fc836106af565b9250506001810190506106dd565b5085935050505092915050565b5f6020820190508181035f83015261072f81846106bb565b905092915050565b61074081610627565b811461074a575f80fd5b50565b5f8135905061075b81610737565b92915050565b5f60208284031215610776576107756105a6565b5b5f6107838482850161074d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107f0826105aa565b91506107fb836105aa565b9250828203905081811115610813576108126107b9565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b5f610850826105aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610882576108816107b9565b5b600182019050919050565b5f82825260208201905092915050565b7f4552432d333634333a20546f70696320657869737473000000000000000000005f82015250565b5f6108d160168361088d565b91506108dc8261089d565b602082019050919050565b5f6020820190508181035f8301526108fe816108c5565b905091905056fea26469706673582212207ee1188b11ad1378e3d1f22a212825ffed7e575b5ba4a66ac0070b4bc26f782064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8297846 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xC7B22551 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xDF09D604 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH2 0x3AD JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EE JUMPI DUP3 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0x78C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x1DB JUMPI PUSH1 0x1 DUP1 DUP4 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15B JUMPI PUSH2 0x15A PUSH2 0x78C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x78C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP3 PUSH32 0xB1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1EE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1E6 SWAP1 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x111 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x204 PUSH0 PUSH2 0x434 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274 SWAP1 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 PUSH32 0x1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x30B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x3AD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x434 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x59F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D3 PUSH2 0x206 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x432 JUMPI PUSH2 0x3F6 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x52D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x592 JUMPI DUP5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x56F JUMPI PUSH2 0x56E PUSH2 0x78C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x587 JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x59A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x553 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BC DUP2 PUSH2 0x5AA JUMP JUMPDEST DUP2 EQ PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D7 DUP2 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F2 JUMPI PUSH2 0x5F1 PUSH2 0x5A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5FF DUP5 DUP3 DUP6 ADD PUSH2 0x5C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x631 DUP3 PUSH2 0x608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65A PUSH0 DUP4 ADD DUP5 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x5AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6A3 DUP4 DUP4 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C5 DUP3 PUSH2 0x660 JUMP JUMPDEST PUSH2 0x6CF DUP2 DUP6 PUSH2 0x66A JUMP JUMPDEST SWAP4 POP PUSH2 0x6DA DUP4 PUSH2 0x67A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70A JUMPI DUP2 MLOAD PUSH2 0x6F1 DUP9 DUP3 PUSH2 0x698 JUMP JUMPDEST SWAP8 POP PUSH2 0x6FC DUP4 PUSH2 0x6AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x72F DUP2 DUP5 PUSH2 0x6BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x740 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP2 EQ PUSH2 0x74A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x75B DUP2 PUSH2 0x737 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x5A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x783 DUP5 DUP3 DUP6 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7F0 DUP3 PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP PUSH2 0x7FB DUP4 PUSH2 0x5AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x813 JUMPI PUSH2 0x812 PUSH2 0x7B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x850 DUP3 PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x882 JUMPI PUSH2 0x881 PUSH2 0x7B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552432D333634333A20546F7069632065786973747300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8D1 PUSH1 0x16 DUP4 PUSH2 0x88D JUMP JUMPDEST SWAP2 POP PUSH2 0x8DC DUP3 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8FE DUP2 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xE1188B11AD1378E3D1F22A212825FFED7E575B5BA4A66AC0070B4BC26F7820 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "268:2159:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:412;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;646:231:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1629:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1097:412:2;1531:13:0;:11;:13::i;:::-;1173:14:2::1;1190:12;:19;;;;1173:36;;1224:9;1219:284;1243:6;1239:1;:10;1219:284;;;1293:11;1274:12;1287:1;1274:15;;;;;;;;:::i;:::-;;;;;;;;;;:30:::0;1270:223:::1;;1342:12;1364:1:::0;1355:6:::1;:10;;;;:::i;:::-;1342:24;;;;;;;;:::i;:::-;;;;;;;;;;1324:12;1337:1;1324:15;;;;;;;;:::i;:::-;;;;;;;;;:42;;;;1384:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1443:11;1425:30;;;;;;;;;;1473:5;;1270:223;1251:3;;;;;:::i;:::-;;;;1219:284;;;;1163:346;1097:412:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;646:231:2:-;1531:13:0;:11;:13::i;:::-;727:32:2::1;747:11;727:19;:32::i;:::-;719:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;797:12;815:11;797:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;858:11;842:28;;;;;;;;;;646:231:::0;:::o;1629:103::-;1678:16;1713:12;1706:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:103;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2002:423:2:-;2087:4;2103:28;2134:12;2103:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:14;2173:12;:19;;;;2156:36;;2207:9;2202:196;2226:6;2222:1;:10;2202:196;;;2272:10;2254:11;2266:1;2254:14;;;;;;;;:::i;:::-;;;;;;;;:28;2250:79;;2309:5;2302:12;;;;;;;2250:79;2370:3;;;;;2202:196;;;;2414:4;2407:11;;;;2002:423;;;;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:114::-;1678:6;1712:5;1706:12;1696:22;;1611:114;;;:::o;1731:184::-;1830:11;1864:6;1859:3;1852:19;1904:4;1899:3;1895:14;1880:29;;1731:184;;;;:::o;1921:132::-;1988:4;2011:3;2003:11;;2041:4;2036:3;2032:14;2024:22;;1921:132;;;:::o;2059:108::-;2136:24;2154:5;2136:24;:::i;:::-;2131:3;2124:37;2059:108;;:::o;2173:179::-;2242:10;2263:46;2305:3;2297:6;2263:46;:::i;:::-;2341:4;2336:3;2332:14;2318:28;;2173:179;;;;:::o;2358:113::-;2428:4;2460;2455:3;2451:14;2443:22;;2358:113;;;:::o;2507:732::-;2626:3;2655:54;2703:5;2655:54;:::i;:::-;2725:86;2804:6;2799:3;2725:86;:::i;:::-;2718:93;;2835:56;2885:5;2835:56;:::i;:::-;2914:7;2945:1;2930:284;2955:6;2952:1;2949:13;2930:284;;;3031:6;3025:13;3058:63;3117:3;3102:13;3058:63;:::i;:::-;3051:70;;3144:60;3197:6;3144:60;:::i;:::-;3134:70;;2990:224;2977:1;2974;2970:9;2965:14;;2930:284;;;2934:14;3230:3;3223:10;;2631:608;;;2507:732;;;;:::o;3245:373::-;3388:4;3426:2;3415:9;3411:18;3403:26;;3475:9;3469:4;3465:20;3461:1;3450:9;3446:17;3439:47;3503:108;3606:4;3597:6;3503:108;:::i;:::-;3495:116;;3245:373;;;;:::o;3624:122::-;3697:24;3715:5;3697:24;:::i;:::-;3690:5;3687:35;3677:63;;3736:1;3733;3726:12;3677:63;3624:122;:::o;3752:139::-;3798:5;3836:6;3823:20;3814:29;;3852:33;3879:5;3852:33;:::i;:::-;3752:139;;;;:::o;3897:329::-;3956:6;4005:2;3993:9;3984:7;3980:23;3976:32;3973:119;;;4011:79;;:::i;:::-;3973:119;4131:1;4156:53;4201:7;4192:6;4181:9;4177:22;4156:53;:::i;:::-;4146:63;;4102:117;3897:329;;;;:::o;4232:180::-;4280:77;4277:1;4270:88;4377:4;4374:1;4367:15;4401:4;4398:1;4391:15;4418:180;4466:77;4463:1;4456:88;4563:4;4560:1;4553:15;4587:4;4584:1;4577:15;4604:194;4644:4;4664:20;4682:1;4664:20;:::i;:::-;4659:25;;4698:20;4716:1;4698:20;:::i;:::-;4693:25;;4742:1;4739;4735:9;4727:17;;4766:1;4760:4;4757:11;4754:37;;;4771:18;;:::i;:::-;4754:37;4604:194;;;;:::o;4804:180::-;4852:77;4849:1;4842:88;4949:4;4946:1;4939:15;4973:4;4970:1;4963:15;4990:233;5029:3;5052:24;5070:5;5052:24;:::i;:::-;5043:33;;5098:66;5091:5;5088:77;5085:103;;5168:18;;:::i;:::-;5085:103;5215:1;5208:5;5204:13;5197:20;;4990:233;;;:::o;5229:169::-;5313:11;5347:6;5342:3;5335:19;5387:4;5382:3;5378:14;5363:29;;5229:169;;;;:::o;5404:172::-;5544:24;5540:1;5532:6;5528:14;5521:48;5404:172;:::o;5582:366::-;5724:3;5745:67;5809:2;5804:3;5745:67;:::i;:::-;5738:74;;5821:93;5910:3;5821:93;:::i;:::-;5939:2;5934:3;5930:12;5923:19;;5582:366;;;:::o;5954:419::-;6120:4;6158:2;6147:9;6143:18;6135:26;;6207:9;6201:4;6197:20;6193:1;6182:9;6178:17;6171:47;6235:131;6361:4;6235:131;:::i;:::-;6227:139;;5954:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "472600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addClaimTopic(uint256)": "infinite",
								"getClaimTopics()": "infinite",
								"owner()": "2537",
								"removeClaimTopic(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_isClaimTopicUnique(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 330,
									"end": 340,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 2427,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ee1188b11ad1378e3d1f22a212825ffed7e575b5ba4a66ac0070b4bc26f782064736f6c63430008140033",
									".code": [
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "8297846"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "C7B22551"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "DF09D604"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 268,
											"end": 2427,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1097,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1097,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 646,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 646,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 646,
											"end": 877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 646,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 646,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 646,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 646,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1629,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1629,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1249,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1288,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1274,
											"end": 1289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1270,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1361,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1355,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1355,
											"end": 1365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1355,
											"end": 1365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1342,
											"end": 1366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1337,
											"end": 1338,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1324,
											"end": 1339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1339,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1366,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1384,
											"end": 1402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1402,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1454,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "B1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5"
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1455,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1473,
											"end": 1478,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1270,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1251,
											"end": 1254,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 646,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 727,
											"end": 759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 747,
											"end": 758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 727,
											"end": 746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 727,
											"end": 759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 727,
											"end": 759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 727,
											"end": 759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 719,
											"end": 786,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 719,
											"end": 786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 797,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 815,
											"end": 826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 827,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 858,
											"end": 869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6"
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 870,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2425,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2002,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2232,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2282,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2254,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2282,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2250,
											"end": 2329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2329,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2250,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2425,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2002,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2425,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2154,
											"end": 2159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2136,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2305,
											"end": 2308,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2263,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2464,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2358,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2655,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2802,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2725,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2811,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2835,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2962,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3115,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3058,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3121,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3144,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2990,
											"end": 3214,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 3239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3392,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3428,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3485,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3439,
											"end": 3486,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3503,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3715,
											"end": 3720,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3697,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3722,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3843,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3852,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4007,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3984,
											"end": 3991,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 4003,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4008,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4011,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4156,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4412,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4232,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4357,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4277,
											"end": 4278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4358,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4374,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4405,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4398,
											"end": 4399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4598,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4418,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4466,
											"end": 4543,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4560,
											"end": 4561,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4553,
											"end": 4568,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4592,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4664,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4659,
											"end": 4684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4659,
											"end": 4684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4698,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4718,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4768,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4771,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4984,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4804,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4929,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4930,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4949,
											"end": 4953,
											"name": "PUSH",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4939,
											"end": 4954,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4978,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5070,
											"end": 5075,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5052,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5168,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5216,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5208,
											"end": 5213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5335,
											"end": 5354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5391,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5382,
											"end": 5385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5392,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5576,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5404,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5568,
											"name": "PUSH",
											"source": 4,
											"value": "4552432D333634333A20546F7069632065786973747300000000000000000000"
										},
										{
											"begin": 5540,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5569,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5948,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5582,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5727,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5809,
											"end": 5811,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5804,
											"end": 5807,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5745,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5745,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5910,
											"end": 5913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5821,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5914,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5821,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 6373,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5954,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6207,
											"end": 6216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6217,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6191,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6171,
											"end": 6218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6235,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6361,
											"end": 6365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6235,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6235,
											"end": 6366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6235,
											"end": 6366,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6235,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6366,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 6373,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 6373,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 6373,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 6373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/registry/ClaimTopicsRegistry.sol",
								"contracts/registry/interface/IClaimTopicsRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"owner()": "8da5cb5b",
							"removeClaimTopic(uint256)": "08297846",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A registry for managing claim topics.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"Can only be called by the owner of the contract. Emits a ClaimTopicAdded event.\",\"params\":{\"_claimTopic\":\"The claim topic to add.\"}},\"getClaimTopics()\":{\"returns\":{\"_0\":\"uint256[] An array of claim topics.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeClaimTopic(uint256)\":{\"details\":\"Can only be called by the owner of the contract. Emits a ClaimTopicRemoved event.\",\"params\":{\"_claimTopic\":\"The claim topic to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_claimTopics\":{\"details\":\"An array to hold all required claim topics.\"}},\"title\":\"ERC-3643 - ClaimTopicsRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{\"addClaimTopic(uint256)\":{\"notice\":\"Adds a claim topic to the registry.\"},\"getClaimTopics()\":{\"notice\":\"Retrieves all claim topics from the registry.\"},\"removeClaimTopic(uint256)\":{\"notice\":\"Removes a claim topic from the registry.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/ClaimTopicsRegistry.sol\":\"ClaimTopicsRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe6dd1bb1b56d51404c2664bf6a0fce775e228e0b21af652072be31534e72728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c60f1471735a5f3bde3c627f9da51ddf7cc28b4d536cc99ff744c8d38e4ab895\",\"dweb:/ipfs/Qmap8wDcLTZaPjzv6g8mrrFX6h7qmzWaM2cABndwvSAzA8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/registry/ClaimTopicsRegistry.sol\":{\"keccak256\":\"0xd527770dc0e8f4001bb178228b4a0aee1ae26a66be00ba6e821bc814e27a5788\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f36c7818163a469b4529dc73d0dc61908e6aea42cc0425c7bab1b99cacb6450d\",\"dweb:/ipfs/QmNTqxoi6vNrVc95P6aT1HVqBxSmLyYJijDdjeLcuYieYT\"]},\"contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x017f014ce235fc76eb10724fed3a682c47230ba5ff5f3085d437a30294c00fdb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9f3b2ee96ecf05e6bb469619f38e469887d1eca34a65b397648f01a033afe3c1\",\"dweb:/ipfs/QmQb6p6HHMUWU5ezTFKpMgeDQcsKUDRMfuJt6uLQPUv6oK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/registry/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 192,
								"contract": "contracts/registry/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "_claimTopics",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ClaimTopicAdded(uint256)": {
								"notice": "this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"
							},
							"ClaimTopicRemoved(uint256)": {
								"notice": "this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"
							}
						},
						"kind": "user",
						"methods": {
							"addClaimTopic(uint256)": {
								"notice": "Adds a claim topic to the registry."
							},
							"getClaimTopics()": {
								"notice": "Retrieves all claim topics from the registry."
							},
							"removeClaimTopic(uint256)": {
								"notice": "Removes a claim topic from the registry."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/registry/interface/IClaimTopicsRegistry.sol": {
				"IClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaimTopic(uint256)": {
								"details": "Add a claim claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							},
							"getClaimTopics()": {
								"details": "Get the claim claim topics for the security token",
								"returns": {
									"_0": "Array of claim claim topics"
								}
							},
							"removeClaimTopic(uint256)": {
								"details": "Remove a claim claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"removeClaimTopic(uint256)": "08297846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"Add a claim claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"getClaimTopics()\":{\"details\":\"Get the claim claim topics for the security token\",\"returns\":{\"_0\":\"Array of claim claim topics\"}},\"removeClaimTopic(uint256)\":{\"details\":\"Remove a claim claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/interface/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x017f014ce235fc76eb10724fed3a682c47230ba5ff5f3085d437a30294c00fdb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9f3b2ee96ecf05e6bb469619f38e469887d1eca34a65b397648f01a033afe3c1\",\"dweb:/ipfs/QmQb6p6HHMUWU5ezTFKpMgeDQcsKUDRMfuJt6uLQPUv6oK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicAdded(uint256)": {
								"notice": "this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"
							},
							"ClaimTopicRemoved(uint256)": {
								"notice": "this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/registry/ClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/registry/ClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"ClaimTopicsRegistry": [
							327
						],
						"Context": [
							177
						],
						"IClaimTopicsRegistry": [
							359
						],
						"Ownable": [
							147
						]
					},
					"id": 328,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 328,
							"sourceUnit": 148,
							"src": "61:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/registry/interface/IClaimTopicsRegistry.sol",
							"file": "contracts/registry/interface/IClaimTopicsRegistry.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 328,
							"sourceUnit": 360,
							"src": "114:63:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "IClaimTopicsRegistry",
										"nameLocations": [
											"300:20:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 359,
										"src": "300:20:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "300:20:2"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 186,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "330:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 187,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "334:6:2",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "330:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 185,
										"name": "Ownable",
										"nameLocations": [
											"322:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "322:7:2"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "322:19:2"
								}
							],
							"canonicalName": "ClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "179:89:2",
								"text": "@title ERC-3643 - ClaimTopicsRegistry\n @dev A registry for managing claim topics."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327,
								147,
								177,
								359
							],
							"name": "ClaimTopicsRegistry",
							"nameLocation": "277:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "348:52:2",
										"text": "@dev An array to hold all required claim topics."
									},
									"id": 192,
									"mutability": "mutable",
									"name": "_claimTopics",
									"nameLocation": "423:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "405:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 190,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "405:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 191,
										"nodeType": "ArrayTypeName",
										"src": "405:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "709:168:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 202,
																	"name": "_claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "747:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 201,
																"name": "_isClaimTopicUnique",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "727:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "727:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a20546f70696320657869737473",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "761:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d",
																"typeString": "literal_string \"ERC-3643: Topic exists\""
															},
															"value": "ERC-3643: Topic exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56ef8d9675c6a135d916bfeb1e9c2bb91126cc1e5d3f7be085b64307b1f8619d",
																"typeString": "literal_string \"ERC-3643: Topic exists\""
															}
														],
														"id": 200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "719:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "719:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "719:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "_claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "815:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 207,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "797:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "810:4:2",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "797:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "797:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "797:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 214,
															"name": "_claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "858:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "ClaimTopicAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "842:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "842:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "837:33:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "442:199:2",
										"text": "@notice Adds a claim topic to the registry.\n @dev Can only be called by the owner of the contract.\n Emits a ClaimTopicAdded event.\n @param _claimTopic The claim topic to add."
									},
									"functionSelector": "c7b22551",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyOwner",
												"nameLocations": [
													"699:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "699:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "699:9:2"
										}
									],
									"name": "addClaimTopic",
									"nameLocation": "655:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "677:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "669:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:21:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:0:2"
									},
									"scope": 327,
									"src": "646:231:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										351
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1163:346:2",
										"statements": [
											{
												"assignments": [
													227
												],
												"declarations": [
													{
														"constant": false,
														"id": 227,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1181:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "1173:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1173:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"expression": {
														"id": 228,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1190:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1203:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1190:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1173:36:2"
											},
											{
												"body": {
													"id": 268,
													"nodeType": "Block",
													"src": "1256:247:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 241,
																		"name": "_claimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1274:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 243,
																	"indexExpression": {
																		"id": 242,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "1287:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1274:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 244,
																	"name": "_claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "1293:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1274:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 267,
															"nodeType": "IfStatement",
															"src": "1270:223:2",
															"trueBody": {
																"id": 266,
																"nodeType": "Block",
																"src": "1306:187:2",
																"statements": [
																	{
																		"expression": {
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 246,
																					"name": "_claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 192,
																					"src": "1324:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 248,
																				"indexExpression": {
																					"id": 247,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 232,
																					"src": "1337:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1324:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 249,
																					"name": "_claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 192,
																					"src": "1342:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 253,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 250,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 227,
																						"src": "1355:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 251,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1364:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1355:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1342:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1324:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"nodeType": "ExpressionStatement",
																		"src": "1324:42:2"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 256,
																					"name": "_claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 192,
																					"src": "1384:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1397:3:2",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "1384:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1384:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 260,
																		"nodeType": "ExpressionStatement",
																		"src": "1384:18:2"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 262,
																					"name": "_claimTopic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 221,
																					"src": "1443:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 261,
																				"name": "ClaimTopicRemoved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 339,
																				"src": "1425:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1425:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 264,
																		"nodeType": "EmitStatement",
																		"src": "1420:35:2"
																	},
																	{
																		"id": 265,
																		"nodeType": "Break",
																		"src": "1473:5:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 235,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1239:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 236,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1243:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1239:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 269,
												"initializationExpression": {
													"assignments": [
														232
													],
													"declarations": [
														{
															"constant": false,
															"id": 232,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1232:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 269,
															"src": "1224:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 231,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 234,
													"initialValue": {
														"hexValue": "30",
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1236:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1224:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1251:3:2",
														"subExpression": {
															"id": 238,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1251:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 240,
													"nodeType": "ExpressionStatement",
													"src": "1251:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1219:284:2"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "883:209:2",
										"text": "@notice Removes a claim topic from the registry.\n @dev Can only be called by the owner of the contract.\n Emits a ClaimTopicRemoved event.\n @param _claimTopic The claim topic to remove."
									},
									"functionSelector": "08297846",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 223,
												"name": "onlyOwner",
												"nameLocations": [
													"1153:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1153:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1153:9:2"
										}
									],
									"name": "removeClaimTopic",
									"nameLocation": "1106:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1131:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1123:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:21:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:0:2"
									},
									"scope": 327,
									"src": "1097:412:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										358
									],
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "1696:36:2",
										"statements": [
											{
												"expression": {
													"id": 278,
													"name": "_claimTopics",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "1713:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 277,
												"id": 279,
												"nodeType": "Return",
												"src": "1706:19:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1515:109:2",
										"text": "@notice Retrieves all claim topics from the registry.\n @return uint256[] An array of claim topics."
									},
									"functionSelector": "df09d604",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "1638:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1678:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 274,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1678:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 275,
													"nodeType": "ArrayTypeName",
													"src": "1678:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:18:2"
									},
									"scope": 327,
									"src": "1629:103:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2093:332:2",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "claimTopics",
														"nameLocation": "2120:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2103:28:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 291,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2103:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 292,
															"nodeType": "ArrayTypeName",
															"src": "2103:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"id": 294,
													"name": "_claimTopics",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "2134:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2103:43:2"
											},
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2164:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2156:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"expression": {
														"id": 298,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2173:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2186:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2173:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2156:36:2"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2236:162:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 308,
																		"name": "claimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "2254:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 310,
																	"indexExpression": {
																		"id": 309,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "2266:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2254:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 311,
																	"name": "claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "2272:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2254:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 316,
															"nodeType": "IfStatement",
															"src": "2250:79:2",
															"trueBody": {
																"id": 315,
																"nodeType": "Block",
																"src": "2284:45:2",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2309:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 288,
																		"id": 314,
																		"nodeType": "Return",
																		"src": "2302:12:2"
																	}
																]
															}
														},
														{
															"id": 320,
															"nodeType": "UncheckedBlock",
															"src": "2342:46:2",
															"statements": [
																{
																	"expression": {
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2370:3:2",
																		"subExpression": {
																			"id": 317,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "2372:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 319,
																	"nodeType": "ExpressionStatement",
																	"src": "2370:3:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2222:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 306,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "2226:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2222:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														302
													],
													"declarations": [
														{
															"constant": false,
															"id": 302,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2215:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2207:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 301,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2207:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 304,
													"initialValue": {
														"hexValue": "30",
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2219:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2207:13:2"
												},
												"nodeType": "ForStatement",
												"src": "2202:196:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2414:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 324,
												"nodeType": "Return",
												"src": "2407:11:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "1738:259:2",
										"text": "@notice Checks if a claim topic is unique in the registry.\n @dev Private function to check the uniqueness of a claim topic.\n @param claimTopic The claim topic to check.\n @return bool True if the claim topic is unique, false otherwise."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isClaimTopicUnique",
									"nameLocation": "2011:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "2048:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2040:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:34:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2087:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:6:2"
									},
									"scope": 327,
									"src": "2002:423:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 328,
							"src": "268:2159:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								334,
								339
							]
						}
					],
					"src": "36:2392:2"
				},
				"id": 2
			},
			"contracts/registry/interface/IClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/registry/interface/IClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"IClaimTopicsRegistry": [
							359
						]
					},
					"id": 360,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 329,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 359,
							"linearizedBaseContracts": [
								359
							],
							"name": "IClaimTopicsRegistry",
							"nameLocation": "71:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "98:241:3",
										"text": "  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n  the event is emitted by the 'addClaimTopic' function\n  `claimTopic` is the required claim added to the Claim Topics Registry"
									},
									"eventSelector": "01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6",
									"id": 334,
									"name": "ClaimTopicAdded",
									"nameLocation": "350:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "382:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "366:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:28:3"
									},
									"src": "344:50:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "400:252:3",
										"text": "  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n  the event is emitted by the 'removeClaimTopic' function\n  `claimTopic` is the required claim removed from the Claim Topics Registry"
									},
									"eventSelector": "0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5",
									"id": 339,
									"name": "ClaimTopicRemoved",
									"nameLocation": "663:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "697:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "681:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:28:3"
									},
									"src": "657:52:3"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "715:278:3",
										"text": " @dev Add a claim claim topic (For example: KYC=1, AML=2).\n Only owner can call.\n emits `ClaimTopicAdded` event\n cannot add more than 15 topics for 1 token as adding more could create gas issues\n @param _claimTopic The claim topic index"
									},
									"functionSelector": "c7b22551",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimTopic",
									"nameLocation": "1007:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1029:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1021:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:21:3"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:0:3"
									},
									"scope": 359,
									"src": "998:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1057:198:3",
										"text": "  @dev Remove a claim claim topic (For example: KYC=1, AML=2).\n  Only owner can call.\n  emits `ClaimTopicRemoved` event\n  @param _claimTopic The claim topic index"
									},
									"functionSelector": "08297846",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimTopic",
									"nameLocation": "1269:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1294:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1286:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:21:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1315:0:3"
									},
									"scope": 359,
									"src": "1260:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1322:118:3",
										"text": "  @dev Get the claim claim topics for the security token\n  @return Array of claim claim topics"
									},
									"functionSelector": "df09d604",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "1454:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1468:2:3"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1494:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 354,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1494:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 355,
													"nodeType": "ArrayTypeName",
													"src": "1494:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:18:3"
									},
									"scope": 359,
									"src": "1445:67:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 360,
							"src": "61:1453:3",
							"usedErrors": [],
							"usedEvents": [
								334,
								339
							]
						}
					],
					"src": "36:1479:3"
				},
				"id": 3
			}
		}
	}
}