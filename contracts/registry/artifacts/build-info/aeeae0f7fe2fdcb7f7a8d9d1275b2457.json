{
	"id": "aeeae0f7fe2fdcb7f7a8d9d1275b2457",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/registry/ClaimIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"contracts/registry/interface/IClaimIssuersRegistry.sol\";\n\n/// @title ERC-3643 - ClaimIssuersRegistry\n/// @dev This contract maintains a registry of claim issuers and their associated claim topics for the ERC-3643 standard.\ncontract ClaimIssuersRegistry is IClaimIssuersRegistry, Ownable(msg.sender) {\n    /// @dev Array containing all ClaimIssuers identity contract address.\n    IClaimIssuer[] private _claimIssuers;\n\n    /// @dev Mapping between a claim issuer address and its corresponding claimTopics.\n    mapping(IClaimIssuer => uint256[]) private _claimIssuerClaimTopics;\n\n    /// @dev Mapping between a claim topic and the allowed claim issuers for it.\n    mapping(uint256 => IClaimIssuer[]) private _claimTopicToClaimIssuers;\n\n    /// @notice Adds a claim issuer to the Claim Issuers Registry.\n    /// @param _claimIssuer The address of the claim issuer.\n    /// @param _claimTopics An array of claim topics associated with the claim issuer.\n    /// Requirements:\n    /// - The caller must be the owner of the contract.\n    /// - The claim issuer address must not be zero.\n    /// - The claim issuer must not already exist in the registry.\n    /// - The claim topics array must not be empty.\n    /// - It is recommended to add a reasonable number of claim issuers at once.\n    /// Emits a ClaimIssuerAdded event.\n    function addClaimIssuer(\n        IClaimIssuer _claimIssuer,\n        uint256[] calldata _claimTopics\n    ) external onlyOwner {\n        require(\n            address(_claimIssuer) != address(0),\n            \"ERC-3643: Invalid zero address\"\n        );\n        require(\n            _claimIssuerClaimTopics[_claimIssuer].length == 0,\n            \"ERC-3643: Issuer already exists\"\n        );\n        uint length = _claimTopics.length;\n        require(length != 0, \"ERC-3643: Empty claim topics\");\n\n        _claimIssuers.push(_claimIssuer);\n        _claimIssuerClaimTopics[_claimIssuer] = _claimTopics;\n\n        for (uint256 i = 0; i < length; ) {\n            _claimTopicToClaimIssuers[_claimTopics[i]].push(_claimIssuer);\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit ClaimIssuerAdded(_claimIssuer, _claimTopics);\n    }\n\n    /// @notice Removes a claim issuer from the Claim Issuers Registry.\n    /// @param _claimIssuer The address of the claim issuer to be removed.\n    /// Requirements:\n    /// - The caller must be the owner of the contract.\n    /// - The claim issuer must exist in the registry.\n    /// Emits a ClaimIssuerRemoved event.\n    function removeClaimIssuer(IClaimIssuer _claimIssuer) external onlyOwner {\n        uint claimIssuerTopicsLength = _claimIssuerClaimTopics[_claimIssuer]\n            .length;\n        require(claimIssuerTopicsLength != 0, \"ERC-3643: Not a claim issuer\");\n        uint256 claimIssuerlength = _claimIssuers.length;\n        for (uint256 i = 0; i < claimIssuerlength; ) {\n            if (_claimIssuers[i] == _claimIssuer) {\n                _claimIssuers[i] = _claimIssuers[claimIssuerlength - 1];\n                _claimIssuers.pop();\n                break;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        _removeClaimIssuerFromAllClaimTopics(\n            _claimIssuer,\n            claimIssuerTopicsLength\n        );\n\n        delete _claimIssuerClaimTopics[_claimIssuer];\n        emit ClaimIssuerRemoved(_claimIssuer);\n    }\n\n    /// @notice Updates the claim topics associated with a claim issuer.\n    /// @param _claimIssuer The address of the claim issuer.\n    /// @param _claimTopics An array of claim topics to be associated with the claim issuer.\n    /// Requirements:\n    /// - The caller must be the owner of the contract.\n    /// - The claim issuer must exist in the registry.\n    /// - The claim topics array must not be empty.\n    /// Emits a ClaimTopicsUpdated event.\n    function updateIssuerClaimTopics(\n        IClaimIssuer _claimIssuer,\n        uint256[] calldata _claimTopics\n    ) external onlyOwner {\n        require(_claimTopics.length != 0, \"ERC-3643: No claim topics\");\n        uint claimIssuerTopicsLength = _claimIssuerClaimTopics[_claimIssuer]\n            .length;\n        require(claimIssuerTopicsLength != 0, \"ERC-3643: Not a claim issuer\");\n\n        _updateIssuerAcrossAllTopics(_claimIssuer);\n\n        _claimIssuerClaimTopics[_claimIssuer] = _claimTopics;\n\n        emit ClaimTopicsUpdated(_claimIssuer, _claimTopics);\n    }\n\n    /// @notice Returns an array of all claim issuers in the registry.\n    /// @return A memory array of claim issuers.\n    function getClaimIssuers() external view returns (IClaimIssuer[] memory) {\n        return _claimIssuers;\n    }\n\n    /// @notice Returns an array of all claim issuers associated with a specific claim topic.\n    /// @param claimTopic The claim topic to find associated claim issuers for.\n    /// @return A memory array of claim issuers.\n    function getClaimIssuersForClaimTopic(\n        uint256 claimTopic\n    ) external view returns (IClaimIssuer[] memory) {\n        return _claimTopicToClaimIssuers[claimTopic];\n    }\n\n    /// @notice Checks if an address is a claim issuer in the registry.\n    /// @param _issuer The address to check.\n    /// @return True if the address is a claim issuer, false otherwise.\n    function isClaimIssuer(IClaimIssuer _issuer) external view returns (bool) {\n        return _isClaimIssuer(_issuer);\n    }\n\n    /// @notice Returns an array of claim topics associated with a specific claim issuer.\n    /// @param _claimIssuer The claim issuer to find associated claim topics for.\n    /// @return A memory array of claim topics.\n    function getClaimIssuerClaimTopics(\n        IClaimIssuer _claimIssuer\n    ) external view returns (uint256[] memory) {\n        require(_isClaimIssuer(_claimIssuer), \"ERC-3643: Issuer doesn't exist\");\n        return _claimIssuerClaimTopics[_claimIssuer];\n    }\n\n    /// @notice Checks if a claim issuer has a specific claim topic.\n    /// @dev This function checks if a specific claim topic is associated with a claim issuer.\n    /// @param _issuer The claim issuer to check.\n    /// @param _claimTopic The claim topic to check.\n    /// @return bool True if the claim issuer has the claim topic, otherwise false.\n    function hasClaimTopic(\n        IClaimIssuer _issuer,\n        uint256 _claimTopic\n    ) external view returns (bool) {\n        uint256 length = _claimIssuerClaimTopics[_issuer].length;\n        uint256[] memory claimTopics = _claimIssuerClaimTopics[_issuer];\n        for (uint256 i = 0; i < length; ) {\n            if (claimTopics[i] == _claimTopic) {\n                return true;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        return false;\n    }\n\n    /// @dev Removes a claim issuer from all associated claim topics.\n    /// @param claimIssuer The claim issuer to be removed.\n    /// @param length The number of claim topics associated with the claim issuer.\n    function _removeClaimIssuerFromAllClaimTopics(\n        IClaimIssuer claimIssuer,\n        uint length\n    ) private {\n        for (uint256 i = 0; i < length; ) {\n            uint256 claimTopic = _claimIssuerClaimTopics[claimIssuer][i];\n\n            _removeIssuerFromTopic(claimIssuer, claimTopic);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /// @dev Updates a claim issuer across all associated claim topics.\n    ///      The function removes the claim issuer from each topic, and then adds it back.\n    /// @param claimIssuer The claim issuer to be updated.\n    function _updateIssuerAcrossAllTopics(IClaimIssuer claimIssuer) private {\n        uint256[] memory claimTopics = _claimIssuerClaimTopics[claimIssuer];\n        uint length = claimTopics.length;\n\n        for (uint256 i = 0; i < length; ) {\n            uint256 claimTopic = claimTopics[i];\n\n            _removeIssuerFromTopic(claimIssuer, claimTopic);\n            _claimTopicToClaimIssuers[claimTopics[i]].push(claimIssuer);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /// @dev Removes a claim issuer from a specific claim topic.\n    ///      The function identifies and replaces the claim issuer with the last element in the list\n    ///      then removes the last element, effectively removing the issuer from the list.\n    /// @param claimIssuer The claim issuer to be removed.\n    /// @param claimTopic The claim topic identifier from which the issuer is to be removed.\n    function _removeIssuerFromTopic(\n        IClaimIssuer claimIssuer,\n        uint claimTopic\n    ) private {\n        IClaimIssuer[] memory claimIssuers = _claimTopicToClaimIssuers[\n            claimTopic\n        ];\n        uint length = claimIssuers.length;\n\n        for (uint j = 0; j < length; ) {\n            if (claimIssuers[j] == claimIssuer) {\n                _claimTopicToClaimIssuers[claimTopic][j] = claimIssuers[\n                    length - 1\n                ];\n                _claimTopicToClaimIssuers[claimTopic].pop();\n                break;\n            }\n            unchecked {\n                ++j;\n            }\n        }\n    }\n\n    /// @dev Checks if an address is a claim issuer.\n    /// @param _issuer The address to check.\n    /// @return bool Returns true if the address is a claim issuer, and false otherwise.\n    function _isClaimIssuer(IClaimIssuer _issuer) private view returns (bool) {\n        return (_claimIssuerClaimTopics[_issuer].length != 0);\n    }\n}\n"
			},
			"contracts/registry/interface/IClaimIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface IClaimIssuersRegistry {\n    /**\n     *  this event is emitted when a claim issuer is added in the registry.\n     *  the event is emitted by the addClaimIssuer function\n     *  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the claim issuer is allowed to emit\n     */\n    event ClaimIssuerAdded(\n        IClaimIssuer indexed claimIssuer,\n        uint256[] claimTopics\n    );\n\n    /**\n     *  this event is emitted when a claim issuer is removed from the registry.\n     *  the event is emitted by the removeClaimIssuer function\n     *  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract\n     */\n    event ClaimIssuerRemoved(IClaimIssuer indexed claimIssuer);\n\n    /**\n     *  this event is emitted when the set of claim topics is changed for a given claim issuer.\n     *  the event is emitted by the updateIssuerClaimTopics function\n     *  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the claim issuer is allowed to emit\n     */\n    event ClaimTopicsUpdated(\n        IClaimIssuer indexed claimIssuer,\n        uint256[] claimTopics\n    );\n\n    /**\n     *  @dev registers a ClaimIssuer contract as claim claim issuer.\n     *  Requires that a ClaimIssuer contract doesn't already exist\n     *  Requires that the claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  Requires that there is no more than 50 Claim issuers\n     *  @param _claimIssuer The ClaimIssuer contract address of the claim claim issuer.\n     *  @param _claimTopics the set of claim topics that the claim issuer is allowed to emit\n     *  This function can only be called by the owner of the Claim Issuers Registry contract\n     *  emits a `ClaimIssuerAdded` event\n     */\n    function addClaimIssuer(\n        IClaimIssuer _claimIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    /**\n     *  @dev Removes the ClaimIssuer contract of a claim claim issuer.\n     *  Requires that the claim issuer contract to be registered first\n     *  @param _claimIssuer the claim issuer to remove.\n     *  This function can only be called by the owner of the Claim Issuers Registry contract\n     *  emits a `ClaimIssuerRemoved` event\n     */\n    function removeClaimIssuer(IClaimIssuer _claimIssuer) external;\n\n    /**\n     *  @dev Updates the set of claim topics that a claim issuer is allowed to emit.\n     *  Requires that this ClaimIssuer contract already exists in the registry\n     *  Requires that the provided claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  @param _claimIssuer the claim issuer to update.\n     *  @param _claimTopics the set of claim topics that the claim issuer is allowed to emit\n     *  This function can only be called by the owner of the Claim Issuers Registry contract\n     *  emits a `ClaimTopicsUpdated` event\n     */\n    function updateIssuerClaimTopics(\n        IClaimIssuer _claimIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    /**\n     *  @dev Function for getting all the claim claim issuers stored.\n     *  @return array of all claim issuers registered.\n     */\n    function getClaimIssuers() external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Function for getting all the claim issuer allowed for a given claim topic.\n     *  @param claimTopic the claim topic to get the claim issuers for.\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\n     */\n    function getClaimIssuersForClaimTopic(\n        uint256 claimTopic\n    ) external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Checks if the ClaimIssuer contract is claim\n     *  @param _issuer the address of the ClaimIssuer contract\n     *  @return true if the issuer is claim, false otherwise.\n     */\n    function isClaimIssuer(IClaimIssuer _issuer) external view returns (bool);\n\n    /**\n     *  @dev Function for getting all the claim topic of claim claim issuer\n     *  Requires the provided ClaimIssuer contract to be registered in the claim issuers registry.\n     *  @param _claimIssuer the claim issuer concerned.\n     *  @return The set of claim topics that the claim issuer is allowed to emit\n     */\n    function getClaimIssuerClaimTopics(\n        IClaimIssuer _claimIssuer\n    ) external view returns (uint256[] memory);\n\n    /**\n     *  @dev Function for checking if the claim claim issuer is allowed\n     *  to emit a certain claim topic\n     *  @param _issuer the address of the claim issuer's ClaimIssuer contract\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n     *  @return true if the issuer is claim for this claim topic.\n     */\n    function hasClaimTopic(\n        IClaimIssuer _issuer,\n        uint256 _claimTopic\n    ) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.17;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.20;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"IClaimIssuer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "ClaimRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "isClaimRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "revokeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "revokeClaimBySignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							},
							"ClaimRevoked(bytes)": {
								"details": "Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"isClaimRevoked(bytes)": {
								"details": "Returns revocation status of a claim.",
								"params": {
									"_sig": "the signature of the claim"
								},
								"returns": {
									"_0": "isRevoked true if the claim is revoked and false otherwise"
								}
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"revokeClaim(bytes32,address)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"_claimId": "the id of the claim",
									"_identity": "the address of the identity contract"
								},
								"returns": {
									"_0": "isRevoked true when the claim is revoked"
								}
							},
							"revokeClaimBySignature(bytes)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"signature": "the signature of the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"isClaimRevoked(bytes)": "2646b264",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5",
							"revokeClaim(bytes32,address)": "73c33708",
							"revokeClaimBySignature(bytes)": "9f7f9edd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xbb0ece96ebc110624705b3b6859367974ba6b17cff353df43a83b108680f0d26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55a65e7c5daab4b177604b00c68835377386390c05cee4dc26c91aef86af7237\",\"dweb:/ipfs/QmdYNJMYJxFnpaSQZafLpFPER9wyMkUZmGkQko1XrUMHP7\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x7ca841caeee4116062dba880a955796c773d1b0b35a7d69b67104d9e6bd2705a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc05e6f2872be12d06cfe630c13d1d6d74b5b9b587f0797615e5dac88e84f4c8\",\"dweb:/ipfs/Qme2h6ah6uYShmK5x3fgfsH7rCqYtSUns9tyRyKFJYef6c\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x60ac71cd3e106d656dcc26e6f58df6e8c487ce5d0cdeed6f5449cf974a24e587\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26716e36966cb392d6fa8f9a470b69ded94fedf7f9cdd5095af0028d194baa6d\",\"dweb:/ipfs/QmYJ7Lc4vk1LNHtqZPWtZSpStCepQRgzUWvVaGAb5yLFV8\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0xa3166f33baa94c9f2a010c8618fdd6038b4a64636eab809c50442c835f08f8dc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b84d33d807a86846807678787e89f01ee81903968506caf5bc55c36622670c80\",\"dweb:/ipfs/QmQxG5fp38FTzK22rArNMpknA276Ji5mrrEuaoCR7pwzsH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revokeClaim(bytes32,address)": {
								"notice": "will fetch the claim from the identity contract (unsafe)."
							}
						},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x7ca841caeee4116062dba880a955796c773d1b0b35a7d69b67104d9e6bd2705a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc05e6f2872be12d06cfe630c13d1d6d74b5b9b587f0797615e5dac88e84f4c8\",\"dweb:/ipfs/Qme2h6ah6uYShmK5x3fgfsH7rCqYtSUns9tyRyKFJYef6c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x60ac71cd3e106d656dcc26e6f58df6e8c487ce5d0cdeed6f5449cf974a24e587\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26716e36966cb392d6fa8f9a470b69ded94fedf7f9cdd5095af0028d194baa6d\",\"dweb:/ipfs/QmYJ7Lc4vk1LNHtqZPWtZSpStCepQRgzUWvVaGAb5yLFV8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x7ca841caeee4116062dba880a955796c773d1b0b35a7d69b67104d9e6bd2705a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc05e6f2872be12d06cfe630c13d1d6d74b5b9b587f0797615e5dac88e84f4c8\",\"dweb:/ipfs/Qme2h6ah6uYShmK5x3fgfsH7rCqYtSUns9tyRyKFJYef6c\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x60ac71cd3e106d656dcc26e6f58df6e8c487ce5d0cdeed6f5449cf974a24e587\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26716e36966cb392d6fa8f9a470b69ded94fedf7f9cdd5095af0028d194baa6d\",\"dweb:/ipfs/QmYJ7Lc4vk1LNHtqZPWtZSpStCepQRgzUWvVaGAb5yLFV8\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0xa3166f33baa94c9f2a010c8618fdd6038b4a64636eab809c50442c835f08f8dc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b84d33d807a86846807678787e89f01ee81903968506caf5bc55c36622670c80\",\"dweb:/ipfs/QmQxG5fp38FTzK22rArNMpknA276Ji5mrrEuaoCR7pwzsH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe6dd1bb1b56d51404c2664bf6a0fce775e228e0b21af652072be31534e72728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c60f1471735a5f3bde3c627f9da51ddf7cc28b4d536cc99ff744c8d38e4ab895\",\"dweb:/ipfs/Qmap8wDcLTZaPjzv6g8mrrFX6h7qmzWaM2cABndwvSAzA8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/registry/ClaimIssuersRegistry.sol": {
				"ClaimIssuersRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "claimIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "claimIssuer",
									"type": "address"
								}
							],
							"name": "ClaimIssuerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "claimIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addClaimIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								}
							],
							"name": "getClaimIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getClaimIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isClaimIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								}
							],
							"name": "removeClaimIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract maintains a registry of claim issuers and their associated claim topics for the ERC-3643 standard.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addClaimIssuer(address,uint256[])": {
								"params": {
									"_claimIssuer": "The address of the claim issuer.",
									"_claimTopics": "An array of claim topics associated with the claim issuer. Requirements: - The caller must be the owner of the contract. - The claim issuer address must not be zero. - The claim issuer must not already exist in the registry. - The claim topics array must not be empty. - It is recommended to add a reasonable number of claim issuers at once. Emits a ClaimIssuerAdded event."
								}
							},
							"getClaimIssuerClaimTopics(address)": {
								"params": {
									"_claimIssuer": "The claim issuer to find associated claim topics for."
								},
								"returns": {
									"_0": "A memory array of claim topics."
								}
							},
							"getClaimIssuers()": {
								"returns": {
									"_0": "A memory array of claim issuers."
								}
							},
							"getClaimIssuersForClaimTopic(uint256)": {
								"params": {
									"claimTopic": "The claim topic to find associated claim issuers for."
								},
								"returns": {
									"_0": "A memory array of claim issuers."
								}
							},
							"hasClaimTopic(address,uint256)": {
								"details": "This function checks if a specific claim topic is associated with a claim issuer.",
								"params": {
									"_claimTopic": "The claim topic to check.",
									"_issuer": "The claim issuer to check."
								},
								"returns": {
									"_0": "bool True if the claim issuer has the claim topic, otherwise false."
								}
							},
							"isClaimIssuer(address)": {
								"params": {
									"_issuer": "The address to check."
								},
								"returns": {
									"_0": "True if the address is a claim issuer, false otherwise."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeClaimIssuer(address)": {
								"params": {
									"_claimIssuer": "The address of the claim issuer to be removed. Requirements: - The caller must be the owner of the contract. - The claim issuer must exist in the registry. Emits a ClaimIssuerRemoved event."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"params": {
									"_claimIssuer": "The address of the claim issuer.",
									"_claimTopics": "An array of claim topics to be associated with the claim issuer. Requirements: - The caller must be the owner of the contract. - The claim issuer must exist in the registry. - The claim topics array must not be empty. Emits a ClaimTopicsUpdated event."
								}
							}
						},
						"stateVariables": {
							"_claimIssuerClaimTopics": {
								"details": "Mapping between a claim issuer address and its corresponding claimTopics."
							},
							"_claimIssuers": {
								"details": "Array containing all ClaimIssuers identity contract address."
							},
							"_claimTopicToClaimIssuers": {
								"details": "Mapping between a claim topic and the allowed claim issuers for it."
							}
						},
						"title": "ERC-3643 - ClaimIssuersRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/registry/ClaimIssuersRegistry.sol\":413:9582  contract ClaimIssuersRegistry is IClaimIssuersRegistry, Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/registry/ClaimIssuersRegistry.sol\":477:487  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/registry/ClaimIssuersRegistry.sol\":413:9582  contract ClaimIssuersRegistry is IClaimIssuersRegistry, Ownable(msg.sender) {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_11:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_12:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_17\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_11\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_13:\n    /* \"#utility.yul\":328:352   */\n  tag_19\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_6:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_21\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_13\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/registry/ClaimIssuersRegistry.sol\":413:9582  contract ClaimIssuersRegistry is IClaimIssuersRegistry, Ownable(msg.sender) {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":413:9582  contract ClaimIssuersRegistry is IClaimIssuersRegistry, Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6b2c56bd\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x6b2c56bd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6de48708\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd4f4ac4e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x04bc7e84\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0b4b764c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x122dade8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x34a89987\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x38d742a4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4012:4580  function updateIssuerClaimTopics(... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2692:3552  function removeClaimIssuer(IClaimIssuer _claimIssuer) external onlyOwner {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5766:6025  function getClaimIssuerClaimTopics(... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6382:6872  function hasClaimTopic(... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1514:2364  function addClaimIssuer(... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5045:5224  function getClaimIssuersForClaimTopic(... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5419:5540  function isClaimIssuer(IClaimIssuer _issuer) external view returns (bool) {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4706:4816  function getClaimIssuers() external view returns (IClaimIssuer[] memory) {... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4012:4580  function updateIssuerClaimTopics(... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4187:4188  0 */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4164:4176  _claimTopics */\n      dup3\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4164:4183  _claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4164:4188  _claimTopics.length != 0 */\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4156:4218  require(_claimTopics.length != 0, \"ERC-3643: No claim topics\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4228:4256  uint claimIssuerTopicsLength */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4259:4282  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4259:4296  _claimIssuerClaimTopics[_claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4283:4295  _claimIssuer */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4259:4296  _claimIssuerClaimTopics[_claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4259:4316  _claimIssuerClaimTopics[_claimIssuer]... */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4228:4316  uint claimIssuerTopicsLength = _claimIssuerClaimTopics[_claimIssuer]... */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4361:4362  0 */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4334:4357  claimIssuerTopicsLength */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4334:4362  claimIssuerTopicsLength != 0 */\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4326:4395  require(claimIssuerTopicsLength != 0, \"ERC-3643: Not a claim issuer\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4406:4448  _updateIssuerAcrossAllTopics(_claimIssuer) */\n      tag_70\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4435:4447  _claimIssuer */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4406:4434  _updateIssuerAcrossAllTopics */\n      tag_71\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4406:4448  _updateIssuerAcrossAllTopics(_claimIssuer) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4499:4511  _claimTopics */\n      dup3\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4459:4482  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4459:4496  _claimIssuerClaimTopics[_claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4483:4495  _claimIssuer */\n      dup8\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4459:4496  _claimIssuerClaimTopics[_claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4459:4511  _claimIssuerClaimTopics[_claimIssuer] = _claimTopics */\n      swap2\n      swap1\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4546:4558  _claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4527:4573  ClaimTopicsUpdated(_claimIssuer, _claimTopics) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4560:4572  _claimTopics */\n      dup5\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4527:4573  ClaimTopicsUpdated(_claimIssuer, _claimTopics) */\n      mload(0x40)\n      tag_74\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4146:4580  {... */\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4012:4580  function updateIssuerClaimTopics(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2692:3552  function removeClaimIssuer(IClaimIssuer _claimIssuer) external onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2775:2803  uint claimIssuerTopicsLength */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2806:2829  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2806:2843  _claimIssuerClaimTopics[_claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2830:2842  _claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2806:2843  _claimIssuerClaimTopics[_claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2806:2863  _claimIssuerClaimTopics[_claimIssuer]... */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2775:2863  uint claimIssuerTopicsLength = _claimIssuerClaimTopics[_claimIssuer]... */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2908:2909  0 */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2881:2904  claimIssuerTopicsLength */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2881:2909  claimIssuerTopicsLength != 0 */\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2873:2942  require(claimIssuerTopicsLength != 0, \"ERC-3643: Not a claim issuer\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_69\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2952:2977  uint256 claimIssuerlength */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2980:2993  _claimIssuers */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2980:3000  _claimIssuers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2952:3000  uint256 claimIssuerlength = _claimIssuers.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3015:3024  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3010:3324  for (uint256 i = 0; i < claimIssuerlength; ) {... */\n    tag_81:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3034:3051  claimIssuerlength */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3030:3031  i */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3030:3051  i < claimIssuerlength */\n      lt\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3010:3324  for (uint256 i = 0; i < claimIssuerlength; ) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3093:3105  _claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3073:3105  _claimIssuers[i] == _claimIssuer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3073:3086  _claimIssuers */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3087:3088  i */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3073:3089  _claimIssuers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3073:3105  _claimIssuers[i] == _claimIssuer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3069:3255  if (_claimIssuers[i] == _claimIssuer) {... */\n      tag_88\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3144:3157  _claimIssuers */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3178:3179  1 */\n      dup1\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3158:3175  claimIssuerlength */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3158:3179  claimIssuerlength - 1 */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3144:3180  _claimIssuers[claimIssuerlength - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_91\n      jumpi\n      tag_92\n      tag_86\n      jump\t// in\n    tag_92:\n    tag_91:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3125:3138  _claimIssuers */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3139:3140  i */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3125:3141  _claimIssuers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_95\n      tag_86\n      jump\t// in\n    tag_95:\n    tag_94:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3125:3180  _claimIssuers[i] = _claimIssuers[claimIssuerlength - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3198:3211  _claimIssuers */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3198:3217  _claimIssuers.pop() */\n      dup1\n      sload\n      dup1\n      tag_97\n      jumpi\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3235:3240  break */\n      jump(tag_82)\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3069:3255  if (_claimIssuers[i] == _claimIssuer) {... */\n    tag_88:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3296:3299  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3010:3324  for (uint256 i = 0; i < claimIssuerlength; ) {... */\n      jump(tag_81)\n    tag_82:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3334:3443  _removeClaimIssuerFromAllClaimTopics(... */\n      tag_101\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3384:3396  _claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3410:3433  claimIssuerTopicsLength */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3334:3370  _removeClaimIssuerFromAllClaimTopics */\n      tag_102\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3334:3443  _removeClaimIssuerFromAllClaimTopics(... */\n      jump\t// in\n    tag_101:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3461:3484  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3461:3498  _claimIssuerClaimTopics[_claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3485:3497  _claimIssuer */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3461:3498  _claimIssuerClaimTopics[_claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3454:3498  delete _claimIssuerClaimTopics[_claimIssuer] */\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3532:3544  _claimIssuer */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":3513:3545  ClaimIssuerRemoved(_claimIssuer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8432c8693d2550c2eb52d3f0a803b38eb8c3c0e62234fa1b6b8b35cc38667854\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2765:3552  {... */\n      pop\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2692:3552  function removeClaimIssuer(IClaimIssuer _claimIssuer) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5766:6025  function getClaimIssuerClaimTopics(... */\n    tag_25:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5865:5881  uint256[] memory */\n      0x60\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5901:5929  _isClaimIssuer(_claimIssuer) */\n      tag_106\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5916:5928  _claimIssuer */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5901:5915  _isClaimIssuer */\n      tag_107\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5901:5929  _isClaimIssuer(_claimIssuer) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5893:5964  require(_isClaimIssuer(_claimIssuer), \"ERC-3643: Issuer doesn't exist\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5981:6004  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5981:6018  _claimIssuerClaimTopics[_claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6005:6017  _claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5981:6018  _claimIssuerClaimTopics[_claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5974:6018  return _claimIssuerClaimTopics[_claimIssuer] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5766:6025  function getClaimIssuerClaimTopics(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6382:6872  function hasClaimTopic(... */\n    tag_31:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6493:6497  bool */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6509:6523  uint256 length */\n      dup1\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6526:6549  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6526:6558  _claimIssuerClaimTopics[_issuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6550:6557  _issuer */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6526:6558  _claimIssuerClaimTopics[_issuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6526:6565  _claimIssuerClaimTopics[_issuer].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6509:6565  uint256 length = _claimIssuerClaimTopics[_issuer].length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6575:6603  uint256[] memory claimTopics */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6606:6629  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6606:6638  _claimIssuerClaimTopics[_issuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6630:6637  _issuer */\n      dup7\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6606:6638  _claimIssuerClaimTopics[_issuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6575:6638  uint256[] memory claimTopics = _claimIssuerClaimTopics[_issuer] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_115:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_115\n      jumpi\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6653:6662  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6648:6844  for (uint256 i = 0; i < length; ) {... */\n    tag_116:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6672:6678  length */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6668:6669  i */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6668:6678  i < length */\n      lt\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6648:6844  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6718:6729  _claimTopic */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6700:6711  claimTopics */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6712:6713  i */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6700:6714  claimTopics[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_120\n      tag_86\n      jump\t// in\n    tag_120:\n    tag_119:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6700:6729  claimTopics[i] == _claimTopic */\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6696:6775  if (claimTopics[i] == _claimTopic) {... */\n      tag_121\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6756:6760  true */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6749:6760  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_113)\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6696:6775  if (claimTopics[i] == _claimTopic) {... */\n    tag_121:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6816:6819  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6648:6844  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_116)\n    tag_117:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6860:6865  false */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6853:6865  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":6382:6872  function hasClaimTopic(... */\n    tag_113:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1514:2364  function addClaimIssuer(... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1703:1704  0 */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1670:1705  address(_claimIssuer) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1678:1690  _claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1670:1705  address(_claimIssuer) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1649:1761  require(... */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1840:1841  0 */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1792:1815  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1792:1829  _claimIssuerClaimTopics[_claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1816:1828  _claimIssuer */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1792:1829  _claimIssuerClaimTopics[_claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1792:1836  _claimIssuerClaimTopics[_claimIssuer].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1792:1841  _claimIssuerClaimTopics[_claimIssuer].length == 0 */\n      eq\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1771:1898  require(... */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1908:1919  uint length */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1922:1934  _claimTopics */\n      dup3\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1922:1941  _claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1908:1941  uint length = _claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1969:1970  0 */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1959:1965  length */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1959:1970  length != 0 */\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1951:2003  require(length != 0, \"ERC-3643: Empty claim topics\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2014:2027  _claimIssuers */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2033:2045  _claimIssuer */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2014:2046  _claimIssuers.push(_claimIssuer) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2096:2108  _claimTopics */\n      dup3\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2056:2079  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2056:2093  _claimIssuerClaimTopics[_claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2080:2092  _claimIssuer */\n      dup8\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2056:2093  _claimIssuerClaimTopics[_claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2056:2108  _claimIssuerClaimTopics[_claimIssuer] = _claimTopics */\n      swap2\n      swap1\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_135:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2124:2133  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2119:2298  for (uint256 i = 0; i < length; ) {... */\n    tag_136:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2143:2149  length */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2139:2140  i */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2139:2149  i < length */\n      lt\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2119:2298  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2167:2192  _claimTopicToClaimIssuers */\n      0x03\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2167:2209  _claimTopicToClaimIssuers[_claimTopics[i]] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2193:2205  _claimTopics */\n      dup6\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2206:2207  i */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2193:2208  _claimTopics[i] */\n      dup2\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_140\n      tag_86\n      jump\t// in\n    tag_140:\n    tag_139:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2167:2209  _claimTopicToClaimIssuers[_claimTopics[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2215:2227  _claimIssuer */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2167:2228  _claimTopicToClaimIssuers[_claimTopics[i]].push(_claimIssuer) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2270:2273  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2119:2298  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_136)\n    tag_137:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2330:2342  _claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2313:2357  ClaimIssuerAdded(_claimIssuer, _claimTopics) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x375851630239b005eafd9230e43a9a9d4a5d7b96a4956fc8e9d2ab3ff4583d16\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2344:2356  _claimTopics */\n      dup5\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":2313:2357  ClaimIssuerAdded(_claimIssuer, _claimTopics) */\n      mload(0x40)\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1639:2364  {... */\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":1514:2364  function addClaimIssuer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5045:5224  function getClaimIssuersForClaimTopic(... */\n    tag_40:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5140:5161  IClaimIssuer[] memory */\n      0x60\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5180:5205  _claimTopicToClaimIssuers */\n      0x03\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5180:5217  _claimTopicToClaimIssuers[claimTopic] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5206:5216  claimTopic */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5180:5217  _claimTopicToClaimIssuers[claimTopic] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5173:5217  return _claimTopicToClaimIssuers[claimTopic] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5045:5224  function getClaimIssuersForClaimTopic(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5419:5540  function isClaimIssuer(IClaimIssuer _issuer) external view returns (bool) {... */\n    tag_45:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5487:5491  bool */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5510:5533  _isClaimIssuer(_issuer) */\n      tag_147\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5525:5532  _issuer */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5510:5524  _isClaimIssuer */\n      tag_107\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5510:5533  _isClaimIssuer(_issuer) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5503:5533  return _isClaimIssuer(_issuer) */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":5419:5540  function isClaimIssuer(IClaimIssuer _issuer) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4706:4816  function getClaimIssuers() external view returns (IClaimIssuer[] memory) {... */\n    tag_54:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4756:4777  IClaimIssuer[] memory */\n      0x60\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4796:4809  _claimIssuers */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4789:4809  return _claimIssuers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_156:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_156\n      jumpi\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":4706:4816  function getClaimIssuers() external view returns (IClaimIssuer[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7689:8185  function _updateIssuerAcrossAllTopics(IClaimIssuer claimIssuer) private {... */\n    tag_71:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7771:7799  uint256[] memory claimTopics */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7802:7825  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7802:7838  _claimIssuerClaimTopics[claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7826:7837  claimIssuer */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7802:7838  _claimIssuerClaimTopics[claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7771:7838  uint256[] memory claimTopics = _claimIssuerClaimTopics[claimIssuer] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_172:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_172\n      jumpi\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7848:7859  uint length */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7862:7873  claimTopics */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7862:7880  claimTopics.length */\n      mload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7848:7880  uint length = claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7896:7905  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7891:8179  for (uint256 i = 0; i < length; ) {... */\n    tag_173:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7915:7921  length */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7911:7912  i */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7911:7921  i < length */\n      lt\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7891:8179  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7939:7957  uint256 claimTopic */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7960:7971  claimTopics */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7972:7973  i */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7960:7974  claimTopics[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_177\n      tag_86\n      jump\t// in\n    tag_177:\n    tag_176:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7939:7974  uint256 claimTopic = claimTopics[i] */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7989:8036  _removeIssuerFromTopic(claimIssuer, claimTopic) */\n      tag_178\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8012:8023  claimIssuer */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8025:8035  claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7989:8011  _removeIssuerFromTopic */\n      tag_179\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7989:8036  _removeIssuerFromTopic(claimIssuer, claimTopic) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8050:8075  _claimTopicToClaimIssuers */\n      0x03\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8050:8091  _claimTopicToClaimIssuers[claimTopics[i]] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8076:8087  claimTopics */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8088:8089  i */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8076:8090  claimTopics[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_180\n      jumpi\n      tag_181\n      tag_86\n      jump\t// in\n    tag_181:\n    tag_180:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8050:8091  _claimTopicToClaimIssuers[claimTopics[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8097:8108  claimIssuer */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8050:8109  _claimTopicToClaimIssuers[claimTopics[i]].push(claimIssuer) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8151:8154  ++i */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7925:8179  {... */\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7891:8179  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_173)\n    tag_174:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7761:8185  {... */\n      pop\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7689:8185  function _updateIssuerAcrossAllTopics(IClaimIssuer claimIssuer) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7090:7461  function _removeClaimIssuerFromAllClaimTopics(... */\n    tag_102:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7220:7229  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7215:7455  for (uint256 i = 0; i < length; ) {... */\n    tag_184:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7239:7245  length */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7235:7236  i */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7235:7245  i < length */\n      lt\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7215:7455  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7263:7281  uint256 claimTopic */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7284:7307  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7284:7320  _claimIssuerClaimTopics[claimIssuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7308:7319  claimIssuer */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7284:7320  _claimIssuerClaimTopics[claimIssuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7321:7322  i */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7284:7323  _claimIssuerClaimTopics[claimIssuer][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_188\n      tag_86\n      jump\t// in\n    tag_188:\n    tag_187:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7263:7323  uint256 claimTopic = _claimIssuerClaimTopics[claimIssuer][i] */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7338:7385  _removeIssuerFromTopic(claimIssuer, claimTopic) */\n      tag_190\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7361:7372  claimIssuer */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7374:7384  claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7338:7360  _removeIssuerFromTopic */\n      tag_179\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7338:7385  _removeIssuerFromTopic(claimIssuer, claimTopic) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7427:7430  ++i */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7249:7455  {... */\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7215:7455  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_184)\n    tag_185:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":7090:7461  function _removeClaimIssuerFromAllClaimTopics(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9436:9580  function _isClaimIssuer(IClaimIssuer _issuer) private view returns (bool) {... */\n    tag_107:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9504:9508  bool */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9571:9572  0 */\n      dup1\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9528:9551  _claimIssuerClaimTopics */\n      0x02\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9528:9560  _claimIssuerClaimTopics[_issuer] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9552:9559  _issuer */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9528:9560  _claimIssuerClaimTopics[_issuer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9528:9567  _claimIssuerClaimTopics[_issuer].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9528:9572  _claimIssuerClaimTopics[_issuer].length != 0 */\n      eq\n      iszero\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9520:9573  return (_claimIssuerClaimTopics[_issuer].length != 0) */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9436:9580  function _isClaimIssuer(IClaimIssuer _issuer) private view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8600:9243  function _removeIssuerFromTopic(... */\n    tag_179:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8715:8749  IClaimIssuer[] memory claimIssuers */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8752:8777  _claimTopicToClaimIssuers */\n      0x03\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8752:8811  _claimTopicToClaimIssuers[... */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8791:8801  claimTopic */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8752:8811  _claimTopicToClaimIssuers[... */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8715:8811  IClaimIssuer[] memory claimIssuers = _claimTopicToClaimIssuers[... */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_196:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_196\n      jumpi\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8821:8832  uint length */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8835:8847  claimIssuers */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8835:8854  claimIssuers.length */\n      mload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8821:8854  uint length = claimIssuers.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8870:8876  uint j */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8865:9237  for (uint j = 0; j < length; ) {... */\n    tag_197:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8886:8892  length */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8882:8883  j */\n      dup2\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8882:8892  j < length */\n      lt\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8865:9237  for (uint j = 0; j < length; ) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8933:8944  claimIssuer */\n      dup5\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8914:8944  claimIssuers[j] == claimIssuer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8914:8926  claimIssuers */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8927:8928  j */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8914:8929  claimIssuers[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_86\n      jump\t// in\n    tag_201:\n    tag_200:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8914:8944  claimIssuers[j] == claimIssuer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8910:9168  if (claimIssuers[j] == claimIssuer) {... */\n      tag_202\n      jumpi\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9007:9019  claimIssuers */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9050:9051  1 */\n      0x01\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9041:9047  length */\n      dup4\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9041:9051  length - 1 */\n      tag_203\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_203:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9007:9069  claimIssuers[... */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_86\n      jump\t// in\n    tag_205:\n    tag_204:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8964:8989  _claimTopicToClaimIssuers */\n      0x03\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8964:9001  _claimTopicToClaimIssuers[claimTopic] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8990:9000  claimTopic */\n      dup7\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8964:9001  _claimTopicToClaimIssuers[claimTopic] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9002:9003  j */\n      dup3\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8964:9004  _claimTopicToClaimIssuers[claimTopic][j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_207\n      tag_86\n      jump\t// in\n    tag_207:\n    tag_206:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8964:9069  _claimTopicToClaimIssuers[claimTopic][j] = claimIssuers[... */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9087:9112  _claimTopicToClaimIssuers */\n      0x03\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9087:9124  _claimTopicToClaimIssuers[claimTopic] */\n      0x00\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9113:9123  claimTopic */\n      dup6\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9087:9124  _claimTopicToClaimIssuers[claimTopic] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9087:9130  _claimTopicToClaimIssuers[claimTopic].pop() */\n      dup1\n      sload\n      dup1\n      tag_209\n      jumpi\n      tag_210\n      tag_99\n      jump\t// in\n    tag_210:\n    tag_209:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9148:9153  break */\n      jump(tag_198)\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8910:9168  if (claimIssuers[j] == claimIssuer) {... */\n    tag_202:\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":9209:9212  ++j */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8865:9237  for (uint j = 0; j < length; ) {... */\n      jump(tag_197)\n    tag_198:\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8705:9243  {... */\n      pop\n      pop\n        /* \"contracts/registry/ClaimIssuersRegistry.sol\":8600:9243  function _removeIssuerFromTopic(... */\n      pop\n      pop\n      jump\t// out\n    tag_73:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_212\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_213:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_214\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_213)\n    tag_214:\n    tag_212:\n      pop\n      swap1\n      pop\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      pop\n      swap1\n      jump\t// out\n    tag_104:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_218:\n      pop\n      jump\t// out\n    tag_216:\n    tag_219:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_219)\n    tag_220:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_222:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_223:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_224:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_225:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_282\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_224\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:683   */\n    tag_226:\n        /* \"#utility.yul\":624:631   */\n      0x00\n        /* \"#utility.yul\":653:677   */\n      tag_284\n        /* \"#utility.yul\":671:676   */\n      dup3\n        /* \"#utility.yul\":653:677   */\n      tag_225\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":642:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:849   */\n    tag_227:\n        /* \"#utility.yul\":781:824   */\n      tag_286\n        /* \"#utility.yul\":818:823   */\n      dup2\n        /* \"#utility.yul\":781:824   */\n      tag_226\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":774:779   */\n      dup2\n        /* \"#utility.yul\":771:825   */\n      eq\n        /* \"#utility.yul\":761:843   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":839:840   */\n      0x00\n        /* \"#utility.yul\":836:837   */\n      dup1\n        /* \"#utility.yul\":829:841   */\n      revert\n        /* \"#utility.yul\":761:843   */\n    tag_287:\n        /* \"#utility.yul\":689:849   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":855:1032   */\n    tag_228:\n        /* \"#utility.yul\":920:925   */\n      0x00\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":945:965   */\n      calldataload\n        /* \"#utility.yul\":936:965   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1026   */\n      tag_289\n        /* \"#utility.yul\":1020:1025   */\n      dup2\n        /* \"#utility.yul\":974:1026   */\n      tag_227\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":855:1032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1155   */\n    tag_229:\n        /* \"#utility.yul\":1147:1148   */\n      0x00\n        /* \"#utility.yul\":1144:1145   */\n      dup1\n        /* \"#utility.yul\":1137:1149   */\n      revert\n        /* \"#utility.yul\":1161:1278   */\n    tag_230:\n        /* \"#utility.yul\":1270:1271   */\n      0x00\n        /* \"#utility.yul\":1267:1268   */\n      dup1\n        /* \"#utility.yul\":1260:1272   */\n      revert\n        /* \"#utility.yul\":1284:1401   */\n    tag_231:\n        /* \"#utility.yul\":1393:1394   */\n      0x00\n        /* \"#utility.yul\":1390:1391   */\n      dup1\n        /* \"#utility.yul\":1383:1395   */\n      revert\n        /* \"#utility.yul\":1424:1992   */\n    tag_232:\n        /* \"#utility.yul\":1497:1505   */\n      0x00\n        /* \"#utility.yul\":1507:1513   */\n      dup1\n        /* \"#utility.yul\":1557:1560   */\n      dup4\n        /* \"#utility.yul\":1550:1554   */\n      0x1f\n        /* \"#utility.yul\":1542:1548   */\n      dup5\n        /* \"#utility.yul\":1538:1555   */\n      add\n        /* \"#utility.yul\":1534:1561   */\n      slt\n        /* \"#utility.yul\":1524:1646   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1565:1644   */\n      tag_295\n      tag_229\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1524:1646   */\n    tag_294:\n        /* \"#utility.yul\":1678:1684   */\n      dup3\n        /* \"#utility.yul\":1665:1685   */\n      calldataload\n        /* \"#utility.yul\":1655:1685   */\n      swap1\n      pop\n        /* \"#utility.yul\":1708:1726   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1700:1706   */\n      dup2\n        /* \"#utility.yul\":1697:1727   */\n      gt\n        /* \"#utility.yul\":1694:1811   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":1730:1809   */\n      tag_297\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1694:1811   */\n    tag_296:\n        /* \"#utility.yul\":1844:1848   */\n      0x20\n        /* \"#utility.yul\":1836:1842   */\n      dup4\n        /* \"#utility.yul\":1832:1849   */\n      add\n        /* \"#utility.yul\":1820:1849   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:1901   */\n      dup4\n        /* \"#utility.yul\":1890:1894   */\n      0x20\n        /* \"#utility.yul\":1882:1888   */\n      dup3\n        /* \"#utility.yul\":1878:1895   */\n      mul\n        /* \"#utility.yul\":1868:1876   */\n      dup4\n        /* \"#utility.yul\":1864:1896   */\n      add\n        /* \"#utility.yul\":1861:1902   */\n      gt\n        /* \"#utility.yul\":1858:1986   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1905:1984   */\n      tag_299\n      tag_231\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1858:1986   */\n    tag_298:\n        /* \"#utility.yul\":1424:1992   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1998:2740   */\n    tag_17:\n        /* \"#utility.yul\":2112:2118   */\n      0x00\n        /* \"#utility.yul\":2120:2126   */\n      dup1\n        /* \"#utility.yul\":2128:2134   */\n      0x00\n        /* \"#utility.yul\":2177:2179   */\n      0x40\n        /* \"#utility.yul\":2165:2174   */\n      dup5\n        /* \"#utility.yul\":2156:2163   */\n      dup7\n        /* \"#utility.yul\":2152:2175   */\n      sub\n        /* \"#utility.yul\":2148:2180   */\n      slt\n        /* \"#utility.yul\":2145:2264   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":2183:2262   */\n      tag_302\n      tag_222\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2145:2264   */\n    tag_301:\n        /* \"#utility.yul\":2303:2304   */\n      0x00\n        /* \"#utility.yul\":2328:2400   */\n      tag_303\n        /* \"#utility.yul\":2392:2399   */\n      dup7\n        /* \"#utility.yul\":2383:2389   */\n      dup3\n        /* \"#utility.yul\":2372:2381   */\n      dup8\n        /* \"#utility.yul\":2368:2390   */\n      add\n        /* \"#utility.yul\":2328:2400   */\n      tag_228\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2318:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2274:2410   */\n      pop\n        /* \"#utility.yul\":2477:2479   */\n      0x20\n        /* \"#utility.yul\":2466:2475   */\n      dup5\n        /* \"#utility.yul\":2462:2480   */\n      add\n        /* \"#utility.yul\":2449:2481   */\n      calldataload\n        /* \"#utility.yul\":2508:2526   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2500:2506   */\n      dup2\n        /* \"#utility.yul\":2497:2527   */\n      gt\n        /* \"#utility.yul\":2494:2611   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2530:2609   */\n      tag_305\n      tag_223\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2494:2611   */\n    tag_304:\n        /* \"#utility.yul\":2643:2723   */\n      tag_306\n        /* \"#utility.yul\":2715:2722   */\n      dup7\n        /* \"#utility.yul\":2706:2712   */\n      dup3\n        /* \"#utility.yul\":2695:2704   */\n      dup8\n        /* \"#utility.yul\":2691:2713   */\n      add\n        /* \"#utility.yul\":2643:2723   */\n      tag_232\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2625:2723   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2420:2733   */\n      pop\n        /* \"#utility.yul\":1998:2740   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2746:3113   */\n    tag_21:\n        /* \"#utility.yul\":2824:2830   */\n      0x00\n        /* \"#utility.yul\":2873:2875   */\n      0x20\n        /* \"#utility.yul\":2861:2870   */\n      dup3\n        /* \"#utility.yul\":2852:2859   */\n      dup5\n        /* \"#utility.yul\":2848:2871   */\n      sub\n        /* \"#utility.yul\":2844:2876   */\n      slt\n        /* \"#utility.yul\":2841:2960   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2879:2958   */\n      tag_309\n      tag_222\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2841:2960   */\n    tag_308:\n        /* \"#utility.yul\":2999:3000   */\n      0x00\n        /* \"#utility.yul\":3024:3096   */\n      tag_310\n        /* \"#utility.yul\":3088:3095   */\n      dup5\n        /* \"#utility.yul\":3079:3085   */\n      dup3\n        /* \"#utility.yul\":3068:3077   */\n      dup6\n        /* \"#utility.yul\":3064:3086   */\n      add\n        /* \"#utility.yul\":3024:3096   */\n      tag_228\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3014:3096   */\n      swap2\n      pop\n        /* \"#utility.yul\":2970:3106   */\n      pop\n        /* \"#utility.yul\":2746:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3233   */\n    tag_233:\n        /* \"#utility.yul\":3186:3192   */\n      0x00\n        /* \"#utility.yul\":3220:3225   */\n      dup2\n        /* \"#utility.yul\":3214:3226   */\n      mload\n        /* \"#utility.yul\":3204:3226   */\n      swap1\n      pop\n        /* \"#utility.yul\":3119:3233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3239:3423   */\n    tag_234:\n        /* \"#utility.yul\":3338:3349   */\n      0x00\n        /* \"#utility.yul\":3372:3378   */\n      dup3\n        /* \"#utility.yul\":3367:3370   */\n      dup3\n        /* \"#utility.yul\":3360:3379   */\n      mstore\n        /* \"#utility.yul\":3412:3416   */\n      0x20\n        /* \"#utility.yul\":3407:3410   */\n      dup3\n        /* \"#utility.yul\":3403:3417   */\n      add\n        /* \"#utility.yul\":3388:3417   */\n      swap1\n      pop\n        /* \"#utility.yul\":3239:3423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3429:3561   */\n    tag_235:\n        /* \"#utility.yul\":3496:3500   */\n      0x00\n        /* \"#utility.yul\":3519:3522   */\n      dup2\n        /* \"#utility.yul\":3511:3522   */\n      swap1\n      pop\n        /* \"#utility.yul\":3549:3553   */\n      0x20\n        /* \"#utility.yul\":3544:3547   */\n      dup3\n        /* \"#utility.yul\":3540:3554   */\n      add\n        /* \"#utility.yul\":3532:3554   */\n      swap1\n      pop\n        /* \"#utility.yul\":3429:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3644   */\n    tag_236:\n        /* \"#utility.yul\":3604:3611   */\n      0x00\n        /* \"#utility.yul\":3633:3638   */\n      dup2\n        /* \"#utility.yul\":3622:3638   */\n      swap1\n      pop\n        /* \"#utility.yul\":3567:3644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3650:3758   */\n    tag_237:\n        /* \"#utility.yul\":3727:3751   */\n      tag_316\n        /* \"#utility.yul\":3745:3750   */\n      dup2\n        /* \"#utility.yul\":3727:3751   */\n      tag_236\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3722:3725   */\n      dup3\n        /* \"#utility.yul\":3715:3752   */\n      mstore\n        /* \"#utility.yul\":3650:3758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3764:3943   */\n    tag_238:\n        /* \"#utility.yul\":3833:3843   */\n      0x00\n        /* \"#utility.yul\":3854:3900   */\n      tag_318\n        /* \"#utility.yul\":3896:3899   */\n      dup4\n        /* \"#utility.yul\":3888:3894   */\n      dup4\n        /* \"#utility.yul\":3854:3900   */\n      tag_237\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3932:3936   */\n      0x20\n        /* \"#utility.yul\":3927:3930   */\n      dup4\n        /* \"#utility.yul\":3923:3937   */\n      add\n        /* \"#utility.yul\":3909:3937   */\n      swap1\n      pop\n        /* \"#utility.yul\":3764:3943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3949:4062   */\n    tag_239:\n        /* \"#utility.yul\":4019:4023   */\n      0x00\n        /* \"#utility.yul\":4051:4055   */\n      0x20\n        /* \"#utility.yul\":4046:4049   */\n      dup3\n        /* \"#utility.yul\":4042:4056   */\n      add\n        /* \"#utility.yul\":4034:4056   */\n      swap1\n      pop\n        /* \"#utility.yul\":3949:4062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4098:4830   */\n    tag_240:\n        /* \"#utility.yul\":4217:4220   */\n      0x00\n        /* \"#utility.yul\":4246:4300   */\n      tag_321\n        /* \"#utility.yul\":4294:4299   */\n      dup3\n        /* \"#utility.yul\":4246:4300   */\n      tag_233\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4316:4402   */\n      tag_322\n        /* \"#utility.yul\":4395:4401   */\n      dup2\n        /* \"#utility.yul\":4390:4393   */\n      dup6\n        /* \"#utility.yul\":4316:4402   */\n      tag_234\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4309:4402   */\n      swap4\n      pop\n        /* \"#utility.yul\":4426:4482   */\n      tag_323\n        /* \"#utility.yul\":4476:4481   */\n      dup4\n        /* \"#utility.yul\":4426:4482   */\n      tag_235\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4505:4512   */\n      dup1\n        /* \"#utility.yul\":4536:4537   */\n      0x00\n        /* \"#utility.yul\":4521:4805   */\n    tag_324:\n        /* \"#utility.yul\":4546:4552   */\n      dup4\n        /* \"#utility.yul\":4543:4544   */\n      dup2\n        /* \"#utility.yul\":4540:4553   */\n      lt\n        /* \"#utility.yul\":4521:4805   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":4622:4628   */\n      dup2\n        /* \"#utility.yul\":4616:4629   */\n      mload\n        /* \"#utility.yul\":4649:4712   */\n      tag_327\n        /* \"#utility.yul\":4708:4711   */\n      dup9\n        /* \"#utility.yul\":4693:4706   */\n      dup3\n        /* \"#utility.yul\":4649:4712   */\n      tag_238\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4642:4712   */\n      swap8\n      pop\n        /* \"#utility.yul\":4735:4795   */\n      tag_328\n        /* \"#utility.yul\":4788:4794   */\n      dup4\n        /* \"#utility.yul\":4735:4795   */\n      tag_239\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4725:4795   */\n      swap3\n      pop\n        /* \"#utility.yul\":4581:4805   */\n      pop\n        /* \"#utility.yul\":4568:4569   */\n      0x01\n        /* \"#utility.yul\":4565:4566   */\n      dup2\n        /* \"#utility.yul\":4561:4570   */\n      add\n        /* \"#utility.yul\":4556:4570   */\n      swap1\n      pop\n        /* \"#utility.yul\":4521:4805   */\n      jump(tag_324)\n    tag_326:\n        /* \"#utility.yul\":4525:4539   */\n      pop\n        /* \"#utility.yul\":4821:4824   */\n      dup6\n        /* \"#utility.yul\":4814:4824   */\n      swap4\n      pop\n        /* \"#utility.yul\":4222:4830   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4098:4830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4836:5209   */\n    tag_27:\n        /* \"#utility.yul\":4979:4983   */\n      0x00\n        /* \"#utility.yul\":5017:5019   */\n      0x20\n        /* \"#utility.yul\":5006:5015   */\n      dup3\n        /* \"#utility.yul\":5002:5020   */\n      add\n        /* \"#utility.yul\":4994:5020   */\n      swap1\n      pop\n        /* \"#utility.yul\":5066:5075   */\n      dup2\n        /* \"#utility.yul\":5060:5064   */\n      dup2\n        /* \"#utility.yul\":5056:5076   */\n      sub\n        /* \"#utility.yul\":5052:5053   */\n      0x00\n        /* \"#utility.yul\":5041:5050   */\n      dup4\n        /* \"#utility.yul\":5037:5054   */\n      add\n        /* \"#utility.yul\":5030:5077   */\n      mstore\n        /* \"#utility.yul\":5094:5202   */\n      tag_330\n        /* \"#utility.yul\":5197:5201   */\n      dup2\n        /* \"#utility.yul\":5188:5194   */\n      dup5\n        /* \"#utility.yul\":5094:5202   */\n      tag_240\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5086:5202   */\n      swap1\n      pop\n        /* \"#utility.yul\":4836:5209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5215:5337   */\n    tag_241:\n        /* \"#utility.yul\":5288:5312   */\n      tag_332\n        /* \"#utility.yul\":5306:5311   */\n      dup2\n        /* \"#utility.yul\":5288:5312   */\n      tag_236\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5281:5286   */\n      dup2\n        /* \"#utility.yul\":5278:5313   */\n      eq\n        /* \"#utility.yul\":5268:5331   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":5327:5328   */\n      0x00\n        /* \"#utility.yul\":5324:5325   */\n      dup1\n        /* \"#utility.yul\":5317:5329   */\n      revert\n        /* \"#utility.yul\":5268:5331   */\n    tag_333:\n        /* \"#utility.yul\":5215:5337   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5343:5482   */\n    tag_242:\n        /* \"#utility.yul\":5389:5394   */\n      0x00\n        /* \"#utility.yul\":5427:5433   */\n      dup2\n        /* \"#utility.yul\":5414:5434   */\n      calldataload\n        /* \"#utility.yul\":5405:5434   */\n      swap1\n      pop\n        /* \"#utility.yul\":5443:5476   */\n      tag_335\n        /* \"#utility.yul\":5470:5475   */\n      dup2\n        /* \"#utility.yul\":5443:5476   */\n      tag_241\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5343:5482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5488:6000   */\n    tag_30:\n        /* \"#utility.yul\":5575:5581   */\n      0x00\n        /* \"#utility.yul\":5583:5589   */\n      dup1\n        /* \"#utility.yul\":5632:5634   */\n      0x40\n        /* \"#utility.yul\":5620:5629   */\n      dup4\n        /* \"#utility.yul\":5611:5618   */\n      dup6\n        /* \"#utility.yul\":5607:5630   */\n      sub\n        /* \"#utility.yul\":5603:5635   */\n      slt\n        /* \"#utility.yul\":5600:5719   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":5638:5717   */\n      tag_338\n      tag_222\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5600:5719   */\n    tag_337:\n        /* \"#utility.yul\":5758:5759   */\n      0x00\n        /* \"#utility.yul\":5783:5855   */\n      tag_339\n        /* \"#utility.yul\":5847:5854   */\n      dup6\n        /* \"#utility.yul\":5838:5844   */\n      dup3\n        /* \"#utility.yul\":5827:5836   */\n      dup7\n        /* \"#utility.yul\":5823:5845   */\n      add\n        /* \"#utility.yul\":5783:5855   */\n      tag_228\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5773:5855   */\n      swap3\n      pop\n        /* \"#utility.yul\":5729:5865   */\n      pop\n        /* \"#utility.yul\":5904:5906   */\n      0x20\n        /* \"#utility.yul\":5930:5983   */\n      tag_340\n        /* \"#utility.yul\":5975:5982   */\n      dup6\n        /* \"#utility.yul\":5966:5972   */\n      dup3\n        /* \"#utility.yul\":5955:5964   */\n      dup7\n        /* \"#utility.yul\":5951:5973   */\n      add\n        /* \"#utility.yul\":5930:5983   */\n      tag_242\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5920:5983   */\n      swap2\n      pop\n        /* \"#utility.yul\":5875:5993   */\n      pop\n        /* \"#utility.yul\":5488:6000   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6006:6096   */\n    tag_243:\n        /* \"#utility.yul\":6040:6047   */\n      0x00\n        /* \"#utility.yul\":6083:6088   */\n      dup2\n        /* \"#utility.yul\":6076:6089   */\n      iszero\n        /* \"#utility.yul\":6069:6090   */\n      iszero\n        /* \"#utility.yul\":6058:6090   */\n      swap1\n      pop\n        /* \"#utility.yul\":6006:6096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6102:6211   */\n    tag_244:\n        /* \"#utility.yul\":6183:6204   */\n      tag_343\n        /* \"#utility.yul\":6198:6203   */\n      dup2\n        /* \"#utility.yul\":6183:6204   */\n      tag_243\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6178:6181   */\n      dup3\n        /* \"#utility.yul\":6171:6205   */\n      mstore\n        /* \"#utility.yul\":6102:6211   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6427   */\n    tag_33:\n        /* \"#utility.yul\":6304:6308   */\n      0x00\n        /* \"#utility.yul\":6342:6344   */\n      0x20\n        /* \"#utility.yul\":6331:6340   */\n      dup3\n        /* \"#utility.yul\":6327:6345   */\n      add\n        /* \"#utility.yul\":6319:6345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6355:6420   */\n      tag_345\n        /* \"#utility.yul\":6417:6418   */\n      0x00\n        /* \"#utility.yul\":6406:6415   */\n      dup4\n        /* \"#utility.yul\":6402:6419   */\n      add\n        /* \"#utility.yul\":6393:6399   */\n      dup5\n        /* \"#utility.yul\":6355:6420   */\n      tag_244\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6217:6427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6433:6762   */\n    tag_39:\n        /* \"#utility.yul\":6492:6498   */\n      0x00\n        /* \"#utility.yul\":6541:6543   */\n      0x20\n        /* \"#utility.yul\":6529:6538   */\n      dup3\n        /* \"#utility.yul\":6520:6527   */\n      dup5\n        /* \"#utility.yul\":6516:6539   */\n      sub\n        /* \"#utility.yul\":6512:6544   */\n      slt\n        /* \"#utility.yul\":6509:6628   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":6547:6626   */\n      tag_348\n      tag_222\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6509:6628   */\n    tag_347:\n        /* \"#utility.yul\":6667:6668   */\n      0x00\n        /* \"#utility.yul\":6692:6745   */\n      tag_349\n        /* \"#utility.yul\":6737:6744   */\n      dup5\n        /* \"#utility.yul\":6728:6734   */\n      dup3\n        /* \"#utility.yul\":6717:6726   */\n      dup6\n        /* \"#utility.yul\":6713:6735   */\n      add\n        /* \"#utility.yul\":6692:6745   */\n      tag_242\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6682:6745   */\n      swap2\n      pop\n        /* \"#utility.yul\":6638:6755   */\n      pop\n        /* \"#utility.yul\":6433:6762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6768:6901   */\n    tag_245:\n        /* \"#utility.yul\":6854:6860   */\n      0x00\n        /* \"#utility.yul\":6888:6893   */\n      dup2\n        /* \"#utility.yul\":6882:6894   */\n      mload\n        /* \"#utility.yul\":6872:6894   */\n      swap1\n      pop\n        /* \"#utility.yul\":6768:6901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6907:7091   */\n    tag_246:\n        /* \"#utility.yul\":7006:7017   */\n      0x00\n        /* \"#utility.yul\":7040:7046   */\n      dup3\n        /* \"#utility.yul\":7035:7038   */\n      dup3\n        /* \"#utility.yul\":7028:7047   */\n      mstore\n        /* \"#utility.yul\":7080:7084   */\n      0x20\n        /* \"#utility.yul\":7075:7078   */\n      dup3\n        /* \"#utility.yul\":7071:7085   */\n      add\n        /* \"#utility.yul\":7056:7085   */\n      swap1\n      pop\n        /* \"#utility.yul\":6907:7091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7097:7248   */\n    tag_247:\n        /* \"#utility.yul\":7183:7187   */\n      0x00\n        /* \"#utility.yul\":7206:7209   */\n      dup2\n        /* \"#utility.yul\":7198:7209   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7240   */\n      0x20\n        /* \"#utility.yul\":7231:7234   */\n      dup3\n        /* \"#utility.yul\":7227:7241   */\n      add\n        /* \"#utility.yul\":7219:7241   */\n      swap1\n      pop\n        /* \"#utility.yul\":7097:7248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7254:7314   */\n    tag_248:\n        /* \"#utility.yul\":7282:7285   */\n      0x00\n        /* \"#utility.yul\":7303:7308   */\n      dup2\n        /* \"#utility.yul\":7296:7308   */\n      swap1\n      pop\n        /* \"#utility.yul\":7254:7314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7320:7462   */\n    tag_249:\n        /* \"#utility.yul\":7370:7379   */\n      0x00\n        /* \"#utility.yul\":7403:7456   */\n      tag_355\n        /* \"#utility.yul\":7421:7455   */\n      tag_356\n        /* \"#utility.yul\":7430:7454   */\n      tag_357\n        /* \"#utility.yul\":7448:7453   */\n      dup5\n        /* \"#utility.yul\":7430:7454   */\n      tag_224\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7421:7455   */\n      tag_248\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7403:7456   */\n      tag_224\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7390:7456   */\n      swap1\n      pop\n        /* \"#utility.yul\":7320:7462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7594   */\n    tag_250:\n        /* \"#utility.yul\":7518:7527   */\n      0x00\n        /* \"#utility.yul\":7551:7588   */\n      tag_359\n        /* \"#utility.yul\":7582:7587   */\n      dup3\n        /* \"#utility.yul\":7551:7588   */\n      tag_249\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7538:7588   */\n      swap1\n      pop\n        /* \"#utility.yul\":7468:7594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7600:7745   */\n    tag_251:\n        /* \"#utility.yul\":7669:7678   */\n      0x00\n        /* \"#utility.yul\":7702:7739   */\n      tag_361\n        /* \"#utility.yul\":7733:7738   */\n      dup3\n        /* \"#utility.yul\":7702:7739   */\n      tag_250\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7689:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7600:7745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7751:7910   */\n    tag_252:\n        /* \"#utility.yul\":7847:7903   */\n      tag_363\n        /* \"#utility.yul\":7897:7902   */\n      dup2\n        /* \"#utility.yul\":7847:7903   */\n      tag_251\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7842:7845   */\n      dup3\n        /* \"#utility.yul\":7835:7904   */\n      mstore\n        /* \"#utility.yul\":7751:7910   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7916:8133   */\n    tag_253:\n        /* \"#utility.yul\":8004:8014   */\n      0x00\n        /* \"#utility.yul\":8025:8090   */\n      tag_365\n        /* \"#utility.yul\":8086:8089   */\n      dup4\n        /* \"#utility.yul\":8078:8084   */\n      dup4\n        /* \"#utility.yul\":8025:8090   */\n      tag_252\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8122:8126   */\n      0x20\n        /* \"#utility.yul\":8117:8120   */\n      dup4\n        /* \"#utility.yul\":8113:8127   */\n      add\n        /* \"#utility.yul\":8099:8127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7916:8133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8139:8271   */\n    tag_254:\n        /* \"#utility.yul\":8228:8232   */\n      0x00\n        /* \"#utility.yul\":8260:8264   */\n      0x20\n        /* \"#utility.yul\":8255:8258   */\n      dup3\n        /* \"#utility.yul\":8251:8265   */\n      add\n        /* \"#utility.yul\":8243:8265   */\n      swap1\n      pop\n        /* \"#utility.yul\":8139:8271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:9148   */\n    tag_255:\n        /* \"#utility.yul\":8459:8462   */\n      0x00\n        /* \"#utility.yul\":8488:8561   */\n      tag_368\n        /* \"#utility.yul\":8555:8560   */\n      dup3\n        /* \"#utility.yul\":8488:8561   */\n      tag_245\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8577:8663   */\n      tag_369\n        /* \"#utility.yul\":8656:8662   */\n      dup2\n        /* \"#utility.yul\":8651:8654   */\n      dup6\n        /* \"#utility.yul\":8577:8663   */\n      tag_246\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8570:8663   */\n      swap4\n      pop\n        /* \"#utility.yul\":8687:8762   */\n      tag_370\n        /* \"#utility.yul\":8756:8761   */\n      dup4\n        /* \"#utility.yul\":8687:8762   */\n      tag_247\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8785:8792   */\n      dup1\n        /* \"#utility.yul\":8816:8817   */\n      0x00\n        /* \"#utility.yul\":8801:9123   */\n    tag_371:\n        /* \"#utility.yul\":8826:8832   */\n      dup4\n        /* \"#utility.yul\":8823:8824   */\n      dup2\n        /* \"#utility.yul\":8820:8833   */\n      lt\n        /* \"#utility.yul\":8801:9123   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":8902:8908   */\n      dup2\n        /* \"#utility.yul\":8896:8909   */\n      mload\n        /* \"#utility.yul\":8929:9011   */\n      tag_374\n        /* \"#utility.yul\":9007:9010   */\n      dup9\n        /* \"#utility.yul\":8992:9005   */\n      dup3\n        /* \"#utility.yul\":8929:9011   */\n      tag_253\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8922:9011   */\n      swap8\n      pop\n        /* \"#utility.yul\":9034:9113   */\n      tag_375\n        /* \"#utility.yul\":9106:9112   */\n      dup4\n        /* \"#utility.yul\":9034:9113   */\n      tag_254\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9024:9113   */\n      swap3\n      pop\n        /* \"#utility.yul\":8861:9123   */\n      pop\n        /* \"#utility.yul\":8848:8849   */\n      0x01\n        /* \"#utility.yul\":8845:8846   */\n      dup2\n        /* \"#utility.yul\":8841:8850   */\n      add\n        /* \"#utility.yul\":8836:8850   */\n      swap1\n      pop\n        /* \"#utility.yul\":8801:9123   */\n      jump(tag_371)\n    tag_373:\n        /* \"#utility.yul\":8805:8819   */\n      pop\n        /* \"#utility.yul\":9139:9142   */\n      dup6\n        /* \"#utility.yul\":9132:9142   */\n      swap4\n      pop\n        /* \"#utility.yul\":8464:9148   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8321:9148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9154:9565   */\n    tag_42:\n        /* \"#utility.yul\":9316:9320   */\n      0x00\n        /* \"#utility.yul\":9354:9356   */\n      0x20\n        /* \"#utility.yul\":9343:9352   */\n      dup3\n        /* \"#utility.yul\":9339:9357   */\n      add\n        /* \"#utility.yul\":9331:9357   */\n      swap1\n      pop\n        /* \"#utility.yul\":9403:9412   */\n      dup2\n        /* \"#utility.yul\":9397:9401   */\n      dup2\n        /* \"#utility.yul\":9393:9413   */\n      sub\n        /* \"#utility.yul\":9389:9390   */\n      0x00\n        /* \"#utility.yul\":9378:9387   */\n      dup4\n        /* \"#utility.yul\":9374:9391   */\n      add\n        /* \"#utility.yul\":9367:9414   */\n      mstore\n        /* \"#utility.yul\":9431:9558   */\n      tag_377\n        /* \"#utility.yul\":9553:9557   */\n      dup2\n        /* \"#utility.yul\":9544:9550   */\n      dup5\n        /* \"#utility.yul\":9431:9558   */\n      tag_255\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9423:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9154:9565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9571:9689   */\n    tag_256:\n        /* \"#utility.yul\":9658:9682   */\n      tag_379\n        /* \"#utility.yul\":9676:9681   */\n      dup2\n        /* \"#utility.yul\":9658:9682   */\n      tag_225\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9653:9656   */\n      dup3\n        /* \"#utility.yul\":9646:9683   */\n      mstore\n        /* \"#utility.yul\":9571:9689   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9695:9917   */\n    tag_52:\n        /* \"#utility.yul\":9788:9792   */\n      0x00\n        /* \"#utility.yul\":9826:9828   */\n      0x20\n        /* \"#utility.yul\":9815:9824   */\n      dup3\n        /* \"#utility.yul\":9811:9829   */\n      add\n        /* \"#utility.yul\":9803:9829   */\n      swap1\n      pop\n        /* \"#utility.yul\":9839:9910   */\n      tag_381\n        /* \"#utility.yul\":9907:9908   */\n      0x00\n        /* \"#utility.yul\":9896:9905   */\n      dup4\n        /* \"#utility.yul\":9892:9909   */\n      add\n        /* \"#utility.yul\":9883:9889   */\n      dup5\n        /* \"#utility.yul\":9839:9910   */\n      tag_256\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9695:9917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9923:10045   */\n    tag_257:\n        /* \"#utility.yul\":9996:10020   */\n      tag_383\n        /* \"#utility.yul\":10014:10019   */\n      dup2\n        /* \"#utility.yul\":9996:10020   */\n      tag_225\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9989:9994   */\n      dup2\n        /* \"#utility.yul\":9986:10021   */\n      eq\n        /* \"#utility.yul\":9976:10039   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":10035:10036   */\n      0x00\n        /* \"#utility.yul\":10032:10033   */\n      dup1\n        /* \"#utility.yul\":10025:10037   */\n      revert\n        /* \"#utility.yul\":9976:10039   */\n    tag_384:\n        /* \"#utility.yul\":9923:10045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10051:10190   */\n    tag_258:\n        /* \"#utility.yul\":10097:10102   */\n      0x00\n        /* \"#utility.yul\":10135:10141   */\n      dup2\n        /* \"#utility.yul\":10122:10142   */\n      calldataload\n        /* \"#utility.yul\":10113:10142   */\n      swap1\n      pop\n        /* \"#utility.yul\":10151:10184   */\n      tag_386\n        /* \"#utility.yul\":10178:10183   */\n      dup2\n        /* \"#utility.yul\":10151:10184   */\n      tag_257\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":10051:10190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10196:10525   */\n    tag_58:\n        /* \"#utility.yul\":10255:10261   */\n      0x00\n        /* \"#utility.yul\":10304:10306   */\n      0x20\n        /* \"#utility.yul\":10292:10301   */\n      dup3\n        /* \"#utility.yul\":10283:10290   */\n      dup5\n        /* \"#utility.yul\":10279:10302   */\n      sub\n        /* \"#utility.yul\":10275:10307   */\n      slt\n        /* \"#utility.yul\":10272:10391   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":10310:10389   */\n      tag_389\n      tag_222\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":10272:10391   */\n    tag_388:\n        /* \"#utility.yul\":10430:10431   */\n      0x00\n        /* \"#utility.yul\":10455:10508   */\n      tag_390\n        /* \"#utility.yul\":10500:10507   */\n      dup5\n        /* \"#utility.yul\":10491:10497   */\n      dup3\n        /* \"#utility.yul\":10480:10489   */\n      dup6\n        /* \"#utility.yul\":10476:10498   */\n      add\n        /* \"#utility.yul\":10455:10508   */\n      tag_258\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10445:10508   */\n      swap2\n      pop\n        /* \"#utility.yul\":10401:10518   */\n      pop\n        /* \"#utility.yul\":10196:10525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10531:10700   */\n    tag_259:\n        /* \"#utility.yul\":10615:10626   */\n      0x00\n        /* \"#utility.yul\":10649:10655   */\n      dup3\n        /* \"#utility.yul\":10644:10647   */\n      dup3\n        /* \"#utility.yul\":10637:10656   */\n      mstore\n        /* \"#utility.yul\":10689:10693   */\n      0x20\n        /* \"#utility.yul\":10684:10687   */\n      dup3\n        /* \"#utility.yul\":10680:10694   */\n      add\n        /* \"#utility.yul\":10665:10694   */\n      swap1\n      pop\n        /* \"#utility.yul\":10531:10700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10706:10881   */\n    tag_260:\n        /* \"#utility.yul\":10846:10873   */\n      0x4552432d333634333a204e6f20636c61696d20746f7069637300000000000000\n        /* \"#utility.yul\":10842:10843   */\n      0x00\n        /* \"#utility.yul\":10834:10840   */\n      dup3\n        /* \"#utility.yul\":10830:10844   */\n      add\n        /* \"#utility.yul\":10823:10874   */\n      mstore\n        /* \"#utility.yul\":10706:10881   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10887:11253   */\n    tag_261:\n        /* \"#utility.yul\":11029:11032   */\n      0x00\n        /* \"#utility.yul\":11050:11117   */\n      tag_394\n        /* \"#utility.yul\":11114:11116   */\n      0x19\n        /* \"#utility.yul\":11109:11112   */\n      dup4\n        /* \"#utility.yul\":11050:11117   */\n      tag_259\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11043:11117   */\n      swap2\n      pop\n        /* \"#utility.yul\":11126:11219   */\n      tag_395\n        /* \"#utility.yul\":11215:11218   */\n      dup3\n        /* \"#utility.yul\":11126:11219   */\n      tag_260\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":11244:11246   */\n      0x20\n        /* \"#utility.yul\":11239:11242   */\n      dup3\n        /* \"#utility.yul\":11235:11247   */\n      add\n        /* \"#utility.yul\":11228:11247   */\n      swap1\n      pop\n        /* \"#utility.yul\":10887:11253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11259:11678   */\n    tag_66:\n        /* \"#utility.yul\":11425:11429   */\n      0x00\n        /* \"#utility.yul\":11463:11465   */\n      0x20\n        /* \"#utility.yul\":11452:11461   */\n      dup3\n        /* \"#utility.yul\":11448:11466   */\n      add\n        /* \"#utility.yul\":11440:11466   */\n      swap1\n      pop\n        /* \"#utility.yul\":11512:11521   */\n      dup2\n        /* \"#utility.yul\":11506:11510   */\n      dup2\n        /* \"#utility.yul\":11502:11522   */\n      sub\n        /* \"#utility.yul\":11498:11499   */\n      0x00\n        /* \"#utility.yul\":11487:11496   */\n      dup4\n        /* \"#utility.yul\":11483:11500   */\n      add\n        /* \"#utility.yul\":11476:11523   */\n      mstore\n        /* \"#utility.yul\":11540:11671   */\n      tag_397\n        /* \"#utility.yul\":11666:11670   */\n      dup2\n        /* \"#utility.yul\":11540:11671   */\n      tag_261\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11532:11671   */\n      swap1\n      pop\n        /* \"#utility.yul\":11259:11678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11684:11862   */\n    tag_262:\n        /* \"#utility.yul\":11824:11854   */\n      0x4552432d333634333a204e6f74206120636c61696d2069737375657200000000\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11812:11818   */\n      dup3\n        /* \"#utility.yul\":11808:11822   */\n      add\n        /* \"#utility.yul\":11801:11855   */\n      mstore\n        /* \"#utility.yul\":11684:11862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11868:12234   */\n    tag_263:\n        /* \"#utility.yul\":12010:12013   */\n      0x00\n        /* \"#utility.yul\":12031:12098   */\n      tag_400\n        /* \"#utility.yul\":12095:12097   */\n      0x1c\n        /* \"#utility.yul\":12090:12093   */\n      dup4\n        /* \"#utility.yul\":12031:12098   */\n      tag_259\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12024:12098   */\n      swap2\n      pop\n        /* \"#utility.yul\":12107:12200   */\n      tag_401\n        /* \"#utility.yul\":12196:12199   */\n      dup3\n        /* \"#utility.yul\":12107:12200   */\n      tag_262\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12220:12223   */\n      dup3\n        /* \"#utility.yul\":12216:12228   */\n      add\n        /* \"#utility.yul\":12209:12228   */\n      swap1\n      pop\n        /* \"#utility.yul\":11868:12234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12240:12659   */\n    tag_69:\n        /* \"#utility.yul\":12406:12410   */\n      0x00\n        /* \"#utility.yul\":12444:12446   */\n      0x20\n        /* \"#utility.yul\":12433:12442   */\n      dup3\n        /* \"#utility.yul\":12429:12447   */\n      add\n        /* \"#utility.yul\":12421:12447   */\n      swap1\n      pop\n        /* \"#utility.yul\":12493:12502   */\n      dup2\n        /* \"#utility.yul\":12487:12491   */\n      dup2\n        /* \"#utility.yul\":12483:12503   */\n      sub\n        /* \"#utility.yul\":12479:12480   */\n      0x00\n        /* \"#utility.yul\":12468:12477   */\n      dup4\n        /* \"#utility.yul\":12464:12481   */\n      add\n        /* \"#utility.yul\":12457:12504   */\n      mstore\n        /* \"#utility.yul\":12521:12652   */\n      tag_403\n        /* \"#utility.yul\":12647:12651   */\n      dup2\n        /* \"#utility.yul\":12521:12652   */\n      tag_263\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12513:12652   */\n      swap1\n      pop\n        /* \"#utility.yul\":12240:12659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12665:12782   */\n    tag_264:\n        /* \"#utility.yul\":12774:12775   */\n      0x00\n        /* \"#utility.yul\":12771:12772   */\n      dup1\n        /* \"#utility.yul\":12764:12776   */\n      revert\n        /* \"#utility.yul\":12788:12886   */\n    tag_265:\n        /* \"#utility.yul\":12872:12878   */\n      dup3\n        /* \"#utility.yul\":12867:12870   */\n      dup2\n        /* \"#utility.yul\":12862:12865   */\n      dup4\n        /* \"#utility.yul\":12849:12879   */\n      calldatacopy\n        /* \"#utility.yul\":12788:12886   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12922:13459   */\n    tag_266:\n        /* \"#utility.yul\":13050:13053   */\n      0x00\n        /* \"#utility.yul\":13071:13157   */\n      tag_407\n        /* \"#utility.yul\":13150:13156   */\n      dup4\n        /* \"#utility.yul\":13145:13148   */\n      dup6\n        /* \"#utility.yul\":13071:13157   */\n      tag_234\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13064:13157   */\n      swap4\n      pop\n        /* \"#utility.yul\":13181:13247   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13173:13179   */\n      dup4\n        /* \"#utility.yul\":13170:13248   */\n      gt\n        /* \"#utility.yul\":13167:13332   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":13251:13330   */\n      tag_409\n      tag_264\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13167:13332   */\n    tag_408:\n        /* \"#utility.yul\":13363:13367   */\n      0x20\n        /* \"#utility.yul\":13355:13361   */\n      dup4\n        /* \"#utility.yul\":13351:13368   */\n      mul\n        /* \"#utility.yul\":13341:13368   */\n      swap3\n      pop\n        /* \"#utility.yul\":13378:13421   */\n      tag_410\n        /* \"#utility.yul\":13414:13420   */\n      dup4\n        /* \"#utility.yul\":13409:13412   */\n      dup6\n        /* \"#utility.yul\":13402:13407   */\n      dup5\n        /* \"#utility.yul\":13378:13421   */\n      tag_265\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13446:13452   */\n      dup3\n        /* \"#utility.yul\":13441:13444   */\n      dup5\n        /* \"#utility.yul\":13437:13453   */\n      add\n        /* \"#utility.yul\":13430:13453   */\n      swap1\n      pop\n        /* \"#utility.yul\":12922:13459   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13465:13858   */\n    tag_75:\n        /* \"#utility.yul\":13618:13622   */\n      0x00\n        /* \"#utility.yul\":13656:13658   */\n      0x20\n        /* \"#utility.yul\":13645:13654   */\n      dup3\n        /* \"#utility.yul\":13641:13659   */\n      add\n        /* \"#utility.yul\":13633:13659   */\n      swap1\n      pop\n        /* \"#utility.yul\":13705:13714   */\n      dup2\n        /* \"#utility.yul\":13699:13703   */\n      dup2\n        /* \"#utility.yul\":13695:13715   */\n      sub\n        /* \"#utility.yul\":13691:13692   */\n      0x00\n        /* \"#utility.yul\":13680:13689   */\n      dup4\n        /* \"#utility.yul\":13676:13693   */\n      add\n        /* \"#utility.yul\":13669:13716   */\n      mstore\n        /* \"#utility.yul\":13733:13851   */\n      tag_412\n        /* \"#utility.yul\":13846:13850   */\n      dup2\n        /* \"#utility.yul\":13837:13843   */\n      dup5\n        /* \"#utility.yul\":13829:13835   */\n      dup7\n        /* \"#utility.yul\":13733:13851   */\n      tag_266\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13725:13851   */\n      swap1\n      pop\n        /* \"#utility.yul\":13465:13858   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13864:14044   */\n    tag_86:\n        /* \"#utility.yul\":13912:13989   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13909:13910   */\n      0x00\n        /* \"#utility.yul\":13902:13990   */\n      mstore\n        /* \"#utility.yul\":14009:14013   */\n      0x32\n        /* \"#utility.yul\":14006:14007   */\n      0x04\n        /* \"#utility.yul\":13999:14014   */\n      mstore\n        /* \"#utility.yul\":14033:14037   */\n      0x24\n        /* \"#utility.yul\":14030:14031   */\n      0x00\n        /* \"#utility.yul\":14023:14038   */\n      revert\n        /* \"#utility.yul\":14050:14230   */\n    tag_267:\n        /* \"#utility.yul\":14098:14175   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14095:14096   */\n      0x00\n        /* \"#utility.yul\":14088:14176   */\n      mstore\n        /* \"#utility.yul\":14195:14199   */\n      0x11\n        /* \"#utility.yul\":14192:14193   */\n      0x04\n        /* \"#utility.yul\":14185:14200   */\n      mstore\n        /* \"#utility.yul\":14219:14223   */\n      0x24\n        /* \"#utility.yul\":14216:14217   */\n      0x00\n        /* \"#utility.yul\":14209:14224   */\n      revert\n        /* \"#utility.yul\":14236:14430   */\n    tag_90:\n        /* \"#utility.yul\":14276:14280   */\n      0x00\n        /* \"#utility.yul\":14296:14316   */\n      tag_416\n        /* \"#utility.yul\":14314:14315   */\n      dup3\n        /* \"#utility.yul\":14296:14316   */\n      tag_236\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":14291:14316   */\n      swap2\n      pop\n        /* \"#utility.yul\":14330:14350   */\n      tag_417\n        /* \"#utility.yul\":14348:14349   */\n      dup4\n        /* \"#utility.yul\":14330:14350   */\n      tag_236\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":14325:14350   */\n      swap3\n      pop\n        /* \"#utility.yul\":14374:14375   */\n      dup3\n        /* \"#utility.yul\":14371:14372   */\n      dup3\n        /* \"#utility.yul\":14367:14376   */\n      sub\n        /* \"#utility.yul\":14359:14376   */\n      swap1\n      pop\n        /* \"#utility.yul\":14398:14399   */\n      dup2\n        /* \"#utility.yul\":14392:14396   */\n      dup2\n        /* \"#utility.yul\":14389:14400   */\n      gt\n        /* \"#utility.yul\":14386:14423   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":14403:14421   */\n      tag_419\n      tag_267\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14386:14423   */\n    tag_418:\n        /* \"#utility.yul\":14236:14430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14436:14616   */\n    tag_99:\n        /* \"#utility.yul\":14484:14561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14481:14482   */\n      0x00\n        /* \"#utility.yul\":14474:14562   */\n      mstore\n        /* \"#utility.yul\":14581:14585   */\n      0x31\n        /* \"#utility.yul\":14578:14579   */\n      0x04\n        /* \"#utility.yul\":14571:14586   */\n      mstore\n        /* \"#utility.yul\":14605:14609   */\n      0x24\n        /* \"#utility.yul\":14602:14603   */\n      0x00\n        /* \"#utility.yul\":14595:14610   */\n      revert\n        /* \"#utility.yul\":14622:14802   */\n    tag_268:\n        /* \"#utility.yul\":14762:14794   */\n      0x4552432d333634333a2049737375657220646f65736e27742065786973740000\n        /* \"#utility.yul\":14758:14759   */\n      0x00\n        /* \"#utility.yul\":14750:14756   */\n      dup3\n        /* \"#utility.yul\":14746:14760   */\n      add\n        /* \"#utility.yul\":14739:14795   */\n      mstore\n        /* \"#utility.yul\":14622:14802   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14808:15174   */\n    tag_269:\n        /* \"#utility.yul\":14950:14953   */\n      0x00\n        /* \"#utility.yul\":14971:15038   */\n      tag_423\n        /* \"#utility.yul\":15035:15037   */\n      0x1e\n        /* \"#utility.yul\":15030:15033   */\n      dup4\n        /* \"#utility.yul\":14971:15038   */\n      tag_259\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14964:15038   */\n      swap2\n      pop\n        /* \"#utility.yul\":15047:15140   */\n      tag_424\n        /* \"#utility.yul\":15136:15139   */\n      dup3\n        /* \"#utility.yul\":15047:15140   */\n      tag_268\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":15165:15167   */\n      0x20\n        /* \"#utility.yul\":15160:15163   */\n      dup3\n        /* \"#utility.yul\":15156:15168   */\n      add\n        /* \"#utility.yul\":15149:15168   */\n      swap1\n      pop\n        /* \"#utility.yul\":14808:15174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15180:15599   */\n    tag_110:\n        /* \"#utility.yul\":15346:15350   */\n      0x00\n        /* \"#utility.yul\":15384:15386   */\n      0x20\n        /* \"#utility.yul\":15373:15382   */\n      dup3\n        /* \"#utility.yul\":15369:15387   */\n      add\n        /* \"#utility.yul\":15361:15387   */\n      swap1\n      pop\n        /* \"#utility.yul\":15433:15442   */\n      dup2\n        /* \"#utility.yul\":15427:15431   */\n      dup2\n        /* \"#utility.yul\":15423:15443   */\n      sub\n        /* \"#utility.yul\":15419:15420   */\n      0x00\n        /* \"#utility.yul\":15408:15417   */\n      dup4\n        /* \"#utility.yul\":15404:15421   */\n      add\n        /* \"#utility.yul\":15397:15444   */\n      mstore\n        /* \"#utility.yul\":15461:15592   */\n      tag_426\n        /* \"#utility.yul\":15587:15591   */\n      dup2\n        /* \"#utility.yul\":15461:15592   */\n      tag_269\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":15453:15592   */\n      swap1\n      pop\n        /* \"#utility.yul\":15180:15599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15605:15785   */\n    tag_270:\n        /* \"#utility.yul\":15745:15777   */\n      0x4552432d333634333a20496e76616c6964207a65726f20616464726573730000\n        /* \"#utility.yul\":15741:15742   */\n      0x00\n        /* \"#utility.yul\":15733:15739   */\n      dup3\n        /* \"#utility.yul\":15729:15743   */\n      add\n        /* \"#utility.yul\":15722:15778   */\n      mstore\n        /* \"#utility.yul\":15605:15785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15791:16157   */\n    tag_271:\n        /* \"#utility.yul\":15933:15936   */\n      0x00\n        /* \"#utility.yul\":15954:16021   */\n      tag_429\n        /* \"#utility.yul\":16018:16020   */\n      0x1e\n        /* \"#utility.yul\":16013:16016   */\n      dup4\n        /* \"#utility.yul\":15954:16021   */\n      tag_259\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15947:16021   */\n      swap2\n      pop\n        /* \"#utility.yul\":16030:16123   */\n      tag_430\n        /* \"#utility.yul\":16119:16122   */\n      dup3\n        /* \"#utility.yul\":16030:16123   */\n      tag_270\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":16148:16150   */\n      0x20\n        /* \"#utility.yul\":16143:16146   */\n      dup3\n        /* \"#utility.yul\":16139:16151   */\n      add\n        /* \"#utility.yul\":16132:16151   */\n      swap1\n      pop\n        /* \"#utility.yul\":15791:16157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16163:16582   */\n    tag_127:\n        /* \"#utility.yul\":16329:16333   */\n      0x00\n        /* \"#utility.yul\":16367:16369   */\n      0x20\n        /* \"#utility.yul\":16356:16365   */\n      dup3\n        /* \"#utility.yul\":16352:16370   */\n      add\n        /* \"#utility.yul\":16344:16370   */\n      swap1\n      pop\n        /* \"#utility.yul\":16416:16425   */\n      dup2\n        /* \"#utility.yul\":16410:16414   */\n      dup2\n        /* \"#utility.yul\":16406:16426   */\n      sub\n        /* \"#utility.yul\":16402:16403   */\n      0x00\n        /* \"#utility.yul\":16391:16400   */\n      dup4\n        /* \"#utility.yul\":16387:16404   */\n      add\n        /* \"#utility.yul\":16380:16427   */\n      mstore\n        /* \"#utility.yul\":16444:16575   */\n      tag_432\n        /* \"#utility.yul\":16570:16574   */\n      dup2\n        /* \"#utility.yul\":16444:16575   */\n      tag_271\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":16436:16575   */\n      swap1\n      pop\n        /* \"#utility.yul\":16163:16582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16588:16769   */\n    tag_272:\n        /* \"#utility.yul\":16728:16761   */\n      0x4552432d333634333a2049737375657220616c72656164792065786973747300\n        /* \"#utility.yul\":16724:16725   */\n      0x00\n        /* \"#utility.yul\":16716:16722   */\n      dup3\n        /* \"#utility.yul\":16712:16726   */\n      add\n        /* \"#utility.yul\":16705:16762   */\n      mstore\n        /* \"#utility.yul\":16588:16769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16775:17141   */\n    tag_273:\n        /* \"#utility.yul\":16917:16920   */\n      0x00\n        /* \"#utility.yul\":16938:17005   */\n      tag_435\n        /* \"#utility.yul\":17002:17004   */\n      0x1f\n        /* \"#utility.yul\":16997:17000   */\n      dup4\n        /* \"#utility.yul\":16938:17005   */\n      tag_259\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":16931:17005   */\n      swap2\n      pop\n        /* \"#utility.yul\":17014:17107   */\n      tag_436\n        /* \"#utility.yul\":17103:17106   */\n      dup3\n        /* \"#utility.yul\":17014:17107   */\n      tag_272\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":17132:17134   */\n      0x20\n        /* \"#utility.yul\":17127:17130   */\n      dup3\n        /* \"#utility.yul\":17123:17135   */\n      add\n        /* \"#utility.yul\":17116:17135   */\n      swap1\n      pop\n        /* \"#utility.yul\":16775:17141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17147:17566   */\n    tag_130:\n        /* \"#utility.yul\":17313:17317   */\n      0x00\n        /* \"#utility.yul\":17351:17353   */\n      0x20\n        /* \"#utility.yul\":17340:17349   */\n      dup3\n        /* \"#utility.yul\":17336:17354   */\n      add\n        /* \"#utility.yul\":17328:17354   */\n      swap1\n      pop\n        /* \"#utility.yul\":17400:17409   */\n      dup2\n        /* \"#utility.yul\":17394:17398   */\n      dup2\n        /* \"#utility.yul\":17390:17410   */\n      sub\n        /* \"#utility.yul\":17386:17387   */\n      0x00\n        /* \"#utility.yul\":17375:17384   */\n      dup4\n        /* \"#utility.yul\":17371:17388   */\n      add\n        /* \"#utility.yul\":17364:17411   */\n      mstore\n        /* \"#utility.yul\":17428:17559   */\n      tag_438\n        /* \"#utility.yul\":17554:17558   */\n      dup2\n        /* \"#utility.yul\":17428:17559   */\n      tag_273\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":17420:17559   */\n      swap1\n      pop\n        /* \"#utility.yul\":17147:17566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17572:17750   */\n    tag_274:\n        /* \"#utility.yul\":17712:17742   */\n      0x4552432d333634333a20456d70747920636c61696d20746f7069637300000000\n        /* \"#utility.yul\":17708:17709   */\n      0x00\n        /* \"#utility.yul\":17700:17706   */\n      dup3\n        /* \"#utility.yul\":17696:17710   */\n      add\n        /* \"#utility.yul\":17689:17743   */\n      mstore\n        /* \"#utility.yul\":17572:17750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17756:18122   */\n    tag_275:\n        /* \"#utility.yul\":17898:17901   */\n      0x00\n        /* \"#utility.yul\":17919:17986   */\n      tag_441\n        /* \"#utility.yul\":17983:17985   */\n      0x1c\n        /* \"#utility.yul\":17978:17981   */\n      dup4\n        /* \"#utility.yul\":17919:17986   */\n      tag_259\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":17912:17986   */\n      swap2\n      pop\n        /* \"#utility.yul\":17995:18088   */\n      tag_442\n        /* \"#utility.yul\":18084:18087   */\n      dup3\n        /* \"#utility.yul\":17995:18088   */\n      tag_274\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":18113:18115   */\n      0x20\n        /* \"#utility.yul\":18108:18111   */\n      dup3\n        /* \"#utility.yul\":18104:18116   */\n      add\n        /* \"#utility.yul\":18097:18116   */\n      swap1\n      pop\n        /* \"#utility.yul\":17756:18122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18128:18547   */\n    tag_133:\n        /* \"#utility.yul\":18294:18298   */\n      0x00\n        /* \"#utility.yul\":18332:18334   */\n      0x20\n        /* \"#utility.yul\":18321:18330   */\n      dup3\n        /* \"#utility.yul\":18317:18335   */\n      add\n        /* \"#utility.yul\":18309:18335   */\n      swap1\n      pop\n        /* \"#utility.yul\":18381:18390   */\n      dup2\n        /* \"#utility.yul\":18375:18379   */\n      dup2\n        /* \"#utility.yul\":18371:18391   */\n      sub\n        /* \"#utility.yul\":18367:18368   */\n      0x00\n        /* \"#utility.yul\":18356:18365   */\n      dup4\n        /* \"#utility.yul\":18352:18369   */\n      add\n        /* \"#utility.yul\":18345:18392   */\n      mstore\n        /* \"#utility.yul\":18409:18540   */\n      tag_444\n        /* \"#utility.yul\":18535:18539   */\n      dup2\n        /* \"#utility.yul\":18409:18540   */\n      tag_275\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":18401:18540   */\n      swap1\n      pop\n        /* \"#utility.yul\":18128:18547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209aeff2bf71839148e70434184c466a17740c1c1b9de7b168be11b7eb6402406264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_379": {
									"entryPoint": null,
									"id": 379,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_475": {
									"entryPoint": 157,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:8",
														"type": ""
													}
												],
												"src": "139:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:8",
														"type": ""
													}
												],
												"src": "241:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:8",
														"type": ""
													}
												],
												"src": "365:222:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000085575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007c9190620001a1565b60405180910390fd5b62000096816200009d60201b60201c565b50620001bc565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000189826200015e565b9050919050565b6200019b816200017d565b82525050565b5f602082019050620001b65f83018462000190565b92915050565b611b9780620001ca5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80636b2c56bd1161006f5780636b2c56bd1461015f5780636de487081461018f578063715018a6146101bf5780638da5cb5b146101c9578063d4f4ac4e146101e7578063f2fde38b14610205576100a7565b806304bc7e84146100ab5780630b4b764c146100c7578063122dade8146100e357806334a899871461011357806338d742a414610143575b5f80fd5b6100c560048036038101906100c091906113cf565b610221565b005b6100e160048036038101906100dc919061142c565b6103a0565b005b6100fd60048036038101906100f8919061142c565b61063e565b60405161010a9190611517565b60405180910390f35b61012d60048036038101906101289190611561565b610719565b60405161013a91906115b9565b60405180910390f35b61015d600480360381019061015891906113cf565b61083a565b005b610179600480360381019061017491906115d2565b610b1c565b6040516101869190611700565b60405180910390f35b6101a960048036038101906101a4919061142c565b610bb8565b6040516101b691906115b9565b60405180910390f35b6101c7610bc9565b005b6101d1610bdc565b6040516101de919061172f565b60405180910390f35b6101ef610c03565b6040516101fc9190611700565b60405180910390f35b61021f600480360381019061021a9190611772565b610c8e565b005b610229610d12565b5f828290500361026e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610265906117f7565b60405180910390fd5b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f81036102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb9061185f565b60405180910390fd5b6102fd84610d99565b828260025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209190610349929190611277565b508373ffffffffffffffffffffffffffffffffffffffff167fec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf84846040516103929291906118e5565b60405180910390a250505050565b6103a8610d12565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f810361042e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104259061185f565b60405180910390fd5b5f60018054905090505f5b818110156105a3578373ffffffffffffffffffffffffffffffffffffffff166001828154811061046c5761046b611907565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361059857600180836104bd9190611961565b815481106104ce576104cd611907565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001828154811061050a57610509611907565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061056157610560611994565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556105a3565b806001019050610439565b506105ae8383610ef8565b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6105f691906112c2565b8273ffffffffffffffffffffffffffffffffffffffff167f8432c8693d2550c2eb52d3f0a803b38eb8c3c0e62234fa1b6b8b35cc3866785460405160405180910390a2505050565b606061064982610f78565b610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90611a0b565b60405180910390fd5b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561070d57602002820191905f5260205f20905b8154815260200190600101908083116106f9575b50505050509050919050565b5f8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054806020026020016040519081016040528092919081815260200182805480156107e457602002820191905f5260205f20905b8154815260200190600101908083116107d0575b505050505090505f5b8281101561082d578482828151811061080957610808611907565b5b6020026020010151036108225760019350505050610834565b8060010190506107ed565b505f925050505b92915050565b610842610d12565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611a73565b60405180910390fd5b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905014610932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092990611adb565b60405180910390fd5b5f8282905090505f810361097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290611b43565b60405180910390fd5b600184908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828260025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209190610a27929190611277565b505f5b81811015610ac55760035f858584818110610a4857610a47611907565b5b9050602002013581526020019081526020015f2085908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001019050610a2a565b508373ffffffffffffffffffffffffffffffffffffffff167f375851630239b005eafd9230e43a9a9d4a5d7b96a4956fc8e9d2ab3ff4583d168484604051610b0e9291906118e5565b60405180910390a250505050565b606060035f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610bac57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b63575b50505050509050919050565b5f610bc282610f78565b9050919050565b610bd1610d12565b610bda5f610fc4565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805480602002602001604051908101604052809291908181526020018280548015610c8457602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c3b575b5050505050905090565b610c96610d12565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d06575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cfd919061172f565b60405180910390fd5b610d0f81610fc4565b50565b610d1a611085565b73ffffffffffffffffffffffffffffffffffffffff16610d38610bdc565b73ffffffffffffffffffffffffffffffffffffffff1614610d9757610d5b611085565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d8e919061172f565b60405180910390fd5b565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610e1f57602002820191905f5260205f20905b815481526020019060010190808311610e0b575b505050505090505f815190505f5b81811015610ef2575f838281518110610e4957610e48611907565b5b60200260200101519050610e5d858261108c565b60035f858481518110610e7357610e72611907565b5b602002602001015181526020019081526020015f2085908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600101915050610e2d565b50505050565b5f5b81811015610f73575f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610f5257610f51611907565b5b905f5260205f2001549050610f67848261108c565b81600101915050610efa565b505050565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905014159050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f60035f8381526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561111b57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110d2575b505050505090505f815190505f5b81811015611270578473ffffffffffffffffffffffffffffffffffffffff1683828151811061115b5761115a611907565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611265578260018361118c9190611961565b8151811061119d5761119c611907565b5b602002602001015160035f8681526020019081526020015f2082815481106111c8576111c7611907565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035f8581526020019081526020015f2080548061122e5761122d611994565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055611270565b806001019050611129565b5050505050565b828054828255905f5260205f209081019282156112b1579160200282015b828111156112b0578235825591602001919060010190611295565b5b5090506112be91906112e0565b5090565b5080545f8255905f5260205f20908101906112dd91906112e0565b50565b5b808211156112f7575f815f9055506001016112e1565b5090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61132c82611303565b9050919050565b5f61133d82611322565b9050919050565b61134d81611333565b8114611357575f80fd5b50565b5f8135905061136881611344565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261138f5761138e61136e565b5b8235905067ffffffffffffffff8111156113ac576113ab611372565b5b6020830191508360208202830111156113c8576113c7611376565b5b9250929050565b5f805f604084860312156113e6576113e56112fb565b5b5f6113f38682870161135a565b935050602084013567ffffffffffffffff811115611414576114136112ff565b5b6114208682870161137a565b92509250509250925092565b5f60208284031215611441576114406112fb565b5b5f61144e8482850161135a565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61149281611480565b82525050565b5f6114a38383611489565b60208301905092915050565b5f602082019050919050565b5f6114c582611457565b6114cf8185611461565b93506114da83611471565b805f5b8381101561150a5781516114f18882611498565b97506114fc836114af565b9250506001810190506114dd565b5085935050505092915050565b5f6020820190508181035f83015261152f81846114bb565b905092915050565b61154081611480565b811461154a575f80fd5b50565b5f8135905061155b81611537565b92915050565b5f8060408385031215611577576115766112fb565b5b5f6115848582860161135a565b92505060206115958582860161154d565b9150509250929050565b5f8115159050919050565b6115b38161159f565b82525050565b5f6020820190506115cc5f8301846115aa565b92915050565b5f602082840312156115e7576115e66112fb565b5b5f6115f48482850161154d565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b5f61164961164461163f84611303565b611626565b611303565b9050919050565b5f61165a8261162f565b9050919050565b5f61166b82611650565b9050919050565b61167b81611661565b82525050565b5f61168c8383611672565b60208301905092915050565b5f602082019050919050565b5f6116ae826115fd565b6116b88185611607565b93506116c383611617565b805f5b838110156116f35781516116da8882611681565b97506116e583611698565b9250506001810190506116c6565b5085935050505092915050565b5f6020820190508181035f83015261171881846116a4565b905092915050565b61172981611322565b82525050565b5f6020820190506117425f830184611720565b92915050565b61175181611322565b811461175b575f80fd5b50565b5f8135905061176c81611748565b92915050565b5f60208284031215611787576117866112fb565b5b5f6117948482850161175e565b91505092915050565b5f82825260208201905092915050565b7f4552432d333634333a204e6f20636c61696d20746f70696373000000000000005f82015250565b5f6117e160198361179d565b91506117ec826117ad565b602082019050919050565b5f6020820190508181035f83015261180e816117d5565b9050919050565b7f4552432d333634333a204e6f74206120636c61696d20697373756572000000005f82015250565b5f611849601c8361179d565b915061185482611815565b602082019050919050565b5f6020820190508181035f8301526118768161183d565b9050919050565b5f80fd5b82818337505050565b5f6118958385611461565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156118c8576118c761187d565b5b6020830292506118d9838584611881565b82840190509392505050565b5f6020820190508181035f8301526118fe81848661188a565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61196b82611480565b915061197683611480565b925082820390508181111561198e5761198d611934565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f4552432d333634333a2049737375657220646f65736e277420657869737400005f82015250565b5f6119f5601e8361179d565b9150611a00826119c1565b602082019050919050565b5f6020820190508181035f830152611a22816119e9565b9050919050565b7f4552432d333634333a20496e76616c6964207a65726f206164647265737300005f82015250565b5f611a5d601e8361179d565b9150611a6882611a29565b602082019050919050565b5f6020820190508181035f830152611a8a81611a51565b9050919050565b7f4552432d333634333a2049737375657220616c726561647920657869737473005f82015250565b5f611ac5601f8361179d565b9150611ad082611a91565b602082019050919050565b5f6020820190508181035f830152611af281611ab9565b9050919050565b7f4552432d333634333a20456d70747920636c61696d20746f70696373000000005f82015250565b5f611b2d601c8361179d565b9150611b3882611af9565b602082019050919050565b5f6020820190508181035f830152611b5a81611b21565b905091905056fea26469706673582212209aeff2bf71839148e70434184c466a17740c1c1b9de7b168be11b7eb6402406264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP2 SWAP1 PUSH3 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x96 DUP2 PUSH3 0x9D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1BC JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x189 DUP3 PUSH3 0x15E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x19B DUP2 PUSH3 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1B6 PUSH0 DUP4 ADD DUP5 PUSH3 0x190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B97 DUP1 PUSH3 0x1CA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B2C56BD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6B2C56BD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x6DE48708 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xD4F4AC4E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x205 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xB4B764C EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x122DADE8 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x38D742A4 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0xBC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0xD12 JUMP JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FD DUP5 PUSH2 0xD99 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP2 SWAP1 PUSH2 0x349 SWAP3 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x392 SWAP3 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0xD12 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x598 JUMPI PUSH1 0x1 DUP1 DUP4 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4CE JUMPI PUSH2 0x4CD PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x50A JUMPI PUSH2 0x509 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x561 JUMPI PUSH2 0x560 PUSH2 0x1994 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x5A3 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x439 JUMP JUMPDEST POP PUSH2 0x5AE DUP4 DUP4 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x12C2 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8432C8693D2550C2EB52D3F0A803B38EB8C3C0E62234FA1B6B8B35CC38667854 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x649 DUP3 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6F9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x7D0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x82D JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x822 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x834 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x7ED JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x842 PUSH2 0xD12 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP2 SWAP1 PUSH2 0xA27 SWAP3 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x3 PUSH0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xA2A JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x375851630239B005EAFD9230E43A9A9D4A5D7B96A4956FC8E9D2AB3FF4583D16 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB0E SWAP3 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBAC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xB63 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBC2 DUP3 PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD1 PUSH2 0xD12 JUMP JUMPDEST PUSH2 0xBDA PUSH0 PUSH2 0xFC4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC84 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC3B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xD12 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD06 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0F DUP2 PUSH2 0xFC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD1A PUSH2 0x1085 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD38 PUSH2 0xBDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD97 JUMPI PUSH2 0xD5B PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8E SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE1F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE0B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEF2 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xE5D DUP6 DUP3 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE73 JUMPI PUSH2 0xE72 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF73 JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF52 JUMPI PUSH2 0xF51 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH2 0xF67 DUP5 DUP3 PUSH2 0x108C JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x111B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x10D2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1270 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1265 JUMPI DUP3 PUSH1 0x1 DUP4 PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x119D JUMPI PUSH2 0x119C PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI PUSH2 0x11C7 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x1994 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1270 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x12B1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12B0 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1295 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x12BE SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12F7 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x12E1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x132C DUP3 PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x133D DUP3 PUSH2 0x1322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1333 JUMP JUMPDEST DUP2 EQ PUSH2 0x1357 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1368 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x138F JUMPI PUSH2 0x138E PUSH2 0x136E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x1372 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x13C8 JUMPI PUSH2 0x13C7 PUSH2 0x1376 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E6 JUMPI PUSH2 0x13E5 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F3 DUP7 DUP3 DUP8 ADD PUSH2 0x135A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1414 JUMPI PUSH2 0x1413 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH2 0x1420 DUP7 DUP3 DUP8 ADD PUSH2 0x137A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1440 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144E DUP5 DUP3 DUP6 ADD PUSH2 0x135A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A3 DUP4 DUP4 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C5 DUP3 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x14CF DUP2 DUP6 PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP PUSH2 0x14DA DUP4 PUSH2 0x1471 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x150A JUMPI DUP2 MLOAD PUSH2 0x14F1 DUP9 DUP3 PUSH2 0x1498 JUMP JUMPDEST SWAP8 POP PUSH2 0x14FC DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152F DUP2 DUP5 PUSH2 0x14BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1540 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP2 EQ PUSH2 0x154A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x155B DUP2 PUSH2 0x1537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1576 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1584 DUP6 DUP3 DUP7 ADD PUSH2 0x135A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x154D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x159F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CC PUSH0 DUP4 ADD DUP5 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E7 JUMPI PUSH2 0x15E6 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F4 DUP5 DUP3 DUP6 ADD PUSH2 0x154D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1649 PUSH2 0x1644 PUSH2 0x163F DUP5 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165A DUP3 PUSH2 0x162F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x166B DUP3 PUSH2 0x1650 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x167B DUP2 PUSH2 0x1661 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168C DUP4 DUP4 PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE DUP3 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x16B8 DUP2 DUP6 PUSH2 0x1607 JUMP JUMPDEST SWAP4 POP PUSH2 0x16C3 DUP4 PUSH2 0x1617 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F3 JUMPI DUP2 MLOAD PUSH2 0x16DA DUP9 DUP3 PUSH2 0x1681 JUMP JUMPDEST SWAP8 POP PUSH2 0x16E5 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16C6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1718 DUP2 DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1729 DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1742 PUSH0 DUP4 ADD DUP5 PUSH2 0x1720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1751 DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP2 EQ PUSH2 0x175B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x176C DUP2 PUSH2 0x1748 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1794 DUP5 DUP3 DUP6 ADD PUSH2 0x175E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552432D333634333A204E6F20636C61696D20746F7069637300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17E1 PUSH1 0x19 DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP3 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x180E DUP2 PUSH2 0x17D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A204E6F74206120636C61696D2069737375657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1849 PUSH1 0x1C DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1854 DUP3 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1876 DUP2 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 DUP4 DUP6 PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x18D9 DUP4 DUP6 DUP5 PUSH2 0x1881 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 DUP5 DUP7 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x196B DUP3 PUSH2 0x1480 JUMP JUMPDEST SWAP2 POP PUSH2 0x1976 DUP4 PUSH2 0x1480 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x1934 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4552432D333634333A2049737375657220646F65736E27742065786973740000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F5 PUSH1 0x1E DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A00 DUP3 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A22 DUP2 PUSH2 0x19E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A20496E76616C6964207A65726F20616464726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5D PUSH1 0x1E DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A68 DUP3 PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8A DUP2 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A2049737375657220616C72656164792065786973747300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC5 PUSH1 0x1F DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD0 DUP3 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF2 DUP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A20456D70747920636C61696D20746F7069637300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2D PUSH1 0x1C DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B38 DUP3 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5A DUP2 PUSH2 0x1B21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xEF CALLCODE 0xBF PUSH18 0x839148E70434184C466A17740C1C1B9DE7B1 PUSH9 0xBE11B7EB6402406264 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "413:9169:6:-:0;;;;;;;;;;;;;477:10;1297:1:4;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;413:9169:6;;2912:187:4;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;413:9169:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_413": {
									"entryPoint": 3346,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isClaimIssuer_1039": {
									"entryPoint": 3960,
									"id": 1039,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_488": {
									"entryPoint": 4229,
									"id": 488,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeClaimIssuerFromAllClaimTopics_903": {
									"entryPoint": 3832,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removeIssuerFromTopic_1021": {
									"entryPoint": 4236,
									"id": 1021,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_475": {
									"entryPoint": 4036,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateIssuerAcrossAllTopics_958": {
									"entryPoint": 3481,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addClaimIssuer_624": {
									"entryPoint": 2106,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getClaimIssuerClaimTopics_815": {
									"entryPoint": 1598,
									"id": 815,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClaimIssuersForClaimTopic_779": {
									"entryPoint": 2844,
									"id": 779,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClaimIssuers_764": {
									"entryPoint": 3075,
									"id": 764,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasClaimTopic_867": {
									"entryPoint": 1817,
									"id": 867,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isClaimIssuer_793": {
									"entryPoint": 3000,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_396": {
									"entryPoint": 3036,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeClaimIssuer_703": {
									"entryPoint": 928,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_427": {
									"entryPoint": 3017,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_455": {
									"entryPoint": 3214,
									"id": 455,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateIssuerClaimTopics_753": {
									"entryPoint": 545,
									"id": 753,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_contract$_IClaimIssuer_$49": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IClaimIssuer_$49": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IClaimIssuer_$49t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_IClaimIssuer_$49t_uint256": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_contract$_IClaimIssuer_$49_to_t_address": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IClaimIssuer_$49_to_t_address": {
									"entryPoint": 5746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IClaimIssuer_$49": {
									"entryPoint": 4915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IClaimIssuer_$49_to_t_address": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IClaimIssuer_$49": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18550:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "642:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IClaimIssuer_$49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "614:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "624:7:8",
														"type": ""
													}
												],
												"src": "568:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "751:98:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "827:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "836:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "839:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IClaimIssuer_$49",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "764:62:8"
															},
															"nodeType": "YulIf",
															"src": "761:82:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IClaimIssuer_$49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "744:5:8",
														"type": ""
													}
												],
												"src": "689:160:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "926:106:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "936:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "945:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1020:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IClaimIssuer_$49",
																	"nodeType": "YulIdentifier",
																	"src": "974:45:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "974:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "974:52:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IClaimIssuer_$49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "904:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "912:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "920:5:8",
														"type": ""
													}
												],
												"src": "855:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1127:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1137:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1038:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1250:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1260:12:8"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1161:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1373:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1393:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1383:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1383:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1284:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:478:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1563:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1565:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1565:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1565:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1542:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1550:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1538:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1538:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1557:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1534:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1527:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:35:8"
															},
															"nodeType": "YulIf",
															"src": "1524:122:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1655:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1678:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1665:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1728:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1730:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1730:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1708:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1697:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:30:8"
															},
															"nodeType": "YulIf",
															"src": "1694:117:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1820:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1836:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1844:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1832:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1820:8:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1903:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1905:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "1868:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1882:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1890:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1878:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1878:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:32:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1898:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1861:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:41:8"
															},
															"nodeType": "YulIf",
															"src": "1858:128:8"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1497:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1507:6:8",
														"type": ""
													}
												],
												"src": "1424:568:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2135:605:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2181:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2183:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2183:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2183:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2156:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2152:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2177:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2148:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:32:8"
															},
															"nodeType": "YulIf",
															"src": "2145:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2274:136:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2289:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2303:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2293:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2318:82:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2372:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2368:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IClaimIssuer_$49",
																			"nodeType": "YulIdentifier",
																			"src": "2328:39:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2328:72:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2318:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2420:313:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2435:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2466:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2477:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2462:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2462:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2449:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2449:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2439:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2528:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2530:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2530:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2530:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2500:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2508:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2497:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2497:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "2494:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2625:98:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2695:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2706:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2691:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2715:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2643:47:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2643:80:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2625:6:8"
																		},
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2633:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IClaimIssuer_$49t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2089:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2100:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2112:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2120:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2128:6:8",
														"type": ""
													}
												],
												"src": "1998:742:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2831:282:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2877:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2879:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2879:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2879:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2852:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2861:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2848:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2873:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2844:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:32:8"
															},
															"nodeType": "YulIf",
															"src": "2841:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2970:136:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2985:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2989:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3014:82:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3068:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3079:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3064:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3088:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IClaimIssuer_$49",
																			"nodeType": "YulIdentifier",
																			"src": "3024:39:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3024:72:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3014:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IClaimIssuer_$49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:8",
														"type": ""
													}
												],
												"src": "2746:367:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3193:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3204:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3220:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3214:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3176:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3186:6:8",
														"type": ""
													}
												],
												"src": "3119:114:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3350:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3367:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3372:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3360:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3407:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3412:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3403:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3388:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3322:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3327:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3338:11:8",
														"type": ""
													}
												],
												"src": "3239:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3501:60:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3511:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3519:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3511:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3532:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3544:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3549:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3540:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3532:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3488:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3496:4:8",
														"type": ""
													}
												],
												"src": "3429:132:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3622:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3633:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3622:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3594:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3604:7:8",
														"type": ""
													}
												],
												"src": "3567:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3705:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3722:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3745:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3727:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3727:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3715:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3715:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3715:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3693:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3700:3:8",
														"type": ""
													}
												],
												"src": "3650:108:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3844:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3888:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3896:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3854:33:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3854:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3854:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3909:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3932:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3923:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3909:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3817:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3825:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3833:10:8",
														"type": ""
													}
												],
												"src": "3764:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4024:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4034:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4046:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4034:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4011:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4019:4:8",
														"type": ""
													}
												],
												"src": "3949:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4222:608:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4232:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4294:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4246:47:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:54:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4236:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4309:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4390:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4395:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4316:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4309:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4411:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4476:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4426:49:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:56:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4415:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4491:21:8",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4505:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4495:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4581:224:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4595:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4622:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4616:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4599:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4642:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4693:13:8"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4708:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4649:43:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4649:63:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4642:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4725:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4788:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4735:52:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4735:60:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4725:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4543:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4546:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4540:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4554:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4556:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4565:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4568:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4561:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4561:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4556:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4525:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4527:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4536:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4531:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4521:284:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4814:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4821:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4201:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4208:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4217:3:8",
														"type": ""
													}
												],
												"src": "4098:732:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4984:225:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4994:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5006:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5017:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4994:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5041:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5052:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5037:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5037:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5060:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5066:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5056:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5030:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5030:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5030:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5086:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5188:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5197:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5094:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5094:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5086:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4956:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4968:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4979:4:8",
														"type": ""
													}
												],
												"src": "4836:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5258:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5315:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5324:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5327:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5317:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5317:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5317:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5281:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5306:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5288:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5288:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5278:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5278:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:43:8"
															},
															"nodeType": "YulIf",
															"src": "5268:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5251:5:8",
														"type": ""
													}
												],
												"src": "5215:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5395:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5405:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5427:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5414:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5405:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5470:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5443:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5443:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5373:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5381:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5389:5:8",
														"type": ""
													}
												],
												"src": "5343:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5590:410:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5636:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5638:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5638:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5638:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5611:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5620:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5607:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5607:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5632:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5603:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:32:8"
															},
															"nodeType": "YulIf",
															"src": "5600:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5729:136:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5744:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5758:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5748:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5773:82:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5827:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5838:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5823:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5823:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5847:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IClaimIssuer_$49",
																			"nodeType": "YulIdentifier",
																			"src": "5783:39:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5783:72:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5773:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5875:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5890:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5894:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5920:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5955:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5966:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5951:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5951:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5975:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5930:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5920:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IClaimIssuer_$49t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5552:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5563:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5575:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5583:6:8",
														"type": ""
													}
												],
												"src": "5488:512:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6058:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6083:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6076:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6076:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6058:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6030:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6040:7:8",
														"type": ""
													}
												],
												"src": "6006:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6161:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6178:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6198:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6183:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6183:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6149:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6156:3:8",
														"type": ""
													}
												],
												"src": "6102:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6309:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6319:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6331:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6342:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6327:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6319:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6406:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6402:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6355:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6355:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6281:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6293:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6304:4:8",
														"type": ""
													}
												],
												"src": "6217:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6499:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6545:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6547:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6547:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6547:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6520:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6529:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6516:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6541:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6512:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6512:32:8"
															},
															"nodeType": "YulIf",
															"src": "6509:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6638:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6653:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6667:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6657:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6682:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6717:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6728:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6713:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6713:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6737:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6692:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6692:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6682:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6469:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6480:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6492:6:8",
														"type": ""
													}
												],
												"src": "6433:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6861:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6872:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6888:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6882:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6844:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6854:6:8",
														"type": ""
													}
												],
												"src": "6768:133:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7018:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7035:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7040:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7056:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7075:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7080:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7071:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7056:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6990:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6995:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7006:11:8",
														"type": ""
													}
												],
												"src": "6907:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7188:60:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7198:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "7206:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7198:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7219:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7231:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7236:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7227:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7227:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7219:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7175:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7183:4:8",
														"type": ""
													}
												],
												"src": "7097:151:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7286:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7303:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7272:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7282:3:8",
														"type": ""
													}
												],
												"src": "7254:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7380:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7390:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7448:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "7430:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7430:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7421:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7421:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7403:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7390:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7360:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7370:9:8",
														"type": ""
													}
												],
												"src": "7320:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7528:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7538:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7582:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7551:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7551:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7538:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7508:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7518:9:8",
														"type": ""
													}
												],
												"src": "7468:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7679:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7689:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7733:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7702:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7702:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7689:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IClaimIssuer_$49_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7659:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7669:9:8",
														"type": ""
													}
												],
												"src": "7600:145:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7825:85:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7842:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7897:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IClaimIssuer_$49_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7847:49:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7847:56:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:69:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IClaimIssuer_$49_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7813:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7820:3:8",
														"type": ""
													}
												],
												"src": "7751:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8015:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8078:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8086:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IClaimIssuer_$49_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8025:52:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8025:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8025:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8099:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8117:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8122:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8113:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "8099:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_contract$_IClaimIssuer_$49_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7988:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7996:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8004:10:8",
														"type": ""
													}
												],
												"src": "7916:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8233:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8243:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8255:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8260:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8251:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8251:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "8243:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8220:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "8228:4:8",
														"type": ""
													}
												],
												"src": "8139:132:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8464:684:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8474:87:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8555:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8488:66:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:73:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8478:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8570:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8651:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8656:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8577:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8570:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8672:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8756:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8687:68:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:75:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "8676:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8771:21:8",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "8785:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8775:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8861:262:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8875:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8902:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8896:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8896:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "8879:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8922:89:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "8992:13:8"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9007:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_contract$_IClaimIssuer_$49_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "8929:62:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8929:82:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8922:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9024:89:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9106:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9034:71:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9034:79:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9024:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8823:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8826:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8820:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8820:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8834:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8836:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8845:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8848:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8841:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8841:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8836:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8805:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8807:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8816:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "8811:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8801:322:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9132:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9139:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9132:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8443:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8450:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8459:3:8",
														"type": ""
													}
												],
												"src": "8321:827:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9321:244:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9331:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9343:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9354:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9339:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9339:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9331:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9378:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9389:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9374:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9374:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9397:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9403:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9393:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9393:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9367:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9367:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9367:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9423:135:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9544:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9553:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9431:112:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:127:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9423:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9293:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9305:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9316:4:8",
														"type": ""
													}
												],
												"src": "9154:411:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9636:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9653:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9676:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9658:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9658:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9646:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9646:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9646:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9624:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9631:3:8",
														"type": ""
													}
												],
												"src": "9571:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9793:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9803:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9815:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9826:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9811:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9803:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9883:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9896:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9907:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9892:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9839:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9839:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9839:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9765:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9777:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9788:4:8",
														"type": ""
													}
												],
												"src": "9695:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9966:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10023:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10032:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10035:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10025:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10025:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10025:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9989:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10014:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9996:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9996:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9986:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9986:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9979:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9979:43:8"
															},
															"nodeType": "YulIf",
															"src": "9976:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9959:5:8",
														"type": ""
													}
												],
												"src": "9923:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10103:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10113:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10122:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10122:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10113:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10178:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10151:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10151:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10151:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10081:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10089:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10097:5:8",
														"type": ""
													}
												],
												"src": "10051:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10262:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10308:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10310:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10310:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10310:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10279:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10275:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:32:8"
															},
															"nodeType": "YulIf",
															"src": "10272:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "10401:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10416:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10430:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10420:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10445:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10480:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10491:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10476:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10476:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10500:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10455:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10455:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10445:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10232:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10243:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10255:6:8",
														"type": ""
													}
												],
												"src": "10196:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10627:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10644:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10649:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10637:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10637:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10637:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10665:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10684:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10689:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10680:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10665:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10599:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10615:11:8",
														"type": ""
													}
												],
												"src": "10531:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10812:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10834:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10842:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10830:14:8"
																	},
																	{
																		"hexValue": "4552432d333634333a204e6f20636c61696d20746f70696373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10846:27:8",
																		"type": "",
																		"value": "ERC-3643: No claim topics"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10823:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10823:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10804:6:8",
														"type": ""
													}
												],
												"src": "10706:175:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11033:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11043:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11109:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11114:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11050:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11050:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11043:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11215:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec",
																	"nodeType": "YulIdentifier",
																	"src": "11126:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11126:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11126:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11228:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11239:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11244:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11235:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11235:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11228:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11021:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11029:3:8",
														"type": ""
													}
												],
												"src": "10887:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11430:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11440:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11452:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11463:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11448:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11440:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11487:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11498:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11483:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11483:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11506:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11512:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11502:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11502:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11476:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11476:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11476:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11532:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11666:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11540:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11540:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11532:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11410:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11425:4:8",
														"type": ""
													}
												],
												"src": "11259:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11790:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11812:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11820:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11808:14:8"
																	},
																	{
																		"hexValue": "4552432d333634333a204e6f74206120636c61696d20697373756572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11824:30:8",
																		"type": "",
																		"value": "ERC-3643: Not a claim issuer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11801:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11801:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11782:6:8",
														"type": ""
													}
												],
												"src": "11684:178:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12014:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12024:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12090:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12095:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12031:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12024:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12196:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40",
																	"nodeType": "YulIdentifier",
																	"src": "12107:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12107:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12209:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12220:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12225:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12216:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12216:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12209:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12002:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12010:3:8",
														"type": ""
													}
												],
												"src": "11868:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12411:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12421:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12433:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12444:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12429:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12429:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12421:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12468:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12479:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12464:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12464:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12487:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12493:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12483:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12483:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12457:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12457:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12457:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12513:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12647:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12521:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12521:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12513:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12391:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12406:4:8",
														"type": ""
													}
												],
												"src": "12240:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12754:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12771:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12774:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12764:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12764:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12764:12:8"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nodeType": "YulFunctionDefinition",
												"src": "12665:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12839:47:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "12862:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12867:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12872:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "12849:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12849:30:8"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12821:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12826:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12831:6:8",
														"type": ""
													}
												],
												"src": "12788:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13054:405:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13064:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13145:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13150:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13071:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13064:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13249:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nodeType": "YulIdentifier",
																				"src": "13251:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13251:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13251:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13173:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13181:66:8",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13170:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13170:78:8"
															},
															"nodeType": "YulIf",
															"src": "13167:165:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13341:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13355:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13363:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13351:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13351:17:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13341:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "13402:5:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13409:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13414:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13378:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13378:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13378:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13430:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13441:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13446:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13437:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13430:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "13027:5:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13034:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13042:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13050:3:8",
														"type": ""
													}
												],
												"src": "12922:537:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13623:235:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13633:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13645:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13656:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13641:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13641:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13633:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13680:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13691:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13676:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13676:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13699:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13705:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13695:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13695:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13669:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13669:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13669:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13725:126:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13829:6:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13837:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13846:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13733:95:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13733:118:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13725:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13587:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13599:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13607:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13618:4:8",
														"type": ""
													}
												],
												"src": "13465:393:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13892:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13909:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13912:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13902:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13902:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14006:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14009:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13999:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13999:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13999:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14030:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14033:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14023:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14023:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14023:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13864:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14078:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14095:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14098:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14088:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14088:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14088:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14192:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14195:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14185:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14185:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14185:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14216:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14219:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14209:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14209:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14050:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14281:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14291:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14314:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14296:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14296:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14291:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14325:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14348:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14330:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14330:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14325:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14359:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14371:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14374:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14367:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14367:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14359:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14401:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14403:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14403:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14403:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14392:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14398:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14389:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14389:11:8"
															},
															"nodeType": "YulIf",
															"src": "14386:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14267:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14270:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14276:4:8",
														"type": ""
													}
												],
												"src": "14236:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14464:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14481:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14484:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14474:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14474:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14474:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14578:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14581:4:8",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14571:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14571:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14571:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14602:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14605:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14595:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14595:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14595:15:8"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "14436:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14728:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14750:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14758:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14746:14:8"
																	},
																	{
																		"hexValue": "4552432d333634333a2049737375657220646f65736e2774206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14762:32:8",
																		"type": "",
																		"value": "ERC-3643: Issuer doesn't exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14739:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14739:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14739:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14720:6:8",
														"type": ""
													}
												],
												"src": "14622:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14954:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14964:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15030:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15035:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14971:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14971:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14964:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15136:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293",
																	"nodeType": "YulIdentifier",
																	"src": "15047:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15047:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15047:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15149:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15160:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15165:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15156:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15156:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15149:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14942:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14950:3:8",
														"type": ""
													}
												],
												"src": "14808:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15351:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15361:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15373:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15384:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15369:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15369:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15361:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15408:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15419:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15404:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15404:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15427:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15433:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15423:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15423:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15397:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15397:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15397:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15453:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15587:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15461:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15461:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15453:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15331:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15346:4:8",
														"type": ""
													}
												],
												"src": "15180:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15711:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15733:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15741:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15729:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15729:14:8"
																	},
																	{
																		"hexValue": "4552432d333634333a20496e76616c6964207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15745:32:8",
																		"type": "",
																		"value": "ERC-3643: Invalid zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15722:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15722:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15722:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15703:6:8",
														"type": ""
													}
												],
												"src": "15605:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15937:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15947:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16013:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16018:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15954:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15954:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15947:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16119:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada",
																	"nodeType": "YulIdentifier",
																	"src": "16030:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16030:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16030:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16132:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16143:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16148:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16139:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16139:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16132:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15925:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15933:3:8",
														"type": ""
													}
												],
												"src": "15791:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16334:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16344:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16356:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16367:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16352:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16352:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16344:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16391:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16402:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16387:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16410:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16416:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16406:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16406:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16380:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16380:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16380:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16436:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16570:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16444:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16444:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16436:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16314:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16329:4:8",
														"type": ""
													}
												],
												"src": "16163:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16694:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16716:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16724:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16712:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16712:14:8"
																	},
																	{
																		"hexValue": "4552432d333634333a2049737375657220616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16728:33:8",
																		"type": "",
																		"value": "ERC-3643: Issuer already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16705:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16705:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16705:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16686:6:8",
														"type": ""
													}
												],
												"src": "16588:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16921:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16931:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16997:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17002:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16938:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16938:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16931:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17103:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1",
																	"nodeType": "YulIdentifier",
																	"src": "17014:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17014:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17014:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17116:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17127:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17132:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17123:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17123:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17116:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16909:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16917:3:8",
														"type": ""
													}
												],
												"src": "16775:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17318:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17328:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17340:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17351:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17336:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17336:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17328:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17375:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17386:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17371:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17371:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17394:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17400:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17390:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17390:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17364:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17364:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17420:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17554:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17428:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17428:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17420:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17298:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17313:4:8",
														"type": ""
													}
												],
												"src": "17147:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17678:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17700:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17708:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17696:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17696:14:8"
																	},
																	{
																		"hexValue": "4552432d333634333a20456d70747920636c61696d20746f70696373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17712:30:8",
																		"type": "",
																		"value": "ERC-3643: Empty claim topics"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17689:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17689:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17689:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17670:6:8",
														"type": ""
													}
												],
												"src": "17572:178:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17902:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17912:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17978:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17983:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17919:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17919:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17912:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18084:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da",
																	"nodeType": "YulIdentifier",
																	"src": "17995:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17995:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17995:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18097:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18108:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18113:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18104:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18104:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18097:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17890:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17898:3:8",
														"type": ""
													}
												],
												"src": "17756:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18299:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18309:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18321:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18332:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18317:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18317:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18309:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18356:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18367:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18352:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18352:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18375:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18381:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18371:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18371:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18345:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18345:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18401:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18535:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18409:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18409:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18401:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18279:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18294:4:8",
														"type": ""
													}
												],
												"src": "18128:419:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IClaimIssuer_$49(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IClaimIssuer_$49(value) {\n        if iszero(eq(value, cleanup_t_contract$_IClaimIssuer_$49(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IClaimIssuer_$49(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IClaimIssuer_$49(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$49t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IClaimIssuer_$49(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$49(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IClaimIssuer_$49(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$49t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IClaimIssuer_$49(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IClaimIssuer_$49_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IClaimIssuer_$49_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_IClaimIssuer_$49_to_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_IClaimIssuer_$49_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_IClaimIssuer_$49_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // contract IClaimIssuer[] -> address[]\n    function abi_encode_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_IClaimIssuer_$49_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC-3643: No claim topics\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC-3643: Not a claim issuer\")\n\n    }\n\n    function abi_encode_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC-3643: Issuer doesn't exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC-3643: Invalid zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC-3643: Issuer already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC-3643: Empty claim topics\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80636b2c56bd1161006f5780636b2c56bd1461015f5780636de487081461018f578063715018a6146101bf5780638da5cb5b146101c9578063d4f4ac4e146101e7578063f2fde38b14610205576100a7565b806304bc7e84146100ab5780630b4b764c146100c7578063122dade8146100e357806334a899871461011357806338d742a414610143575b5f80fd5b6100c560048036038101906100c091906113cf565b610221565b005b6100e160048036038101906100dc919061142c565b6103a0565b005b6100fd60048036038101906100f8919061142c565b61063e565b60405161010a9190611517565b60405180910390f35b61012d60048036038101906101289190611561565b610719565b60405161013a91906115b9565b60405180910390f35b61015d600480360381019061015891906113cf565b61083a565b005b610179600480360381019061017491906115d2565b610b1c565b6040516101869190611700565b60405180910390f35b6101a960048036038101906101a4919061142c565b610bb8565b6040516101b691906115b9565b60405180910390f35b6101c7610bc9565b005b6101d1610bdc565b6040516101de919061172f565b60405180910390f35b6101ef610c03565b6040516101fc9190611700565b60405180910390f35b61021f600480360381019061021a9190611772565b610c8e565b005b610229610d12565b5f828290500361026e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610265906117f7565b60405180910390fd5b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f81036102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb9061185f565b60405180910390fd5b6102fd84610d99565b828260025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209190610349929190611277565b508373ffffffffffffffffffffffffffffffffffffffff167fec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf84846040516103929291906118e5565b60405180910390a250505050565b6103a8610d12565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f810361042e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104259061185f565b60405180910390fd5b5f60018054905090505f5b818110156105a3578373ffffffffffffffffffffffffffffffffffffffff166001828154811061046c5761046b611907565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361059857600180836104bd9190611961565b815481106104ce576104cd611907565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001828154811061050a57610509611907565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061056157610560611994565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556105a3565b806001019050610439565b506105ae8383610ef8565b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6105f691906112c2565b8273ffffffffffffffffffffffffffffffffffffffff167f8432c8693d2550c2eb52d3f0a803b38eb8c3c0e62234fa1b6b8b35cc3866785460405160405180910390a2505050565b606061064982610f78565b610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90611a0b565b60405180910390fd5b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561070d57602002820191905f5260205f20905b8154815260200190600101908083116106f9575b50505050509050919050565b5f8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054806020026020016040519081016040528092919081815260200182805480156107e457602002820191905f5260205f20905b8154815260200190600101908083116107d0575b505050505090505f5b8281101561082d578482828151811061080957610808611907565b5b6020026020010151036108225760019350505050610834565b8060010190506107ed565b505f925050505b92915050565b610842610d12565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611a73565b60405180910390fd5b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905014610932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092990611adb565b60405180910390fd5b5f8282905090505f810361097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290611b43565b60405180910390fd5b600184908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828260025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209190610a27929190611277565b505f5b81811015610ac55760035f858584818110610a4857610a47611907565b5b9050602002013581526020019081526020015f2085908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001019050610a2a565b508373ffffffffffffffffffffffffffffffffffffffff167f375851630239b005eafd9230e43a9a9d4a5d7b96a4956fc8e9d2ab3ff4583d168484604051610b0e9291906118e5565b60405180910390a250505050565b606060035f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610bac57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b63575b50505050509050919050565b5f610bc282610f78565b9050919050565b610bd1610d12565b610bda5f610fc4565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805480602002602001604051908101604052809291908181526020018280548015610c8457602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c3b575b5050505050905090565b610c96610d12565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d06575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cfd919061172f565b60405180910390fd5b610d0f81610fc4565b50565b610d1a611085565b73ffffffffffffffffffffffffffffffffffffffff16610d38610bdc565b73ffffffffffffffffffffffffffffffffffffffff1614610d9757610d5b611085565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d8e919061172f565b60405180910390fd5b565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610e1f57602002820191905f5260205f20905b815481526020019060010190808311610e0b575b505050505090505f815190505f5b81811015610ef2575f838281518110610e4957610e48611907565b5b60200260200101519050610e5d858261108c565b60035f858481518110610e7357610e72611907565b5b602002602001015181526020019081526020015f2085908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600101915050610e2d565b50505050565b5f5b81811015610f73575f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610f5257610f51611907565b5b905f5260205f2001549050610f67848261108c565b81600101915050610efa565b505050565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905014159050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f60035f8381526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561111b57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110d2575b505050505090505f815190505f5b81811015611270578473ffffffffffffffffffffffffffffffffffffffff1683828151811061115b5761115a611907565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611265578260018361118c9190611961565b8151811061119d5761119c611907565b5b602002602001015160035f8681526020019081526020015f2082815481106111c8576111c7611907565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035f8581526020019081526020015f2080548061122e5761122d611994565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055611270565b806001019050611129565b5050505050565b828054828255905f5260205f209081019282156112b1579160200282015b828111156112b0578235825591602001919060010190611295565b5b5090506112be91906112e0565b5090565b5080545f8255905f5260205f20908101906112dd91906112e0565b50565b5b808211156112f7575f815f9055506001016112e1565b5090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61132c82611303565b9050919050565b5f61133d82611322565b9050919050565b61134d81611333565b8114611357575f80fd5b50565b5f8135905061136881611344565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261138f5761138e61136e565b5b8235905067ffffffffffffffff8111156113ac576113ab611372565b5b6020830191508360208202830111156113c8576113c7611376565b5b9250929050565b5f805f604084860312156113e6576113e56112fb565b5b5f6113f38682870161135a565b935050602084013567ffffffffffffffff811115611414576114136112ff565b5b6114208682870161137a565b92509250509250925092565b5f60208284031215611441576114406112fb565b5b5f61144e8482850161135a565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61149281611480565b82525050565b5f6114a38383611489565b60208301905092915050565b5f602082019050919050565b5f6114c582611457565b6114cf8185611461565b93506114da83611471565b805f5b8381101561150a5781516114f18882611498565b97506114fc836114af565b9250506001810190506114dd565b5085935050505092915050565b5f6020820190508181035f83015261152f81846114bb565b905092915050565b61154081611480565b811461154a575f80fd5b50565b5f8135905061155b81611537565b92915050565b5f8060408385031215611577576115766112fb565b5b5f6115848582860161135a565b92505060206115958582860161154d565b9150509250929050565b5f8115159050919050565b6115b38161159f565b82525050565b5f6020820190506115cc5f8301846115aa565b92915050565b5f602082840312156115e7576115e66112fb565b5b5f6115f48482850161154d565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b5f61164961164461163f84611303565b611626565b611303565b9050919050565b5f61165a8261162f565b9050919050565b5f61166b82611650565b9050919050565b61167b81611661565b82525050565b5f61168c8383611672565b60208301905092915050565b5f602082019050919050565b5f6116ae826115fd565b6116b88185611607565b93506116c383611617565b805f5b838110156116f35781516116da8882611681565b97506116e583611698565b9250506001810190506116c6565b5085935050505092915050565b5f6020820190508181035f83015261171881846116a4565b905092915050565b61172981611322565b82525050565b5f6020820190506117425f830184611720565b92915050565b61175181611322565b811461175b575f80fd5b50565b5f8135905061176c81611748565b92915050565b5f60208284031215611787576117866112fb565b5b5f6117948482850161175e565b91505092915050565b5f82825260208201905092915050565b7f4552432d333634333a204e6f20636c61696d20746f70696373000000000000005f82015250565b5f6117e160198361179d565b91506117ec826117ad565b602082019050919050565b5f6020820190508181035f83015261180e816117d5565b9050919050565b7f4552432d333634333a204e6f74206120636c61696d20697373756572000000005f82015250565b5f611849601c8361179d565b915061185482611815565b602082019050919050565b5f6020820190508181035f8301526118768161183d565b9050919050565b5f80fd5b82818337505050565b5f6118958385611461565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156118c8576118c761187d565b5b6020830292506118d9838584611881565b82840190509392505050565b5f6020820190508181035f8301526118fe81848661188a565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61196b82611480565b915061197683611480565b925082820390508181111561198e5761198d611934565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f4552432d333634333a2049737375657220646f65736e277420657869737400005f82015250565b5f6119f5601e8361179d565b9150611a00826119c1565b602082019050919050565b5f6020820190508181035f830152611a22816119e9565b9050919050565b7f4552432d333634333a20496e76616c6964207a65726f206164647265737300005f82015250565b5f611a5d601e8361179d565b9150611a6882611a29565b602082019050919050565b5f6020820190508181035f830152611a8a81611a51565b9050919050565b7f4552432d333634333a2049737375657220616c726561647920657869737473005f82015250565b5f611ac5601f8361179d565b9150611ad082611a91565b602082019050919050565b5f6020820190508181035f830152611af281611ab9565b9050919050565b7f4552432d333634333a20456d70747920636c61696d20746f70696373000000005f82015250565b5f611b2d601c8361179d565b9150611b3882611af9565b602082019050919050565b5f6020820190508181035f830152611b5a81611b21565b905091905056fea26469706673582212209aeff2bf71839148e70434184c466a17740c1c1b9de7b168be11b7eb6402406264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B2C56BD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6B2C56BD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x6DE48708 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xD4F4AC4E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x205 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xB4B764C EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x122DADE8 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x38D742A4 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0xBC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0xD12 JUMP JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FD DUP5 PUSH2 0xD99 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP2 SWAP1 PUSH2 0x349 SWAP3 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x392 SWAP3 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0xD12 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x598 JUMPI PUSH1 0x1 DUP1 DUP4 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4CE JUMPI PUSH2 0x4CD PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x50A JUMPI PUSH2 0x509 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x561 JUMPI PUSH2 0x560 PUSH2 0x1994 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x5A3 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x439 JUMP JUMPDEST POP PUSH2 0x5AE DUP4 DUP4 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x12C2 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8432C8693D2550C2EB52D3F0A803B38EB8C3C0E62234FA1B6B8B35CC38667854 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x649 DUP3 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6F9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x7D0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x82D JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x822 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x834 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x7ED JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x842 PUSH2 0xD12 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP2 SWAP1 PUSH2 0xA27 SWAP3 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x3 PUSH0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xA2A JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x375851630239B005EAFD9230E43A9A9D4A5D7B96A4956FC8E9D2AB3FF4583D16 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB0E SWAP3 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBAC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xB63 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBC2 DUP3 PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD1 PUSH2 0xD12 JUMP JUMPDEST PUSH2 0xBDA PUSH0 PUSH2 0xFC4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC84 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC3B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xD12 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD06 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0F DUP2 PUSH2 0xFC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD1A PUSH2 0x1085 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD38 PUSH2 0xBDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD97 JUMPI PUSH2 0xD5B PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8E SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE1F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE0B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEF2 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xE5D DUP6 DUP3 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE73 JUMPI PUSH2 0xE72 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF73 JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF52 JUMPI PUSH2 0xF51 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH2 0xF67 DUP5 DUP3 PUSH2 0x108C JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x111B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x10D2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1270 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1265 JUMPI DUP3 PUSH1 0x1 DUP4 PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x119D JUMPI PUSH2 0x119C PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI PUSH2 0x11C7 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x1994 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1270 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x12B1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12B0 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1295 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x12BE SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12F7 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x12E1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x132C DUP3 PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x133D DUP3 PUSH2 0x1322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1333 JUMP JUMPDEST DUP2 EQ PUSH2 0x1357 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1368 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x138F JUMPI PUSH2 0x138E PUSH2 0x136E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x1372 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x13C8 JUMPI PUSH2 0x13C7 PUSH2 0x1376 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E6 JUMPI PUSH2 0x13E5 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F3 DUP7 DUP3 DUP8 ADD PUSH2 0x135A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1414 JUMPI PUSH2 0x1413 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH2 0x1420 DUP7 DUP3 DUP8 ADD PUSH2 0x137A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1440 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144E DUP5 DUP3 DUP6 ADD PUSH2 0x135A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A3 DUP4 DUP4 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C5 DUP3 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x14CF DUP2 DUP6 PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP PUSH2 0x14DA DUP4 PUSH2 0x1471 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x150A JUMPI DUP2 MLOAD PUSH2 0x14F1 DUP9 DUP3 PUSH2 0x1498 JUMP JUMPDEST SWAP8 POP PUSH2 0x14FC DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14DD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152F DUP2 DUP5 PUSH2 0x14BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1540 DUP2 PUSH2 0x1480 JUMP JUMPDEST DUP2 EQ PUSH2 0x154A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x155B DUP2 PUSH2 0x1537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1576 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1584 DUP6 DUP3 DUP7 ADD PUSH2 0x135A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x154D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x159F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CC PUSH0 DUP4 ADD DUP5 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E7 JUMPI PUSH2 0x15E6 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F4 DUP5 DUP3 DUP6 ADD PUSH2 0x154D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1649 PUSH2 0x1644 PUSH2 0x163F DUP5 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165A DUP3 PUSH2 0x162F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x166B DUP3 PUSH2 0x1650 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x167B DUP2 PUSH2 0x1661 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168C DUP4 DUP4 PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE DUP3 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x16B8 DUP2 DUP6 PUSH2 0x1607 JUMP JUMPDEST SWAP4 POP PUSH2 0x16C3 DUP4 PUSH2 0x1617 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F3 JUMPI DUP2 MLOAD PUSH2 0x16DA DUP9 DUP3 PUSH2 0x1681 JUMP JUMPDEST SWAP8 POP PUSH2 0x16E5 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16C6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1718 DUP2 DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1729 DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1742 PUSH0 DUP4 ADD DUP5 PUSH2 0x1720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1751 DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP2 EQ PUSH2 0x175B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x176C DUP2 PUSH2 0x1748 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1794 DUP5 DUP3 DUP6 ADD PUSH2 0x175E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552432D333634333A204E6F20636C61696D20746F7069637300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17E1 PUSH1 0x19 DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP3 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x180E DUP2 PUSH2 0x17D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A204E6F74206120636C61696D2069737375657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1849 PUSH1 0x1C DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1854 DUP3 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1876 DUP2 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 DUP4 DUP6 PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x187D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x18D9 DUP4 DUP6 DUP5 PUSH2 0x1881 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 DUP5 DUP7 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x196B DUP3 PUSH2 0x1480 JUMP JUMPDEST SWAP2 POP PUSH2 0x1976 DUP4 PUSH2 0x1480 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x1934 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4552432D333634333A2049737375657220646F65736E27742065786973740000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F5 PUSH1 0x1E DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A00 DUP3 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A22 DUP2 PUSH2 0x19E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A20496E76616C6964207A65726F20616464726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5D PUSH1 0x1E DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A68 DUP3 PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8A DUP2 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A2049737375657220616C72656164792065786973747300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC5 PUSH1 0x1F DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD0 DUP3 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF2 DUP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552432D333634333A20456D70747920636C61696D20746F7069637300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2D PUSH1 0x1C DUP4 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B38 DUP3 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5A DUP2 PUSH2 0x1B21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xEF CALLCODE 0xBF PUSH18 0x839148E70434184C466A17740C1C1B9DE7B1 PUSH9 0xBE11B7EB6402406264 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "413:9169:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4012:568;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2692:860;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5766:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6382:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1514:850;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5045:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5419:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:4;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4706:110:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4012:568:6;1531:13:4;:11;:13::i;:::-;4187:1:6::1;4164:12;;:19;;:24:::0;4156:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4228:28;4259:23;:37;4283:12;4259:37;;;;;;;;;;;;;;;:57;;;;4228:88;;4361:1;4334:23;:28:::0;4326:69:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4406:42;4435:12;4406:28;:42::i;:::-;4499:12;;4459:23;:37;4483:12;4459:37;;;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;;4546:12;4527:46;;;4560:12;;4527:46;;;;;;;:::i;:::-;;;;;;;;4146:434;4012:568:::0;;;:::o;2692:860::-;1531:13:4;:11;:13::i;:::-;2775:28:6::1;2806:23;:37;2830:12;2806:37;;;;;;;;;;;;;;;:57;;;;2775:88;;2908:1;2881:23;:28:::0;2873:69:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2952:25;2980:13;:20;;;;2952:48;;3015:9;3010:314;3034:17;3030:1;:21;3010:314;;;3093:12;3073:32;;:13;3087:1;3073:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:32;;::::0;3069:186:::1;;3144:13;3178:1:::0;3158:17:::1;:21;;;;:::i;:::-;3144:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3125:13;3139:1;3125:16;;;;;;;;:::i;:::-;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;3198:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:5;;3069:186;3296:3;;;;;3010:314;;;;3334:109;3384:12;3410:23;3334:36;:109::i;:::-;3461:23;:37;3485:12;3461:37;;;;;;;;;;;;;;;;3454:44;;;;:::i;:::-;3532:12;3513:32;;;;;;;;;;;;2765:787;;2692:860:::0;:::o;5766:259::-;5865:16;5901:28;5916:12;5901:14;:28::i;:::-;5893:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5981:23;:37;6005:12;5981:37;;;;;;;;;;;;;;;5974:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5766:259;;;:::o;6382:490::-;6493:4;6509:14;6526:23;:32;6550:7;6526:32;;;;;;;;;;;;;;;:39;;;;6509:56;;6575:28;6606:23;:32;6630:7;6606:32;;;;;;;;;;;;;;;6575:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6653:9;6648:196;6672:6;6668:1;:10;6648:196;;;6718:11;6700;6712:1;6700:14;;;;;;;;:::i;:::-;;;;;;;;:29;6696:79;;6756:4;6749:11;;;;;;;6696:79;6816:3;;;;;6648:196;;;;6860:5;6853:12;;;;6382:490;;;;;:::o;1514:850::-;1531:13:4;:11;:13::i;:::-;1703:1:6::1;1670:35;;1678:12;1670:35;;::::0;1649:112:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1840:1;1792:23;:37;1816:12;1792:37;;;;;;;;;;;;;;;:44;;;;:49;1771:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;1908:11;1922:12;;:19;;1908:33;;1969:1;1959:6;:11:::0;1951:52:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2014:13;2033:12;2014:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2096:12;;2056:23;:37;2080:12;2056:37;;;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;;2124:9;2119:179;2143:6;2139:1;:10;2119:179;;;2167:25;:42;2193:12;;2206:1;2193:15;;;;;;;:::i;:::-;;;;;;;;2167:42;;;;;;;;;;;2215:12;2167:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2270:3;;;;;2119:179;;;;2330:12;2313:44;;;2344:12;;2313:44;;;;;;;:::i;:::-;;;;;;;;1639:725;1514:850:::0;;;:::o;5045:179::-;5140:21;5180:25;:37;5206:10;5180:37;;;;;;;;;;;5173:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5045:179;;;:::o;5419:121::-;5487:4;5510:23;5525:7;5510:14;:23::i;:::-;5503:30;;5419:121;;;:::o;2293:101:4:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4706:110:6:-;4756:21;4796:13;4789:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4706:110;:::o;2543:215:4:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7689:496:6:-;7771:28;7802:23;:36;7826:11;7802:36;;;;;;;;;;;;;;;7771:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7848:11;7862;:18;7848:32;;7896:9;7891:288;7915:6;7911:1;:10;7891:288;;;7939:18;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;;7939:35;;7989:47;8012:11;8025:10;7989:22;:47::i;:::-;8050:25;:41;8076:11;8088:1;8076:14;;;;;;;;:::i;:::-;;;;;;;;8050:41;;;;;;;;;;;8097:11;8050:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8151:3;;;;;7925:254;7891:288;;;;7761:424;;7689:496;:::o;7090:371::-;7220:9;7215:240;7239:6;7235:1;:10;7215:240;;;7263:18;7284:23;:36;7308:11;7284:36;;;;;;;;;;;;;;;7321:1;7284:39;;;;;;;;:::i;:::-;;;;;;;;;;7263:60;;7338:47;7361:11;7374:10;7338:22;:47::i;:::-;7427:3;;;;;7249:206;7215:240;;;;7090:371;;:::o;9436:144::-;9504:4;9571:1;9528:23;:32;9552:7;9528:32;;;;;;;;;;;;;;;:39;;;;:44;;9520:53;;9436:144;;;:::o;2912:187:4:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8600:643:6:-;8715:34;8752:25;:59;8791:10;8752:59;;;;;;;;;;;8715:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8821:11;8835:12;:19;8821:33;;8870:6;8865:372;8886:6;8882:1;:10;8865:372;;;8933:11;8914:30;;:12;8927:1;8914:15;;;;;;;;:::i;:::-;;;;;;;;:30;;;8910:258;;9007:12;9050:1;9041:6;:10;;;;:::i;:::-;9007:62;;;;;;;;:::i;:::-;;;;;;;;8964:25;:37;8990:10;8964:37;;;;;;;;;;;9002:1;8964:40;;;;;;;;:::i;:::-;;;;;;;;;;:105;;;;;;;;;;;;;;;;;;9087:25;:37;9113:10;9087:37;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9148:5;;8910:258;9209:3;;;;;8865:372;;;;8705:538;;8600:643;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:8:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:177::-;920:5;958:6;945:20;936:29;;974:52;1020:5;974:52;:::i;:::-;855:177;;;;:::o;1038:117::-;1147:1;1144;1137:12;1161:117;1270:1;1267;1260:12;1284:117;1393:1;1390;1383:12;1424:568;1497:8;1507:6;1557:3;1550:4;1542:6;1538:17;1534:27;1524:122;;1565:79;;:::i;:::-;1524:122;1678:6;1665:20;1655:30;;1708:18;1700:6;1697:30;1694:117;;;1730:79;;:::i;:::-;1694:117;1844:4;1836:6;1832:17;1820:29;;1898:3;1890:4;1882:6;1878:17;1868:8;1864:32;1861:41;1858:128;;;1905:79;;:::i;:::-;1858:128;1424:568;;;;;:::o;1998:742::-;2112:6;2120;2128;2177:2;2165:9;2156:7;2152:23;2148:32;2145:119;;;2183:79;;:::i;:::-;2145:119;2303:1;2328:72;2392:7;2383:6;2372:9;2368:22;2328:72;:::i;:::-;2318:82;;2274:136;2477:2;2466:9;2462:18;2449:32;2508:18;2500:6;2497:30;2494:117;;;2530:79;;:::i;:::-;2494:117;2643:80;2715:7;2706:6;2695:9;2691:22;2643:80;:::i;:::-;2625:98;;;;2420:313;1998:742;;;;;:::o;2746:367::-;2824:6;2873:2;2861:9;2852:7;2848:23;2844:32;2841:119;;;2879:79;;:::i;:::-;2841:119;2999:1;3024:72;3088:7;3079:6;3068:9;3064:22;3024:72;:::i;:::-;3014:82;;2970:136;2746:367;;;;:::o;3119:114::-;3186:6;3220:5;3214:12;3204:22;;3119:114;;;:::o;3239:184::-;3338:11;3372:6;3367:3;3360:19;3412:4;3407:3;3403:14;3388:29;;3239:184;;;;:::o;3429:132::-;3496:4;3519:3;3511:11;;3549:4;3544:3;3540:14;3532:22;;3429:132;;;:::o;3567:77::-;3604:7;3633:5;3622:16;;3567:77;;;:::o;3650:108::-;3727:24;3745:5;3727:24;:::i;:::-;3722:3;3715:37;3650:108;;:::o;3764:179::-;3833:10;3854:46;3896:3;3888:6;3854:46;:::i;:::-;3932:4;3927:3;3923:14;3909:28;;3764:179;;;;:::o;3949:113::-;4019:4;4051;4046:3;4042:14;4034:22;;3949:113;;;:::o;4098:732::-;4217:3;4246:54;4294:5;4246:54;:::i;:::-;4316:86;4395:6;4390:3;4316:86;:::i;:::-;4309:93;;4426:56;4476:5;4426:56;:::i;:::-;4505:7;4536:1;4521:284;4546:6;4543:1;4540:13;4521:284;;;4622:6;4616:13;4649:63;4708:3;4693:13;4649:63;:::i;:::-;4642:70;;4735:60;4788:6;4735:60;:::i;:::-;4725:70;;4581:224;4568:1;4565;4561:9;4556:14;;4521:284;;;4525:14;4821:3;4814:10;;4222:608;;;4098:732;;;;:::o;4836:373::-;4979:4;5017:2;5006:9;5002:18;4994:26;;5066:9;5060:4;5056:20;5052:1;5041:9;5037:17;5030:47;5094:108;5197:4;5188:6;5094:108;:::i;:::-;5086:116;;4836:373;;;;:::o;5215:122::-;5288:24;5306:5;5288:24;:::i;:::-;5281:5;5278:35;5268:63;;5327:1;5324;5317:12;5268:63;5215:122;:::o;5343:139::-;5389:5;5427:6;5414:20;5405:29;;5443:33;5470:5;5443:33;:::i;:::-;5343:139;;;;:::o;5488:512::-;5575:6;5583;5632:2;5620:9;5611:7;5607:23;5603:32;5600:119;;;5638:79;;:::i;:::-;5600:119;5758:1;5783:72;5847:7;5838:6;5827:9;5823:22;5783:72;:::i;:::-;5773:82;;5729:136;5904:2;5930:53;5975:7;5966:6;5955:9;5951:22;5930:53;:::i;:::-;5920:63;;5875:118;5488:512;;;;;:::o;6006:90::-;6040:7;6083:5;6076:13;6069:21;6058:32;;6006:90;;;:::o;6102:109::-;6183:21;6198:5;6183:21;:::i;:::-;6178:3;6171:34;6102:109;;:::o;6217:210::-;6304:4;6342:2;6331:9;6327:18;6319:26;;6355:65;6417:1;6406:9;6402:17;6393:6;6355:65;:::i;:::-;6217:210;;;;:::o;6433:329::-;6492:6;6541:2;6529:9;6520:7;6516:23;6512:32;6509:119;;;6547:79;;:::i;:::-;6509:119;6667:1;6692:53;6737:7;6728:6;6717:9;6713:22;6692:53;:::i;:::-;6682:63;;6638:117;6433:329;;;;:::o;6768:133::-;6854:6;6888:5;6882:12;6872:22;;6768:133;;;:::o;6907:184::-;7006:11;7040:6;7035:3;7028:19;7080:4;7075:3;7071:14;7056:29;;6907:184;;;;:::o;7097:151::-;7183:4;7206:3;7198:11;;7236:4;7231:3;7227:14;7219:22;;7097:151;;;:::o;7254:60::-;7282:3;7303:5;7296:12;;7254:60;;;:::o;7320:142::-;7370:9;7403:53;7421:34;7430:24;7448:5;7430:24;:::i;:::-;7421:34;:::i;:::-;7403:53;:::i;:::-;7390:66;;7320:142;;;:::o;7468:126::-;7518:9;7551:37;7582:5;7551:37;:::i;:::-;7538:50;;7468:126;;;:::o;7600:145::-;7669:9;7702:37;7733:5;7702:37;:::i;:::-;7689:50;;7600:145;;;:::o;7751:159::-;7847:56;7897:5;7847:56;:::i;:::-;7842:3;7835:69;7751:159;;:::o;7916:217::-;8004:10;8025:65;8086:3;8078:6;8025:65;:::i;:::-;8122:4;8117:3;8113:14;8099:28;;7916:217;;;;:::o;8139:132::-;8228:4;8260;8255:3;8251:14;8243:22;;8139:132;;;:::o;8321:827::-;8459:3;8488:73;8555:5;8488:73;:::i;:::-;8577:86;8656:6;8651:3;8577:86;:::i;:::-;8570:93;;8687:75;8756:5;8687:75;:::i;:::-;8785:7;8816:1;8801:322;8826:6;8823:1;8820:13;8801:322;;;8902:6;8896:13;8929:82;9007:3;8992:13;8929:82;:::i;:::-;8922:89;;9034:79;9106:6;9034:79;:::i;:::-;9024:89;;8861:262;8848:1;8845;8841:9;8836:14;;8801:322;;;8805:14;9139:3;9132:10;;8464:684;;;8321:827;;;;:::o;9154:411::-;9316:4;9354:2;9343:9;9339:18;9331:26;;9403:9;9397:4;9393:20;9389:1;9378:9;9374:17;9367:47;9431:127;9553:4;9544:6;9431:127;:::i;:::-;9423:135;;9154:411;;;;:::o;9571:118::-;9658:24;9676:5;9658:24;:::i;:::-;9653:3;9646:37;9571:118;;:::o;9695:222::-;9788:4;9826:2;9815:9;9811:18;9803:26;;9839:71;9907:1;9896:9;9892:17;9883:6;9839:71;:::i;:::-;9695:222;;;;:::o;9923:122::-;9996:24;10014:5;9996:24;:::i;:::-;9989:5;9986:35;9976:63;;10035:1;10032;10025:12;9976:63;9923:122;:::o;10051:139::-;10097:5;10135:6;10122:20;10113:29;;10151:33;10178:5;10151:33;:::i;:::-;10051:139;;;;:::o;10196:329::-;10255:6;10304:2;10292:9;10283:7;10279:23;10275:32;10272:119;;;10310:79;;:::i;:::-;10272:119;10430:1;10455:53;10500:7;10491:6;10480:9;10476:22;10455:53;:::i;:::-;10445:63;;10401:117;10196:329;;;;:::o;10531:169::-;10615:11;10649:6;10644:3;10637:19;10689:4;10684:3;10680:14;10665:29;;10531:169;;;;:::o;10706:175::-;10846:27;10842:1;10834:6;10830:14;10823:51;10706:175;:::o;10887:366::-;11029:3;11050:67;11114:2;11109:3;11050:67;:::i;:::-;11043:74;;11126:93;11215:3;11126:93;:::i;:::-;11244:2;11239:3;11235:12;11228:19;;10887:366;;;:::o;11259:419::-;11425:4;11463:2;11452:9;11448:18;11440:26;;11512:9;11506:4;11502:20;11498:1;11487:9;11483:17;11476:47;11540:131;11666:4;11540:131;:::i;:::-;11532:139;;11259:419;;;:::o;11684:178::-;11824:30;11820:1;11812:6;11808:14;11801:54;11684:178;:::o;11868:366::-;12010:3;12031:67;12095:2;12090:3;12031:67;:::i;:::-;12024:74;;12107:93;12196:3;12107:93;:::i;:::-;12225:2;12220:3;12216:12;12209:19;;11868:366;;;:::o;12240:419::-;12406:4;12444:2;12433:9;12429:18;12421:26;;12493:9;12487:4;12483:20;12479:1;12468:9;12464:17;12457:47;12521:131;12647:4;12521:131;:::i;:::-;12513:139;;12240:419;;;:::o;12665:117::-;12774:1;12771;12764:12;12788:98;12872:6;12867:3;12862;12849:30;12788:98;;;:::o;12922:537::-;13050:3;13071:86;13150:6;13145:3;13071:86;:::i;:::-;13064:93;;13181:66;13173:6;13170:78;13167:165;;;13251:79;;:::i;:::-;13167:165;13363:4;13355:6;13351:17;13341:27;;13378:43;13414:6;13409:3;13402:5;13378:43;:::i;:::-;13446:6;13441:3;13437:16;13430:23;;12922:537;;;;;:::o;13465:393::-;13618:4;13656:2;13645:9;13641:18;13633:26;;13705:9;13699:4;13695:20;13691:1;13680:9;13676:17;13669:47;13733:118;13846:4;13837:6;13829;13733:118;:::i;:::-;13725:126;;13465:393;;;;;:::o;13864:180::-;13912:77;13909:1;13902:88;14009:4;14006:1;13999:15;14033:4;14030:1;14023:15;14050:180;14098:77;14095:1;14088:88;14195:4;14192:1;14185:15;14219:4;14216:1;14209:15;14236:194;14276:4;14296:20;14314:1;14296:20;:::i;:::-;14291:25;;14330:20;14348:1;14330:20;:::i;:::-;14325:25;;14374:1;14371;14367:9;14359:17;;14398:1;14392:4;14389:11;14386:37;;;14403:18;;:::i;:::-;14386:37;14236:194;;;;:::o;14436:180::-;14484:77;14481:1;14474:88;14581:4;14578:1;14571:15;14605:4;14602:1;14595:15;14622:180;14762:32;14758:1;14750:6;14746:14;14739:56;14622:180;:::o;14808:366::-;14950:3;14971:67;15035:2;15030:3;14971:67;:::i;:::-;14964:74;;15047:93;15136:3;15047:93;:::i;:::-;15165:2;15160:3;15156:12;15149:19;;14808:366;;;:::o;15180:419::-;15346:4;15384:2;15373:9;15369:18;15361:26;;15433:9;15427:4;15423:20;15419:1;15408:9;15404:17;15397:47;15461:131;15587:4;15461:131;:::i;:::-;15453:139;;15180:419;;;:::o;15605:180::-;15745:32;15741:1;15733:6;15729:14;15722:56;15605:180;:::o;15791:366::-;15933:3;15954:67;16018:2;16013:3;15954:67;:::i;:::-;15947:74;;16030:93;16119:3;16030:93;:::i;:::-;16148:2;16143:3;16139:12;16132:19;;15791:366;;;:::o;16163:419::-;16329:4;16367:2;16356:9;16352:18;16344:26;;16416:9;16410:4;16406:20;16402:1;16391:9;16387:17;16380:47;16444:131;16570:4;16444:131;:::i;:::-;16436:139;;16163:419;;;:::o;16588:181::-;16728:33;16724:1;16716:6;16712:14;16705:57;16588:181;:::o;16775:366::-;16917:3;16938:67;17002:2;16997:3;16938:67;:::i;:::-;16931:74;;17014:93;17103:3;17014:93;:::i;:::-;17132:2;17127:3;17123:12;17116:19;;16775:366;;;:::o;17147:419::-;17313:4;17351:2;17340:9;17336:18;17328:26;;17400:9;17394:4;17390:20;17386:1;17375:9;17371:17;17364:47;17428:131;17554:4;17428:131;:::i;:::-;17420:139;;17147:419;;;:::o;17572:178::-;17712:30;17708:1;17700:6;17696:14;17689:54;17572:178;:::o;17756:366::-;17898:3;17919:67;17983:2;17978:3;17919:67;:::i;:::-;17912:74;;17995:93;18084:3;17995:93;:::i;:::-;18113:2;18108:3;18104:12;18097:19;;17756:366;;;:::o;18128:419::-;18294:4;18332:2;18321:9;18317:18;18309:26;;18381:9;18375:4;18371:20;18367:1;18356:9;18352:17;18345:47;18409:131;18535:4;18409:131;:::i;:::-;18401:139;;18128:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1412600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addClaimIssuer(address,uint256[])": "infinite",
								"getClaimIssuerClaimTopics(address)": "infinite",
								"getClaimIssuers()": "infinite",
								"getClaimIssuersForClaimTopic(uint256)": "infinite",
								"hasClaimTopic(address,uint256)": "infinite",
								"isClaimIssuer(address)": "2958",
								"owner()": "2581",
								"removeClaimIssuer(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateIssuerClaimTopics(address,uint256[])": "infinite"
							},
							"internal": {
								"_isClaimIssuer(contract IClaimIssuer)": "2238",
								"_removeClaimIssuerFromAllClaimTopics(contract IClaimIssuer,uint256)": "infinite",
								"_removeIssuerFromTopic(contract IClaimIssuer,uint256)": "infinite",
								"_updateIssuerAcrossAllTopics(contract IClaimIssuer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 477,
									"end": 487,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 9582,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209aeff2bf71839148e70434184c466a17740c1c1b9de7b168be11b7eb6402406264736f6c63430008140033",
									".code": [
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "6B2C56BD"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "6B2C56BD"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "6DE48708"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "D4F4AC4E"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "4BC7E84"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "B4B764C"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "122DADE8"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "34A89987"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "38D742A4"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 9582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4012,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4012,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2692,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2692,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5766,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5766,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5766,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6382,
											"end": 6872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6382,
											"end": 6872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 6382,
											"end": 6872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1514,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1514,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 5045,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5045,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 5045,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5419,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5419,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5419,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4706,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4706,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4188,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4156,
											"end": 4218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4156,
											"end": 4218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4295,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4296,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4316,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4362,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4326,
											"end": 4395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4326,
											"end": 4395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4435,
											"end": 4447,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4406,
											"end": 4448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4406,
											"end": 4448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4495,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4496,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4459,
											"end": 4511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "EC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF"
										},
										{
											"begin": 4560,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4527,
											"end": 4573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4573,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4580,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2842,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2843,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2909,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2873,
											"end": 2942,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2873,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2980,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3051,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3105,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3087,
											"end": 3088,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3073,
											"end": 3089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3069,
											"end": 3255,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3178,
											"end": 3179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3175,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3158,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3158,
											"end": 3179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3158,
											"end": 3179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3144,
											"end": 3180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3139,
											"end": 3140,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3125,
											"end": 3141,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3198,
											"end": 3217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3235,
											"end": 3240,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3069,
											"end": 3255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3296,
											"end": 3299,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3324,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3384,
											"end": 3396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3433,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3334,
											"end": 3443,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3334,
											"end": 3443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3454,
											"end": 3498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3454,
											"end": 3498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3454,
											"end": 3498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8432C8693D2550C2EB52D3F0A803B38EB8C3C0E62234FA1B6B8B35CC38667854"
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3545,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2765,
											"end": 3552,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2765,
											"end": 3552,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5881,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5901,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5916,
											"end": 5928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5901,
											"end": 5929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5929,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5901,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5893,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5893,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6004,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6005,
											"end": 6017,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6018,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 6025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6557,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6565,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6509,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6509,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6629,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6637,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6638,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6653,
											"end": 6662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6678,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6729,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6700,
											"end": 6714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6714,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6729,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6696,
											"end": 6775,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6775,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6696,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1690,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1649,
											"end": 1761,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1649,
											"end": 1761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1828,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1829,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1836,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1841,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1771,
											"end": 1898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1771,
											"end": 1898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1934,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1934,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1941,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1951,
											"end": 2003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1951,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2033,
											"end": 2045,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2092,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2093,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2056,
											"end": 2108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2149,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2193,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2209,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2273,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2270,
											"end": 2273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2273,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2342,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "375851630239B005EAFD9230E43A9A9D4A5D7B96A4956FC8E9D2AB3FF4583D16"
										},
										{
											"begin": 2344,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2313,
											"end": 2357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2357,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 2364,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 2364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5161,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5180,
											"end": 5205,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5216,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5217,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5525,
											"end": 5532,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5510,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5533,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5510,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4777,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4796,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 8185,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7689,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7825,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7837,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7838,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7921,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7971,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7960,
											"end": 7974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 7974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 7974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8012,
											"end": 8023,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7989,
											"end": 8036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 8036,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7989,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8075,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8087,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8076,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8091,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8108,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7925,
											"end": 8179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 8179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 8185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 8185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 8185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 8185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7461,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 7090,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7239,
											"end": 7245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7245,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7320,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7284,
											"end": 7323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7323,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7361,
											"end": 7372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7338,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7385,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7338,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9580,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 9436,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9504,
											"end": 9508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9551,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9552,
											"end": 9559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9567,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 9243,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8600,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8835,
											"end": 8854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 8892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8892,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8933,
											"end": 8944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8944,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8914,
											"end": 8944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8927,
											"end": 8928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8914,
											"end": 8929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8944,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8914,
											"end": 8944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8910,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8910,
											"end": 9168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9041,
											"end": 9047,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9041,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9041,
											"end": 9051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9041,
											"end": 9051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9041,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 9041,
											"end": 9051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9041,
											"end": 9051,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9041,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9007,
											"end": 9069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9069,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8990,
											"end": 9000,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9002,
											"end": 9003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8964,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9069,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9112,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9123,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9124,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 9087,
											"end": 9130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9130,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9148,
											"end": 9153,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8910,
											"end": 9168,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8910,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9212,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9212,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9209,
											"end": 9212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 9237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8705,
											"end": 9243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8705,
											"end": 9243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 9243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 9243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 9243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "212"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "214"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "214"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "212"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "104"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "218"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "218"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "219"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "220"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "220"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 683,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 568,
											"end": 683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 671,
											"end": 676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 653,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 642,
											"end": 677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 642,
											"end": 677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 683,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 568,
											"end": 683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 568,
											"end": 683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 689,
											"end": 849,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 689,
											"end": 849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 781,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 818,
											"end": 823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 781,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 781,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 781,
											"end": 824,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 781,
											"end": 824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 771,
											"end": 825,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 761,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 761,
											"end": 843,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 839,
											"end": 840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 837,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 841,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 761,
											"end": 843,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 761,
											"end": 843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 689,
											"end": 849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 689,
											"end": 849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 855,
											"end": 1032,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 855,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 945,
											"end": 965,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 936,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 936,
											"end": 965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 1020,
											"end": 1025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 974,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 974,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 855,
											"end": 1032,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 855,
											"end": 1032,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 855,
											"end": 1032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 855,
											"end": 1032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 855,
											"end": 1032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1155,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1038,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1278,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1161,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1268,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1272,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1401,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1284,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1395,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1992,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1424,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1560,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1554,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1542,
											"end": 1548,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1524,
											"end": 1646,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1565,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1565,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1644,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1565,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1646,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1524,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1685,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1655,
											"end": 1685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1655,
											"end": 1685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1727,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1811,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1694,
											"end": 1811,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1730,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1811,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1694,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1848,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1832,
											"end": 1849,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1901,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1894,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1895,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1876,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1861,
											"end": 1902,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1905,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1905,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1992,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1992,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2740,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1998,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2179,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2156,
											"end": 2163,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2175,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2180,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2264,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2145,
											"end": 2264,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2183,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2183,
											"end": 2262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2262,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2183,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2264,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2145,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2372,
											"end": 2381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2328,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2400,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2328,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2400,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2481,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2508,
											"end": 2526,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2611,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2494,
											"end": 2611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2530,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2530,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2609,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2530,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2611,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2494,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2704,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2643,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2643,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2625,
											"end": 2723,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2625,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2625,
											"end": 2723,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2625,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 3113,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2746,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2876,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2960,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2841,
											"end": 2960,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2879,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2960,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2841,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3064,
											"end": 3086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3024,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3024,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2970,
											"end": 3106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 3113,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 3113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 3113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 3113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3233,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3119,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3423,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3239,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3403,
											"end": 3417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3429,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3544,
											"end": 3547,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3567,
											"end": 3644,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3567,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3567,
											"end": 3644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3567,
											"end": 3644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3567,
											"end": 3644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3567,
											"end": 3644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3758,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3650,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3745,
											"end": 3750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3727,
											"end": 3751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3722,
											"end": 3725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 3943,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3764,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3896,
											"end": 3899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3854,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3900,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3854,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 3936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3930,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 3943,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 3943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 3943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 3943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3949,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4019,
											"end": 4023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4055,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4042,
											"end": 4056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4830,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 4098,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4294,
											"end": 4299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4246,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4246,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4246,
											"end": 4300,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4246,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4393,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4402,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4476,
											"end": 4481,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 4426,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4482,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4426,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4505,
											"end": 4512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4544,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4553,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 4629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4708,
											"end": 4711,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4693,
											"end": 4706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4649,
											"end": 4712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4712,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4649,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4712,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4788,
											"end": 4794,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4735,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4795,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4735,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4569,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4565,
											"end": 4566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4556,
											"end": 4570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4556,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4521,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4525,
											"end": 4539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4824,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4830,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4836,
											"end": 5209,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4836,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 4983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5019,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5066,
											"end": 5075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5056,
											"end": 5076,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5194,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 5094,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5202,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5094,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4836,
											"end": 5209,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4836,
											"end": 5209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4836,
											"end": 5209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4836,
											"end": 5209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4836,
											"end": 5209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5337,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5215,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5306,
											"end": 5311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5288,
											"end": 5312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5278,
											"end": 5313,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5268,
											"end": 5331,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5317,
											"end": 5329,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5331,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5268,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5482,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5343,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5433,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5443,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5470,
											"end": 5475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5443,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5443,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5443,
											"end": 5476,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5443,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5482,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5482,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 6000,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5488,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5629,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5618,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5630,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5719,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5600,
											"end": 5719,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 5638,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5638,
											"end": 5717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5717,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 5638,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5719,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5600,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5847,
											"end": 5854,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5836,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5783,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5855,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5783,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5855,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5904,
											"end": 5906,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5930,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5975,
											"end": 5982,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5966,
											"end": 5972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5930,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5983,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5930,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5983,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 5993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 6000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 6000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 6000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6040,
											"end": 6047,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6076,
											"end": 6089,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6211,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6102,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6183,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6204,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 6183,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6205,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6427,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6217,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6342,
											"end": 6344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6319,
											"end": 6345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6319,
											"end": 6345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6355,
											"end": 6420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6420,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 6355,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6762,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 6433,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6492,
											"end": 6498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6520,
											"end": 6527,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6539,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6544,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6509,
											"end": 6628,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6509,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 6509,
											"end": 6628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 6547,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 6547,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6626,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 6547,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6509,
											"end": 6628,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 6509,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6737,
											"end": 6744,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6734,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6713,
											"end": 6735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6692,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6692,
											"end": 6745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6692,
											"end": 6745,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6692,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6682,
											"end": 6745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6682,
											"end": 6745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6901,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6768,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 6860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6872,
											"end": 6894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6872,
											"end": 6894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7091,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6907,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7046,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7047,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7056,
											"end": 7085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7056,
											"end": 7085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7091,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7248,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 7097,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7183,
											"end": 7187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7231,
											"end": 7234,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7314,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7254,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7282,
											"end": 7285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7462,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7320,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 7430,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7448,
											"end": 7453,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7430,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7454,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7430,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7421,
											"end": 7455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 7421,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7403,
											"end": 7456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7456,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7403,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7594,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7468,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 7582,
											"end": 7587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7551,
											"end": 7588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7594,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7594,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7600,
											"end": 7745,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7600,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7669,
											"end": 7678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7702,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 7733,
											"end": 7738,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7702,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7739,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 7702,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7689,
											"end": 7739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7689,
											"end": 7739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7600,
											"end": 7745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7600,
											"end": 7745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7600,
											"end": 7745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7600,
											"end": 7745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7910,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7751,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 7897,
											"end": 7902,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7847,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7903,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 7847,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 8133,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 7916,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8086,
											"end": 8089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8025,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8025,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8025,
											"end": 8090,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8025,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8099,
											"end": 8127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8099,
											"end": 8127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 8133,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 8133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 8133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 8133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 8133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8271,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8139,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8228,
											"end": 8232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8264,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8255,
											"end": 8258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8251,
											"end": 8265,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 9148,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 8321,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 8555,
											"end": 8560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8488,
											"end": 8561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8561,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 8488,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8651,
											"end": 8654,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 8577,
											"end": 8663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8663,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8577,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 8756,
											"end": 8761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 8687,
											"end": 8762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8762,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 8687,
											"end": 8762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8820,
											"end": 8833,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8929,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 9007,
											"end": 9010,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8929,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8929,
											"end": 9011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8929,
											"end": 9011,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 8929,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 9011,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 9011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9106,
											"end": 9112,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 9034,
											"end": 9113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9113,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9034,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9024,
											"end": 9113,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9024,
											"end": 9113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8861,
											"end": 9123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8845,
											"end": 8846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8841,
											"end": 8850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8836,
											"end": 8850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8836,
											"end": 8850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 8801,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9139,
											"end": 9142,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9142,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8464,
											"end": 9148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8464,
											"end": 9148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8464,
											"end": 9148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 9148,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 9148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 9148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 9148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 9148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9565,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 9154,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9343,
											"end": 9352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9339,
											"end": 9357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9331,
											"end": 9357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9331,
											"end": 9357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9403,
											"end": 9412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9397,
											"end": 9401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9387,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9374,
											"end": 9391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9367,
											"end": 9414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 9553,
											"end": 9557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9550,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 9431,
											"end": 9558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9558,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 9431,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9423,
											"end": 9558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9423,
											"end": 9558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9689,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9571,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9658,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 9676,
											"end": 9681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9658,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 9658,
											"end": 9682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9658,
											"end": 9682,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 9658,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9646,
											"end": 9683,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9917,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 9695,
											"end": 9917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9788,
											"end": 9792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9828,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9815,
											"end": 9824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 9907,
											"end": 9908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9905,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9892,
											"end": 9909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9883,
											"end": 9889,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9839,
											"end": 9910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9910,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 9839,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 10045,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9923,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 9996,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10020,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 9996,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9989,
											"end": 9994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10021,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9976,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 9976,
											"end": 10039,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10035,
											"end": 10036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10032,
											"end": 10033,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10025,
											"end": 10037,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9976,
											"end": 10039,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 9976,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 10045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 10045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10190,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 10051,
											"end": 10190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10097,
											"end": 10102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10142,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10113,
											"end": 10142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10113,
											"end": 10142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 10178,
											"end": 10183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 10151,
											"end": 10184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10184,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 10151,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10190,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10190,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10196,
											"end": 10525,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 10196,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10255,
											"end": 10261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10304,
											"end": 10306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10283,
											"end": 10290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10275,
											"end": 10307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10391,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 10272,
											"end": 10391,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10310,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10310,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 10310,
											"end": 10389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10310,
											"end": 10389,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10310,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10391,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 10272,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10500,
											"end": 10507,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10491,
											"end": 10497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10489,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10476,
											"end": 10498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 10455,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10455,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10445,
											"end": 10508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10445,
											"end": 10508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10401,
											"end": 10518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10196,
											"end": 10525,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10196,
											"end": 10525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10196,
											"end": 10525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10196,
											"end": 10525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10196,
											"end": 10525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10700,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 10531,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10615,
											"end": 10626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10689,
											"end": 10693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10665,
											"end": 10694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10665,
											"end": 10694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10700,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10881,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10706,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10846,
											"end": 10873,
											"name": "PUSH",
											"source": 8,
											"value": "4552432D333634333A204E6F20636C61696D20746F7069637300000000000000"
										},
										{
											"begin": 10842,
											"end": 10843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10834,
											"end": 10840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10830,
											"end": 10844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10823,
											"end": 10874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 11253,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10887,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11114,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 11109,
											"end": 11112,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11050,
											"end": 11117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11050,
											"end": 11117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11050,
											"end": 11117,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11050,
											"end": 11117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11043,
											"end": 11117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11043,
											"end": 11117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 11215,
											"end": 11218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 11126,
											"end": 11219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11219,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 11126,
											"end": 11219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11244,
											"end": 11246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11239,
											"end": 11242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 11253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 11253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 11253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10887,
											"end": 11253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11678,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 11259,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11425,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11463,
											"end": 11465,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11452,
											"end": 11461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11506,
											"end": 11510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11502,
											"end": 11522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11498,
											"end": 11499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11496,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11476,
											"end": 11523,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 11666,
											"end": 11670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 11540,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11671,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 11540,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11532,
											"end": 11671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11532,
											"end": 11671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11684,
											"end": 11862,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 11684,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11824,
											"end": 11854,
											"name": "PUSH",
											"source": 8,
											"value": "4552432D333634333A204E6F74206120636C61696D2069737375657200000000"
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11812,
											"end": 11818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11808,
											"end": 11822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 11855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11684,
											"end": 11862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11684,
											"end": 11862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 12234,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 11868,
											"end": 12234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12010,
											"end": 12013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12095,
											"end": 12097,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 12090,
											"end": 12093,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 12031,
											"end": 12098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12098,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12031,
											"end": 12098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12024,
											"end": 12098,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12024,
											"end": 12098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 12196,
											"end": 12199,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 12107,
											"end": 12200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12200,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 12107,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12220,
											"end": 12223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12209,
											"end": 12228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12209,
											"end": 12228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 12234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 12234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 12234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 12234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12240,
											"end": 12659,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 12240,
											"end": 12659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12406,
											"end": 12410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12444,
											"end": 12446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12421,
											"end": 12447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12421,
											"end": 12447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12493,
											"end": 12502,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12479,
											"end": 12480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12468,
											"end": 12477,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12464,
											"end": 12481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12457,
											"end": 12504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12521,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 12647,
											"end": 12651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12521,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 12521,
											"end": 12652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12521,
											"end": 12652,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 12521,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12513,
											"end": 12652,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12513,
											"end": 12652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12240,
											"end": 12659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12240,
											"end": 12659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12240,
											"end": 12659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12240,
											"end": 12659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12782,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 12665,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12774,
											"end": 12775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12771,
											"end": 12772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12776,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12886,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 12788,
											"end": 12886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12867,
											"end": 12870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12849,
											"end": 12879,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13459,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 12922,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13050,
											"end": 13053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 13150,
											"end": 13156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13145,
											"end": 13148,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13071,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 13071,
											"end": 13157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13071,
											"end": 13157,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 13071,
											"end": 13157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13064,
											"end": 13157,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13064,
											"end": 13157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 13247,
											"name": "PUSH",
											"source": 8,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13170,
											"end": 13248,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13167,
											"end": 13332,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13167,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 13167,
											"end": 13332,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13251,
											"end": 13330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 13251,
											"end": 13330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 13251,
											"end": 13330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13251,
											"end": 13330,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 13251,
											"end": 13330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13167,
											"end": 13332,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 13167,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13363,
											"end": 13367,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 13361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13351,
											"end": 13368,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13368,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13378,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13414,
											"end": 13420,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13409,
											"end": 13412,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13402,
											"end": 13407,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13378,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 13378,
											"end": 13421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13378,
											"end": 13421,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13378,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13446,
											"end": 13452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13441,
											"end": 13444,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13430,
											"end": 13453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13430,
											"end": 13453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13459,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13459,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13858,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 13465,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13618,
											"end": 13622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13656,
											"end": 13658,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13645,
											"end": 13654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13641,
											"end": 13659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13705,
											"end": 13714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13699,
											"end": 13703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13715,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13691,
											"end": 13692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13680,
											"end": 13689,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13676,
											"end": 13693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 13716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13846,
											"end": 13850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 13843,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13829,
											"end": 13835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 13733,
											"end": 13851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13851,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13733,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13725,
											"end": 13851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13725,
											"end": 13851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13858,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13858,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13465,
											"end": 13858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13864,
											"end": 14044,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 13864,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13912,
											"end": 13989,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13909,
											"end": 13910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13902,
											"end": 13990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14009,
											"end": 14013,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 14006,
											"end": 14007,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13999,
											"end": 14014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14037,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14030,
											"end": 14031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14038,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14050,
											"end": 14230,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 14050,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14098,
											"end": 14175,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14095,
											"end": 14096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14088,
											"end": 14176,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14185,
											"end": 14200,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14223,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14216,
											"end": 14217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14209,
											"end": 14224,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14430,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 14236,
											"end": 14430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14276,
											"end": 14280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14296,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 14314,
											"end": 14315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14296,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 14296,
											"end": 14316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14296,
											"end": 14316,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 14296,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14291,
											"end": 14316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14291,
											"end": 14316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14330,
											"end": 14350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 14348,
											"end": 14349,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14330,
											"end": 14350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 14330,
											"end": 14350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14330,
											"end": 14350,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 14330,
											"end": 14350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14325,
											"end": 14350,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14325,
											"end": 14350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14374,
											"end": 14375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14371,
											"end": 14372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14367,
											"end": 14376,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14398,
											"end": 14399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14392,
											"end": 14396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14389,
											"end": 14400,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14386,
											"end": 14423,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14386,
											"end": 14423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14386,
											"end": 14423,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14403,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 14403,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 14403,
											"end": 14421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14403,
											"end": 14421,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 14403,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14386,
											"end": 14423,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14386,
											"end": 14423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14430,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14430,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14436,
											"end": 14616,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 14436,
											"end": 14616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14561,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14481,
											"end": 14482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14474,
											"end": 14562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14581,
											"end": 14585,
											"name": "PUSH",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14571,
											"end": 14586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14605,
											"end": 14609,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14602,
											"end": 14603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14595,
											"end": 14610,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14802,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 14622,
											"end": 14802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14762,
											"end": 14794,
											"name": "PUSH",
											"source": 8,
											"value": "4552432D333634333A2049737375657220646F65736E27742065786973740000"
										},
										{
											"begin": 14758,
											"end": 14759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14750,
											"end": 14756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14746,
											"end": 14760,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14739,
											"end": 14795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 15174,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 14808,
											"end": 15174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14950,
											"end": 14953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14971,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 15035,
											"end": 15037,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 15030,
											"end": 15033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14971,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 14971,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14971,
											"end": 15038,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 14971,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14964,
											"end": 15038,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14964,
											"end": 15038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15047,
											"end": 15140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15136,
											"end": 15139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15047,
											"end": 15140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 15047,
											"end": 15140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15047,
											"end": 15140,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15047,
											"end": 15140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15165,
											"end": 15167,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15160,
											"end": 15163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15156,
											"end": 15168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15149,
											"end": 15168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15149,
											"end": 15168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 15174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 15174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 15174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 15174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15599,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 15180,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15346,
											"end": 15350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15384,
											"end": 15386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15373,
											"end": 15382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15369,
											"end": 15387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15361,
											"end": 15387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15361,
											"end": 15387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15423,
											"end": 15443,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15419,
											"end": 15420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15408,
											"end": 15417,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15404,
											"end": 15421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15461,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15587,
											"end": 15591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15461,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 15461,
											"end": 15592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15461,
											"end": 15592,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15461,
											"end": 15592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15453,
											"end": 15592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15453,
											"end": 15592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15605,
											"end": 15785,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 15605,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15745,
											"end": 15777,
											"name": "PUSH",
											"source": 8,
											"value": "4552432D333634333A20496E76616C6964207A65726F20616464726573730000"
										},
										{
											"begin": 15741,
											"end": 15742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15733,
											"end": 15739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15729,
											"end": 15743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15722,
											"end": 15778,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15605,
											"end": 15785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15605,
											"end": 15785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 16157,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 15791,
											"end": 16157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15933,
											"end": 15936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15954,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 16018,
											"end": 16020,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 16013,
											"end": 16016,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15954,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 15954,
											"end": 16021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15954,
											"end": 16021,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15954,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15947,
											"end": 16021,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15947,
											"end": 16021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16030,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 16119,
											"end": 16122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16030,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 16030,
											"end": 16123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16030,
											"end": 16123,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 16030,
											"end": 16123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16148,
											"end": 16150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16143,
											"end": 16146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16139,
											"end": 16151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16132,
											"end": 16151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16132,
											"end": 16151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 16157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 16157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 16157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 16157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16163,
											"end": 16582,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 16163,
											"end": 16582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16329,
											"end": 16333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16367,
											"end": 16369,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16356,
											"end": 16365,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16344,
											"end": 16370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16344,
											"end": 16370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16416,
											"end": 16425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16410,
											"end": 16414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16402,
											"end": 16403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16391,
											"end": 16400,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16387,
											"end": 16404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16380,
											"end": 16427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16570,
											"end": 16574,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 16444,
											"end": 16575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16575,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16444,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16436,
											"end": 16575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16436,
											"end": 16575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16163,
											"end": 16582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16163,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16163,
											"end": 16582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16163,
											"end": 16582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16588,
											"end": 16769,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 16588,
											"end": 16769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16728,
											"end": 16761,
											"name": "PUSH",
											"source": 8,
											"value": "4552432D333634333A2049737375657220616C72656164792065786973747300"
										},
										{
											"begin": 16724,
											"end": 16725,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16716,
											"end": 16722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16712,
											"end": 16726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16705,
											"end": 16762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16588,
											"end": 16769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16588,
											"end": 16769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16775,
											"end": 17141,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 16775,
											"end": 17141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16917,
											"end": 16920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16938,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 17002,
											"end": 17004,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16997,
											"end": 17000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16938,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 16938,
											"end": 17005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16938,
											"end": 17005,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16938,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16931,
											"end": 17005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16931,
											"end": 17005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17014,
											"end": 17107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 17103,
											"end": 17106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17014,
											"end": 17107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 17014,
											"end": 17107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17014,
											"end": 17107,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 17014,
											"end": 17107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17132,
											"end": 17134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17127,
											"end": 17130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17116,
											"end": 17135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17116,
											"end": 17135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16775,
											"end": 17141,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16775,
											"end": 17141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16775,
											"end": 17141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16775,
											"end": 17141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17147,
											"end": 17566,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 17147,
											"end": 17566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17313,
											"end": 17317,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17351,
											"end": 17353,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17340,
											"end": 17349,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17336,
											"end": 17354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17328,
											"end": 17354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17328,
											"end": 17354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17400,
											"end": 17409,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17398,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17410,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17386,
											"end": 17387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17375,
											"end": 17384,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17371,
											"end": 17388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17428,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 17554,
											"end": 17558,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17428,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 17428,
											"end": 17559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17428,
											"end": 17559,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 17428,
											"end": 17559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17420,
											"end": 17559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17420,
											"end": 17559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17147,
											"end": 17566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17147,
											"end": 17566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17147,
											"end": 17566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17147,
											"end": 17566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17572,
											"end": 17750,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 17572,
											"end": 17750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17712,
											"end": 17742,
											"name": "PUSH",
											"source": 8,
											"value": "4552432D333634333A20456D70747920636C61696D20746F7069637300000000"
										},
										{
											"begin": 17708,
											"end": 17709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17700,
											"end": 17706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17696,
											"end": 17710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17689,
											"end": 17743,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17572,
											"end": 17750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17572,
											"end": 17750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17756,
											"end": 18122,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 17756,
											"end": 18122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17898,
											"end": 17901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17919,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 17983,
											"end": 17985,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 17978,
											"end": 17981,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17919,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 17919,
											"end": 17986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17919,
											"end": 17986,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 17919,
											"end": 17986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17912,
											"end": 17986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17912,
											"end": 17986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17995,
											"end": 18088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 18084,
											"end": 18087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17995,
											"end": 18088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 17995,
											"end": 18088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17995,
											"end": 18088,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 17995,
											"end": 18088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18113,
											"end": 18115,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18108,
											"end": 18111,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18104,
											"end": 18116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18097,
											"end": 18116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18097,
											"end": 18116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17756,
											"end": 18122,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17756,
											"end": 18122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17756,
											"end": 18122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17756,
											"end": 18122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18128,
											"end": 18547,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 18128,
											"end": 18547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18294,
											"end": 18298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18332,
											"end": 18334,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18321,
											"end": 18330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18317,
											"end": 18335,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18309,
											"end": 18335,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18309,
											"end": 18335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18381,
											"end": 18390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18371,
											"end": 18391,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18367,
											"end": 18368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18356,
											"end": 18365,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18352,
											"end": 18369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18345,
											"end": 18392,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18409,
											"end": 18540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 18535,
											"end": 18539,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18409,
											"end": 18540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 18409,
											"end": 18540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18409,
											"end": 18540,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 18409,
											"end": 18540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18401,
											"end": 18540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18401,
											"end": 18540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18128,
											"end": 18547,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18128,
											"end": 18547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18128,
											"end": 18547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18128,
											"end": 18547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/registry/ClaimIssuersRegistry.sol",
								"contracts/registry/interface/IClaimIssuersRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addClaimIssuer(address,uint256[])": "38d742a4",
							"getClaimIssuerClaimTopics(address)": "122dade8",
							"getClaimIssuers()": "d4f4ac4e",
							"getClaimIssuersForClaimTopic(uint256)": "6b2c56bd",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isClaimIssuer(address)": "6de48708",
							"owner()": "8da5cb5b",
							"removeClaimIssuer(address)": "0b4b764c",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"claimIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"claimIssuer\",\"type\":\"address\"}],\"name\":\"ClaimIssuerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"claimIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addClaimIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"}],\"name\":\"getClaimIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getClaimIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isClaimIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"}],\"name\":\"removeClaimIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract maintains a registry of claim issuers and their associated claim topics for the ERC-3643 standard.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addClaimIssuer(address,uint256[])\":{\"params\":{\"_claimIssuer\":\"The address of the claim issuer.\",\"_claimTopics\":\"An array of claim topics associated with the claim issuer. Requirements: - The caller must be the owner of the contract. - The claim issuer address must not be zero. - The claim issuer must not already exist in the registry. - The claim topics array must not be empty. - It is recommended to add a reasonable number of claim issuers at once. Emits a ClaimIssuerAdded event.\"}},\"getClaimIssuerClaimTopics(address)\":{\"params\":{\"_claimIssuer\":\"The claim issuer to find associated claim topics for.\"},\"returns\":{\"_0\":\"A memory array of claim topics.\"}},\"getClaimIssuers()\":{\"returns\":{\"_0\":\"A memory array of claim issuers.\"}},\"getClaimIssuersForClaimTopic(uint256)\":{\"params\":{\"claimTopic\":\"The claim topic to find associated claim issuers for.\"},\"returns\":{\"_0\":\"A memory array of claim issuers.\"}},\"hasClaimTopic(address,uint256)\":{\"details\":\"This function checks if a specific claim topic is associated with a claim issuer.\",\"params\":{\"_claimTopic\":\"The claim topic to check.\",\"_issuer\":\"The claim issuer to check.\"},\"returns\":{\"_0\":\"bool True if the claim issuer has the claim topic, otherwise false.\"}},\"isClaimIssuer(address)\":{\"params\":{\"_issuer\":\"The address to check.\"},\"returns\":{\"_0\":\"True if the address is a claim issuer, false otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeClaimIssuer(address)\":{\"params\":{\"_claimIssuer\":\"The address of the claim issuer to be removed. Requirements: - The caller must be the owner of the contract. - The claim issuer must exist in the registry. Emits a ClaimIssuerRemoved event.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateIssuerClaimTopics(address,uint256[])\":{\"params\":{\"_claimIssuer\":\"The address of the claim issuer.\",\"_claimTopics\":\"An array of claim topics to be associated with the claim issuer. Requirements: - The caller must be the owner of the contract. - The claim issuer must exist in the registry. - The claim topics array must not be empty. Emits a ClaimTopicsUpdated event.\"}}},\"stateVariables\":{\"_claimIssuerClaimTopics\":{\"details\":\"Mapping between a claim issuer address and its corresponding claimTopics.\"},\"_claimIssuers\":{\"details\":\"Array containing all ClaimIssuers identity contract address.\"},\"_claimTopicToClaimIssuers\":{\"details\":\"Mapping between a claim topic and the allowed claim issuers for it.\"}},\"title\":\"ERC-3643 - ClaimIssuersRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"ClaimIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a claim issuer is added in the registry.  the event is emitted by the addClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit\"},\"ClaimIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a claim issuer is removed from the registry.  the event is emitted by the removeClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract\"},\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given claim issuer.  the event is emitted by the updateIssuerClaimTopics function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit\"}},\"kind\":\"user\",\"methods\":{\"addClaimIssuer(address,uint256[])\":{\"notice\":\"Adds a claim issuer to the Claim Issuers Registry.\"},\"getClaimIssuerClaimTopics(address)\":{\"notice\":\"Returns an array of claim topics associated with a specific claim issuer.\"},\"getClaimIssuers()\":{\"notice\":\"Returns an array of all claim issuers in the registry.\"},\"getClaimIssuersForClaimTopic(uint256)\":{\"notice\":\"Returns an array of all claim issuers associated with a specific claim topic.\"},\"hasClaimTopic(address,uint256)\":{\"notice\":\"Checks if a claim issuer has a specific claim topic.\"},\"isClaimIssuer(address)\":{\"notice\":\"Checks if an address is a claim issuer in the registry.\"},\"removeClaimIssuer(address)\":{\"notice\":\"Removes a claim issuer from the Claim Issuers Registry.\"},\"updateIssuerClaimTopics(address,uint256[])\":{\"notice\":\"Updates the claim topics associated with a claim issuer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/ClaimIssuersRegistry.sol\":\"ClaimIssuersRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xbb0ece96ebc110624705b3b6859367974ba6b17cff353df43a83b108680f0d26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55a65e7c5daab4b177604b00c68835377386390c05cee4dc26c91aef86af7237\",\"dweb:/ipfs/QmdYNJMYJxFnpaSQZafLpFPER9wyMkUZmGkQko1XrUMHP7\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x7ca841caeee4116062dba880a955796c773d1b0b35a7d69b67104d9e6bd2705a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc05e6f2872be12d06cfe630c13d1d6d74b5b9b587f0797615e5dac88e84f4c8\",\"dweb:/ipfs/Qme2h6ah6uYShmK5x3fgfsH7rCqYtSUns9tyRyKFJYef6c\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x60ac71cd3e106d656dcc26e6f58df6e8c487ce5d0cdeed6f5449cf974a24e587\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26716e36966cb392d6fa8f9a470b69ded94fedf7f9cdd5095af0028d194baa6d\",\"dweb:/ipfs/QmYJ7Lc4vk1LNHtqZPWtZSpStCepQRgzUWvVaGAb5yLFV8\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0xa3166f33baa94c9f2a010c8618fdd6038b4a64636eab809c50442c835f08f8dc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b84d33d807a86846807678787e89f01ee81903968506caf5bc55c36622670c80\",\"dweb:/ipfs/QmQxG5fp38FTzK22rArNMpknA276Ji5mrrEuaoCR7pwzsH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe6dd1bb1b56d51404c2664bf6a0fce775e228e0b21af652072be31534e72728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c60f1471735a5f3bde3c627f9da51ddf7cc28b4d536cc99ff744c8d38e4ab895\",\"dweb:/ipfs/Qmap8wDcLTZaPjzv6g8mrrFX6h7qmzWaM2cABndwvSAzA8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/registry/ClaimIssuersRegistry.sol\":{\"keccak256\":\"0xfc52020b79f4facf4be4129f719669c0f5de40a03e506b433b196588c9bb3f18\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f17a1da8b616972f3574a46d8d1732863cf9d2d34cecce5f315ad1dfa34bb590\",\"dweb:/ipfs/QmZuXVxaC3TYPiS6pp2vKjDrLgCtMG42WgeFikCuVdQQc5\"]},\"contracts/registry/interface/IClaimIssuersRegistry.sol\":{\"keccak256\":\"0xa39c1be91cea916b2510a7d741b9a1e78fa03ed8ffee0be6aee95d26e675d874\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://157624f0af04aee04c381389d8fd62a3cfddbd3ab935a89b34f6b931fddce99f\",\"dweb:/ipfs/QmQ9zQ4ueNM75VjDWbVRiDyjW3cdS7k3LWQiZqHeUnfRaJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 337,
								"contract": "contracts/registry/ClaimIssuersRegistry.sol:ClaimIssuersRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 523,
								"contract": "contracts/registry/ClaimIssuersRegistry.sol:ClaimIssuersRegistry",
								"label": "_claimIssuers",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_contract(IClaimIssuer)49)dyn_storage"
							},
							{
								"astId": 530,
								"contract": "contracts/registry/ClaimIssuersRegistry.sol:ClaimIssuersRegistry",
								"label": "_claimIssuerClaimTopics",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_contract(IClaimIssuer)49,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 537,
								"contract": "contracts/registry/ClaimIssuersRegistry.sol:ClaimIssuersRegistry",
								"label": "_claimTopicToClaimIssuers",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)49)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IClaimIssuer)49)dyn_storage": {
								"base": "t_contract(IClaimIssuer)49",
								"encoding": "dynamic_array",
								"label": "contract IClaimIssuer[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IClaimIssuer)49": {
								"encoding": "inplace",
								"label": "contract IClaimIssuer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_contract(IClaimIssuer)49,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_contract(IClaimIssuer)49",
								"label": "mapping(contract IClaimIssuer => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)49)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => contract IClaimIssuer[])",
								"numberOfBytes": "32",
								"value": "t_array(t_contract(IClaimIssuer)49)dyn_storage"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ClaimIssuerAdded(address,uint256[])": {
								"notice": "this event is emitted when a claim issuer is added in the registry.  the event is emitted by the addClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit"
							},
							"ClaimIssuerRemoved(address)": {
								"notice": "this event is emitted when a claim issuer is removed from the registry.  the event is emitted by the removeClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract"
							},
							"ClaimTopicsUpdated(address,uint256[])": {
								"notice": "this event is emitted when the set of claim topics is changed for a given claim issuer.  the event is emitted by the updateIssuerClaimTopics function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit"
							}
						},
						"kind": "user",
						"methods": {
							"addClaimIssuer(address,uint256[])": {
								"notice": "Adds a claim issuer to the Claim Issuers Registry."
							},
							"getClaimIssuerClaimTopics(address)": {
								"notice": "Returns an array of claim topics associated with a specific claim issuer."
							},
							"getClaimIssuers()": {
								"notice": "Returns an array of all claim issuers in the registry."
							},
							"getClaimIssuersForClaimTopic(uint256)": {
								"notice": "Returns an array of all claim issuers associated with a specific claim topic."
							},
							"hasClaimTopic(address,uint256)": {
								"notice": "Checks if a claim issuer has a specific claim topic."
							},
							"isClaimIssuer(address)": {
								"notice": "Checks if an address is a claim issuer in the registry."
							},
							"removeClaimIssuer(address)": {
								"notice": "Removes a claim issuer from the Claim Issuers Registry."
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"notice": "Updates the claim topics associated with a claim issuer."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/registry/interface/IClaimIssuersRegistry.sol": {
				"IClaimIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "claimIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "claimIssuer",
									"type": "address"
								}
							],
							"name": "ClaimIssuerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "claimIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addClaimIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								}
							],
							"name": "getClaimIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getClaimIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isClaimIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								}
							],
							"name": "removeClaimIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_claimIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaimIssuer(address,uint256[])": {
								"details": "registers a ClaimIssuer contract as claim claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Claim issuers",
								"params": {
									"_claimIssuer": "The ClaimIssuer contract address of the claim claim issuer.",
									"_claimTopics": "the set of claim topics that the claim issuer is allowed to emit  This function can only be called by the owner of the Claim Issuers Registry contract  emits a `ClaimIssuerAdded` event"
								}
							},
							"getClaimIssuerClaimTopics(address)": {
								"details": "Function for getting all the claim topic of claim claim issuer  Requires the provided ClaimIssuer contract to be registered in the claim issuers registry.",
								"params": {
									"_claimIssuer": "the claim issuer concerned."
								},
								"returns": {
									"_0": "The set of claim topics that the claim issuer is allowed to emit"
								}
							},
							"getClaimIssuers()": {
								"details": "Function for getting all the claim claim issuers stored.",
								"returns": {
									"_0": "array of all claim issuers registered."
								}
							},
							"getClaimIssuersForClaimTopic(uint256)": {
								"details": "Function for getting all the claim issuer allowed for a given claim topic.",
								"params": {
									"claimTopic": "the claim topic to get the claim issuers for."
								},
								"returns": {
									"_0": "array of all claim issuer addresses that are allowed for the given claim topic."
								}
							},
							"hasClaimTopic(address,uint256)": {
								"details": "Function for checking if the claim claim issuer is allowed  to emit a certain claim topic",
								"params": {
									"_claimTopic": "the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it",
									"_issuer": "the address of the claim issuer's ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is claim for this claim topic."
								}
							},
							"isClaimIssuer(address)": {
								"details": "Checks if the ClaimIssuer contract is claim",
								"params": {
									"_issuer": "the address of the ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is claim, false otherwise."
								}
							},
							"removeClaimIssuer(address)": {
								"details": "Removes the ClaimIssuer contract of a claim claim issuer.  Requires that the claim issuer contract to be registered first",
								"params": {
									"_claimIssuer": "the claim issuer to remove.  This function can only be called by the owner of the Claim Issuers Registry contract  emits a `ClaimIssuerRemoved` event"
								}
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"details": "Updates the set of claim topics that a claim issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics",
								"params": {
									"_claimIssuer": "the claim issuer to update.",
									"_claimTopics": "the set of claim topics that the claim issuer is allowed to emit  This function can only be called by the owner of the Claim Issuers Registry contract  emits a `ClaimTopicsUpdated` event"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimIssuer(address,uint256[])": "38d742a4",
							"getClaimIssuerClaimTopics(address)": "122dade8",
							"getClaimIssuers()": "d4f4ac4e",
							"getClaimIssuersForClaimTopic(uint256)": "6b2c56bd",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isClaimIssuer(address)": "6de48708",
							"removeClaimIssuer(address)": "0b4b764c",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"claimIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"claimIssuer\",\"type\":\"address\"}],\"name\":\"ClaimIssuerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"claimIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addClaimIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"}],\"name\":\"getClaimIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getClaimIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isClaimIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"}],\"name\":\"removeClaimIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_claimIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimIssuer(address,uint256[])\":{\"details\":\"registers a ClaimIssuer contract as claim claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Claim issuers\",\"params\":{\"_claimIssuer\":\"The ClaimIssuer contract address of the claim claim issuer.\",\"_claimTopics\":\"the set of claim topics that the claim issuer is allowed to emit  This function can only be called by the owner of the Claim Issuers Registry contract  emits a `ClaimIssuerAdded` event\"}},\"getClaimIssuerClaimTopics(address)\":{\"details\":\"Function for getting all the claim topic of claim claim issuer  Requires the provided ClaimIssuer contract to be registered in the claim issuers registry.\",\"params\":{\"_claimIssuer\":\"the claim issuer concerned.\"},\"returns\":{\"_0\":\"The set of claim topics that the claim issuer is allowed to emit\"}},\"getClaimIssuers()\":{\"details\":\"Function for getting all the claim claim issuers stored.\",\"returns\":{\"_0\":\"array of all claim issuers registered.\"}},\"getClaimIssuersForClaimTopic(uint256)\":{\"details\":\"Function for getting all the claim issuer allowed for a given claim topic.\",\"params\":{\"claimTopic\":\"the claim topic to get the claim issuers for.\"},\"returns\":{\"_0\":\"array of all claim issuer addresses that are allowed for the given claim topic.\"}},\"hasClaimTopic(address,uint256)\":{\"details\":\"Function for checking if the claim claim issuer is allowed  to emit a certain claim topic\",\"params\":{\"_claimTopic\":\"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\",\"_issuer\":\"the address of the claim issuer's ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is claim for this claim topic.\"}},\"isClaimIssuer(address)\":{\"details\":\"Checks if the ClaimIssuer contract is claim\",\"params\":{\"_issuer\":\"the address of the ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is claim, false otherwise.\"}},\"removeClaimIssuer(address)\":{\"details\":\"Removes the ClaimIssuer contract of a claim claim issuer.  Requires that the claim issuer contract to be registered first\",\"params\":{\"_claimIssuer\":\"the claim issuer to remove.  This function can only be called by the owner of the Claim Issuers Registry contract  emits a `ClaimIssuerRemoved` event\"}},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"Updates the set of claim topics that a claim issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics\",\"params\":{\"_claimIssuer\":\"the claim issuer to update.\",\"_claimTopics\":\"the set of claim topics that the claim issuer is allowed to emit  This function can only be called by the owner of the Claim Issuers Registry contract  emits a `ClaimTopicsUpdated` event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a claim issuer is added in the registry.  the event is emitted by the addClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit\"},\"ClaimIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a claim issuer is removed from the registry.  the event is emitted by the removeClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract\"},\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given claim issuer.  the event is emitted by the updateIssuerClaimTopics function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/interface/IClaimIssuersRegistry.sol\":\"IClaimIssuersRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xbb0ece96ebc110624705b3b6859367974ba6b17cff353df43a83b108680f0d26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://55a65e7c5daab4b177604b00c68835377386390c05cee4dc26c91aef86af7237\",\"dweb:/ipfs/QmdYNJMYJxFnpaSQZafLpFPER9wyMkUZmGkQko1XrUMHP7\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x7ca841caeee4116062dba880a955796c773d1b0b35a7d69b67104d9e6bd2705a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc05e6f2872be12d06cfe630c13d1d6d74b5b9b587f0797615e5dac88e84f4c8\",\"dweb:/ipfs/Qme2h6ah6uYShmK5x3fgfsH7rCqYtSUns9tyRyKFJYef6c\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x60ac71cd3e106d656dcc26e6f58df6e8c487ce5d0cdeed6f5449cf974a24e587\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26716e36966cb392d6fa8f9a470b69ded94fedf7f9cdd5095af0028d194baa6d\",\"dweb:/ipfs/QmYJ7Lc4vk1LNHtqZPWtZSpStCepQRgzUWvVaGAb5yLFV8\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0xa3166f33baa94c9f2a010c8618fdd6038b4a64636eab809c50442c835f08f8dc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b84d33d807a86846807678787e89f01ee81903968506caf5bc55c36622670c80\",\"dweb:/ipfs/QmQxG5fp38FTzK22rArNMpknA276Ji5mrrEuaoCR7pwzsH\"]},\"contracts/registry/interface/IClaimIssuersRegistry.sol\":{\"keccak256\":\"0xa39c1be91cea916b2510a7d741b9a1e78fa03ed8ffee0be6aee95d26e675d874\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://157624f0af04aee04c381389d8fd62a3cfddbd3ab935a89b34f6b931fddce99f\",\"dweb:/ipfs/QmQ9zQ4ueNM75VjDWbVRiDyjW3cdS7k3LWQiZqHeUnfRaJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimIssuerAdded(address,uint256[])": {
								"notice": "this event is emitted when a claim issuer is added in the registry.  the event is emitted by the addClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit"
							},
							"ClaimIssuerRemoved(address)": {
								"notice": "this event is emitted when a claim issuer is removed from the registry.  the event is emitted by the removeClaimIssuer function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract"
							},
							"ClaimTopicsUpdated(address,uint256[])": {
								"notice": "this event is emitted when the set of claim topics is changed for a given claim issuer.  the event is emitted by the updateIssuerClaimTopics function  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the claim issuer is allowed to emit"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						]
					},
					"id": 50,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 50,
							"sourceUnit": 329,
							"src": "61:64:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IIdentity",
										"nameLocations": [
											"153:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 328,
										"src": "153:9:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "153:9:0"
								}
							],
							"canonicalName": "IClaimIssuer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49,
								328,
								304,
								196
							],
							"name": "IClaimIssuer",
							"nameLocation": "137:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "170:126:0",
										"text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
									},
									"eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
									"id": 9,
									"name": "ClaimRevoked",
									"nameLocation": "307:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "334:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "320:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:25:0"
									},
									"src": "301:44:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "351:351:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
									},
									"functionSelector": "73c33708",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaim",
									"nameLocation": "716:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "736:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "728:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "754:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "746:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "782:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:6:0"
									},
									"scope": 49,
									"src": "707:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "794:169:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
									},
									"functionSelector": "9f7f9edd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaimBySignature",
									"nameLocation": "977:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1015:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1000:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 21,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1000:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:0"
									},
									"scope": 49,
									"src": "968:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1041:181:0",
										"text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
									},
									"functionSelector": "2646b264",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimRevoked",
									"nameLocation": "1236:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "1266:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1251:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1251:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:21:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1295:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:6:0"
									},
									"scope": 49,
									"src": "1227:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										327
									],
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1307:334:0",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "1655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1687:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1677:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "IIdentity",
														"nameLocations": [
															"1677:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "1677:9:0"
													},
													"referencedDeclaration": 328,
													"src": "1677:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1714:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1706:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1749:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1734:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1734:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1777:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1762:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:115:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:6:0"
									},
									"scope": 49,
									"src": "1646:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "127:1691:0",
							"usedErrors": [],
							"usedEvents": [
								9,
								59,
								70,
								81,
								92,
								101,
								110,
								216,
								233,
								250
							]
						}
					],
					"src": "36:1783:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							196
						]
					},
					"id": 197,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 51,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:1",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "IERC734",
							"nameLocation": "156:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:1",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 59,
									"name": "Approved",
									"nameLocation": "338:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "347:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 56,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:1"
									},
									"src": "332:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:1",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 70,
									"name": "Executed",
									"nameLocation": "622:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "631:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "680:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 67,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:1"
									},
									"src": "616:99:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:1",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 81,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "922:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "951:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "971:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:1"
									},
									"src": "897:109:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:1",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 92,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1190:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1219:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 89,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:1"
									},
									"src": "1168:106:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:1",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 101,
									"name": "KeyAdded",
									"nameLocation": "1444:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1499:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:1"
									},
									"src": "1438:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:1",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 110,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1712:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1733:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1758:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:1"
									},
									"src": "1695:88:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:1",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2129:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2161:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2197:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:1"
									},
									"scope": 196,
									"src": "2113:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:1",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2440:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2486:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:1"
									},
									"scope": 196,
									"src": "2423:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:1",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2834:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2870:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:1"
									},
									"scope": 196,
									"src": "2801:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:1",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3393:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3422:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:1"
									},
									"scope": 196,
									"src": "3376:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:1",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3633:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 159,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3677:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:1"
									},
									"scope": 196,
									"src": "3580:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:1",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3836:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 172,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 173,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:1"
									},
									"scope": 196,
									"src": "3776:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:1",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3986:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "4027:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:1"
									},
									"scope": 196,
									"src": "3960:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:1",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:1"
									},
									"scope": 196,
									"src": "4188:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 197,
							"src": "146:4135:1",
							"usedErrors": [],
							"usedEvents": [
								59,
								70,
								81,
								92,
								101,
								110
							]
						}
					],
					"src": "36:4246:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							304
						]
					},
					"id": 305,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:2",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "IERC735",
							"nameLocation": "158:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:2",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 216,
									"name": "ClaimAdded",
									"nameLocation": "323:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "343:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "508:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:2"
									},
									"src": "317:203:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:2",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 233,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "705:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "738:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "793:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "825:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "850:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:2"
									},
									"src": "677:205:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:2",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 250,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1087:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1120:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1151:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1175:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:2"
									},
									"src": "1059:205:2"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:2",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1740:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1813:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1848:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1878:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1922:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:2"
									},
									"scope": 304,
									"src": "1713:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:2",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2171:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:2"
									},
									"scope": 304,
									"src": "2150:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:2",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2404:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2457:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2528:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2560:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:2"
									},
									"scope": 304,
									"src": "2386:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:2",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2708:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2746:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:2"
									},
									"scope": 304,
									"src": "2680:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "148:2627:2",
							"usedErrors": [],
							"usedEvents": [
								216,
								233,
								250
							]
						}
					],
					"src": "36:2740:2"
				},
				"id": 2
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						]
					},
					"id": 329,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 197,
							"src": "61:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 305,
							"src": "85:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 309,
										"name": "IERC734",
										"nameLocations": [
											"178:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "178:7:3"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:3"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC735",
										"nameLocations": [
											"187:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 304,
										"src": "187:7:3"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:3"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 328,
							"linearizedBaseContracts": [
								328,
								304,
								196
							],
							"name": "IIdentity",
							"nameLocation": "165:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "201:334:3",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "549:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "581:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "571:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 314,
														"name": "IIdentity",
														"nameLocations": [
															"571:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "571:9:3"
													},
													"referencedDeclaration": 328,
													"src": "571:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "608:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "600:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "643:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "628:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "628:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "671:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "656:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "656:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:115:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "704:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:6:3"
									},
									"scope": 328,
									"src": "540:170:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 329,
							"src": "155:557:3",
							"usedErrors": [],
							"usedEvents": [
								59,
								70,
								81,
								92,
								101,
								110,
								216,
								233,
								250
							]
						}
					],
					"src": "36:677:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							506
						],
						"Ownable": [
							476
						]
					},
					"id": 477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 477,
							"sourceUnit": 507,
							"src": "128:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 331,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 506,
										"src": "136:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 334,
										"name": "Context",
										"nameLocations": [
											"692:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 506,
										"src": "692:7:4"
									},
									"id": 335,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:4"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 333,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 476,
							"linearizedBaseContracts": [
								476,
								506
							],
							"name": "Ownable",
							"nameLocation": "681:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 476,
									"src": "706:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 336,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:4",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 342,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "858:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:4"
									},
									"src": "825:50:4"
								},
								{
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:4",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 347,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:4"
									},
									"src": "968:41:4"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 353,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1042:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1073:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:4"
									},
									"src": "1015:84:4"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "1259:153:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1273:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "1269:95:4",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "1301:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "1322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "1315:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "1392:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1373:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:4"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:4",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 379,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1237:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:4"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:4"
									},
									"scope": 476,
									"src": "1225:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1521:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 382,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1531:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:4"
											},
											{
												"id": 385,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:4"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 387,
									"name": "onlyOwner",
									"nameLocation": "1509:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:4"
									},
									"src": "1500:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "1693:30:4",
										"statements": [
											{
												"expression": {
													"id": 393,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "1710:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 392,
												"id": 394,
												"nodeType": "Return",
												"src": "1703:13:4"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "1684:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:4"
									},
									"scope": 476,
									"src": "1638:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1841:117:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 400,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1855:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 402,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "1866:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 411,
												"nodeType": "IfStatement",
												"src": "1851:101:4",
												"trueBody": {
													"id": 410,
													"nodeType": "Block",
													"src": "1880:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 406,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "1928:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 405,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "1901:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 409,
															"nodeType": "RevertStatement",
															"src": "1894:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:4"
									},
									"scope": 476,
									"src": "1796:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2347:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 419,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2357:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:4"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 417,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 416,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "2337:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:4"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:4"
									},
									"scope": 476,
									"src": "2293:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "2613:145:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 435,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2627:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 436,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"nodeType": "IfStatement",
												"src": "2623:91:4",
												"trueBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "2651:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 442,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 441,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "2672:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 447,
															"nodeType": "RevertStatement",
															"src": "2665:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "2742:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 450,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2723:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:4"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 433,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 432,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "2603:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2570:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:4"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:4"
									},
									"scope": 476,
									"src": "2543:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2975:124:4",
										"statements": [
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "2985:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 461,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"id": 463,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "3004:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:4"
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 465,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3020:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 466,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3029:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 470,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "3073:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3083:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3052:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "EmitStatement",
												"src": "3047:45:4"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2940:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:4"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:4"
									},
									"scope": 476,
									"src": "2912:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 477,
							"src": "663:2438:4",
							"usedErrors": [
								342,
								347
							],
							"usedEvents": [
								353
							]
						}
					],
					"src": "102:3000:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 479,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 484,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 483,
												"id": 486,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 506,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 493,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 492,
												"id": 495,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 506,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 501,
												"id": 503,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 506,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 507,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/registry/ClaimIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/registry/ClaimIssuersRegistry.sol",
					"exportedSymbols": {
						"ClaimIssuersRegistry": [
							1040
						],
						"Context": [
							506
						],
						"IClaimIssuer": [
							49
						],
						"IClaimIssuersRegistry": [
							1143
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"Ownable": [
							476
						]
					},
					"id": 1041,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 508,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:6"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 50,
							"src": "61:67:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 477,
							"src": "129:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/registry/interface/IClaimIssuersRegistry.sol",
							"file": "contracts/registry/interface/IClaimIssuersRegistry.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 1144,
							"src": "182:64:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 513,
										"name": "IClaimIssuersRegistry",
										"nameLocations": [
											"446:21:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1143,
										"src": "446:21:6"
									},
									"id": 514,
									"nodeType": "InheritanceSpecifier",
									"src": "446:21:6"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 516,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "477:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 517,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "481:6:6",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "477:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 515,
										"name": "Ownable",
										"nameLocations": [
											"469:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 476,
										"src": "469:7:6"
									},
									"id": 518,
									"nodeType": "InheritanceSpecifier",
									"src": "469:19:6"
								}
							],
							"canonicalName": "ClaimIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 512,
								"nodeType": "StructuredDocumentation",
								"src": "248:165:6",
								"text": "@title ERC-3643 - ClaimIssuersRegistry\n @dev This contract maintains a registry of claim issuers and their associated claim topics for the ERC-3643 standard."
							},
							"fullyImplemented": true,
							"id": 1040,
							"linearizedBaseContracts": [
								1040,
								476,
								506,
								1143
							],
							"name": "ClaimIssuersRegistry",
							"nameLocation": "422:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "495:69:6",
										"text": "@dev Array containing all ClaimIssuers identity contract address."
									},
									"id": 523,
									"mutability": "mutable",
									"name": "_claimIssuers",
									"nameLocation": "592:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "569:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
										"typeString": "contract IClaimIssuer[]"
									},
									"typeName": {
										"baseType": {
											"id": 521,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 520,
												"name": "IClaimIssuer",
												"nameLocations": [
													"569:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "569:12:6"
											},
											"referencedDeclaration": 49,
											"src": "569:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IClaimIssuer_$49",
												"typeString": "contract IClaimIssuer"
											}
										},
										"id": 522,
										"nodeType": "ArrayTypeName",
										"src": "569:14:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
											"typeString": "contract IClaimIssuer[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "612:82:6",
										"text": "@dev Mapping between a claim issuer address and its corresponding claimTopics."
									},
									"id": 530,
									"mutability": "mutable",
									"name": "_claimIssuerClaimTopics",
									"nameLocation": "742:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "699:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(contract IClaimIssuer => uint256[])"
									},
									"typeName": {
										"id": 529,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 526,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 525,
												"name": "IClaimIssuer",
												"nameLocations": [
													"707:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "707:12:6"
											},
											"referencedDeclaration": 49,
											"src": "707:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IClaimIssuer_$49",
												"typeString": "contract IClaimIssuer"
											}
										},
										"nodeType": "Mapping",
										"src": "699:34:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(contract IClaimIssuer => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 527,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "723:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 528,
											"nodeType": "ArrayTypeName",
											"src": "723:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "772:76:6",
										"text": "@dev Mapping between a claim topic and the allowed claim issuers for it."
									},
									"id": 537,
									"mutability": "mutable",
									"name": "_claimTopicToClaimIssuers",
									"nameLocation": "896:25:6",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "853:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
										"typeString": "mapping(uint256 => contract IClaimIssuer[])"
									},
									"typeName": {
										"id": 536,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 532,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "861:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "853:34:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
											"typeString": "mapping(uint256 => contract IClaimIssuer[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 534,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 533,
													"name": "IClaimIssuer",
													"nameLocations": [
														"872:12:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 49,
													"src": "872:12:6"
												},
												"referencedDeclaration": 49,
												"src": "872:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												}
											},
											"id": 535,
											"nodeType": "ArrayTypeName",
											"src": "872:14:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
												"typeString": "contract IClaimIssuer[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1077
									],
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "1639:725:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 552,
																		"name": "_claimIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "1678:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1670:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1670:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1670:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1695:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 554,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1695:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1695:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1670:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a20496e76616c6964207a65726f2061646472657373",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1719:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada",
																"typeString": "literal_string \"ERC-3643: Invalid zero address\""
															},
															"value": "ERC-3643: Invalid zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_faf1f0a3cdc8ca98e99e018c4509e4e82d51963a8d17ddf08a3206cfdd73cada",
																"typeString": "literal_string \"ERC-3643: Invalid zero address\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:112:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1649:112:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 563,
																		"name": "_claimIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "1792:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
																		}
																	},
																	"id": 565,
																	"indexExpression": {
																		"id": 564,
																		"name": "_claimIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "1816:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1792:37:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1830:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1792:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1840:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1792:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a2049737375657220616c726561647920657869737473",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1855:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1",
																"typeString": "literal_string \"ERC-3643: Issuer already exists\""
															},
															"value": "ERC-3643: Issuer already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b64a44cd12bacc7264ec226735a0b9ddca7cad16c5972dc45f98b0805573fa1",
																"typeString": "literal_string \"ERC-3643: Issuer already exists\""
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1771:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:127:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1771:127:6"
											},
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1913:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "1908:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1908:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 576,
												"initialValue": {
													"expression": {
														"id": 574,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "1922:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1935:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1922:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1908:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "1959:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1969:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1959:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a20456d70747920636c61696d20746f70696373",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1972:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da",
																"typeString": "literal_string \"ERC-3643: Empty claim topics\""
															},
															"value": "ERC-3643: Empty claim topics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba66d287e1dd72b831fc0503b8770af28778892eef2fd8288b3575c1f797b4da",
																"typeString": "literal_string \"ERC-3643: Empty claim topics\""
															}
														],
														"id": 577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1951:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "1951:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2033:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														],
														"expression": {
															"id": 584,
															"name": "_claimIssuers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "2014:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																"typeString": "contract IClaimIssuer[] storage ref"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2028:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2014:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$49_$returns$__$attached_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
															"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2014:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "2014:32:6"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 590,
															"name": "_claimIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "2056:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
															}
														},
														"id": 592,
														"indexExpression": {
															"id": 591,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2080:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2056:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 593,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "2096:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "2056:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "2056:52:6"
											},
											{
												"body": {
													"id": 616,
													"nodeType": "Block",
													"src": "2153:145:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "_claimIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "2215:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 603,
																			"name": "_claimTopicToClaimIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "2167:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																				"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																			}
																		},
																		"id": 607,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 604,
																				"name": "_claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "2193:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 606,
																			"indexExpression": {
																				"id": 605,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "2206:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2193:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2167:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2210:4:6",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2167:47:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$49_$returns$__$attached_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																		"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2167:61:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 611,
															"nodeType": "ExpressionStatement",
															"src": "2167:61:6"
														},
														{
															"id": 615,
															"nodeType": "UncheckedBlock",
															"src": "2242:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2270:3:6",
																		"subExpression": {
																			"id": 612,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "2272:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 614,
																	"nodeType": "ExpressionStatement",
																	"src": "2270:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2139:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 601,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2143:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2139:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"initializationExpression": {
													"assignments": [
														597
													],
													"declarations": [
														{
															"constant": false,
															"id": 597,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2132:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 617,
															"src": "2124:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 596,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2124:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 599,
													"initialValue": {
														"hexValue": "30",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2136:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2124:13:6"
												},
												"nodeType": "ForStatement",
												"src": "2119:179:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 619,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2330:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														{
															"id": 620,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2344:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 618,
														"name": "ClaimIssuerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "2313:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (contract IClaimIssuer,uint256[] memory)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "EmitStatement",
												"src": "2308:49:6"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "928:581:6",
										"text": "@notice Adds a claim issuer to the Claim Issuers Registry.\n @param _claimIssuer The address of the claim issuer.\n @param _claimTopics An array of claim topics associated with the claim issuer.\n Requirements:\n - The caller must be the owner of the contract.\n - The claim issuer address must not be zero.\n - The claim issuer must not already exist in the registry.\n - The claim topics array must not be empty.\n - It is recommended to add a reasonable number of claim issuers at once.\n Emits a ClaimIssuerAdded event."
									},
									"functionSelector": "38d742a4",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 546,
												"name": "onlyOwner",
												"nameLocations": [
													"1629:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "1629:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1629:9:6"
										}
									],
									"name": "addClaimIssuer",
									"nameLocation": "1523:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "1560:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1547:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 539,
														"name": "IClaimIssuer",
														"nameLocations": [
															"1547:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "1547:12:6"
													},
													"referencedDeclaration": 49,
													"src": "1547:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "1601:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1582:31:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 542,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1582:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 543,
													"nodeType": "ArrayTypeName",
													"src": "1582:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:82:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:0:6"
									},
									"scope": 1040,
									"src": "1514:850:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1084
									],
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2765:787:6",
										"statements": [
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "claimIssuerTopicsLength",
														"nameLocation": "2780:23:6",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "2775:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2775:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 635,
															"name": "_claimIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "2806:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
															}
														},
														"id": 637,
														"indexExpression": {
															"id": 636,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "2830:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2806:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2857:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2806:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2775:88:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 641,
																"name": "claimIssuerTopicsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "2881:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2908:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2881:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a204e6f74206120636c61696d20697373756572",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2911:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40",
																"typeString": "literal_string \"ERC-3643: Not a claim issuer\""
															},
															"value": "ERC-3643: Not a claim issuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40",
																"typeString": "literal_string \"ERC-3643: Not a claim issuer\""
															}
														],
														"id": 640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2873:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2873:69:6"
											},
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "claimIssuerlength",
														"nameLocation": "2960:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "2952:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2952:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"expression": {
														"id": 649,
														"name": "_claimIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2980:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
															"typeString": "contract IClaimIssuer[] storage ref"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2994:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2980:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2952:48:6"
											},
											{
												"body": {
													"id": 686,
													"nodeType": "Block",
													"src": "3055:269:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																	"typeString": "contract IClaimIssuer"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 659,
																		"name": "_claimIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "3073:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 661,
																	"indexExpression": {
																		"id": 660,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "3087:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3073:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 662,
																	"name": "_claimIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "3093:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"src": "3073:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 681,
															"nodeType": "IfStatement",
															"src": "3069:186:6",
															"trueBody": {
																"id": 680,
																"nodeType": "Block",
																"src": "3107:148:6",
																"statements": [
																	{
																		"expression": {
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 664,
																					"name": "_claimIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "3125:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 666,
																				"indexExpression": {
																					"id": 665,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "3139:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3125:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 667,
																					"name": "_claimIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "3144:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 671,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 670,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 668,
																						"name": "claimIssuerlength",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "3158:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 669,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3178:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3158:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3144:36:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "3125:55:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																				"typeString": "contract IClaimIssuer"
																			}
																		},
																		"id": 673,
																		"nodeType": "ExpressionStatement",
																		"src": "3125:55:6"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 674,
																					"name": "_claimIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "3198:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3212:3:6",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "3198:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																					"typeString": "function (contract IClaimIssuer[] storage pointer)"
																				}
																			},
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3198:19:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 678,
																		"nodeType": "ExpressionStatement",
																		"src": "3198:19:6"
																	},
																	{
																		"id": 679,
																		"nodeType": "Break",
																		"src": "3235:5:6"
																	}
																]
															}
														},
														{
															"id": 685,
															"nodeType": "UncheckedBlock",
															"src": "3268:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "3296:3:6",
																		"subExpression": {
																			"id": 682,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "3298:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 684,
																	"nodeType": "ExpressionStatement",
																	"src": "3296:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 656,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "3030:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 657,
														"name": "claimIssuerlength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "3034:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3030:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 687,
												"initializationExpression": {
													"assignments": [
														653
													],
													"declarations": [
														{
															"constant": false,
															"id": 653,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3023:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 687,
															"src": "3015:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 652,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3015:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 655,
													"initialValue": {
														"hexValue": "30",
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3027:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3015:13:6"
												},
												"nodeType": "ForStatement",
												"src": "3010:314:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3384:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														{
															"id": 690,
															"name": "claimIssuerTopicsLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3410:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_removeClaimIssuerFromAllClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "3334:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IClaimIssuer_$49_$_t_uint256_$returns$__$",
															"typeString": "function (contract IClaimIssuer,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3334:109:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "3334:109:6"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3454:44:6",
													"subExpression": {
														"baseExpression": {
															"id": 693,
															"name": "_claimIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "3461:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
															}
														},
														"id": 695,
														"indexExpression": {
															"id": 694,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3485:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3461:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "3454:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 699,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3532:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														],
														"id": 698,
														"name": "ClaimIssuerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "3513:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$49_$returns$__$",
															"typeString": "function (contract IClaimIssuer)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3513:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "EmitStatement",
												"src": "3508:37:6"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2370:317:6",
										"text": "@notice Removes a claim issuer from the Claim Issuers Registry.\n @param _claimIssuer The address of the claim issuer to be removed.\n Requirements:\n - The caller must be the owner of the contract.\n - The claim issuer must exist in the registry.\n Emits a ClaimIssuerRemoved event."
									},
									"functionSelector": "0b4b764c",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 630,
												"name": "onlyOwner",
												"nameLocations": [
													"2755:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "2755:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2755:9:6"
										}
									],
									"name": "removeClaimIssuer",
									"nameLocation": "2701:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "2732:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2719:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 626,
														"name": "IClaimIssuer",
														"nameLocations": [
															"2719:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "2719:12:6"
													},
													"referencedDeclaration": 49,
													"src": "2719:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:27:6"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2765:0:6"
									},
									"scope": 1040,
									"src": "2692:860:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "4146:434:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 716,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "4164:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4177:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4164:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4187:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4164:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a204e6f20636c61696d20746f70696373",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4190:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec",
																"typeString": "literal_string \"ERC-3643: No claim topics\""
															},
															"value": "ERC-3643: No claim topics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f0726d437204a2bf42a859022fb97e23f697c4d2e764839024535aa377fc5ec",
																"typeString": "literal_string \"ERC-3643: No claim topics\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4156:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4156:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "4156:62:6"
											},
											{
												"assignments": [
													724
												],
												"declarations": [
													{
														"constant": false,
														"id": 724,
														"mutability": "mutable",
														"name": "claimIssuerTopicsLength",
														"nameLocation": "4233:23:6",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "4228:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 723,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4228:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 725,
															"name": "_claimIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "4259:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
															}
														},
														"id": 727,
														"indexExpression": {
															"id": 726,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4283:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4259:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4310:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4259:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4228:88:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "claimIssuerTopicsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "4334:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4361:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4334:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a204e6f74206120636c61696d20697373756572",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40",
																"typeString": "literal_string \"ERC-3643: Not a claim issuer\""
															},
															"value": "ERC-3643: Not a claim issuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db5a0d952c7c7c0b550527bdc96c1984edcd2fb8212739c1016594904ce0ff40",
																"typeString": "literal_string \"ERC-3643: Not a claim issuer\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4326:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4326:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "4326:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4435:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														],
														"id": 737,
														"name": "_updateIssuerAcrossAllTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "4406:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IClaimIssuer_$49_$returns$__$",
															"typeString": "function (contract IClaimIssuer)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4406:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "4406:42:6"
											},
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 741,
															"name": "_claimIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "4459:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
															}
														},
														"id": 743,
														"indexExpression": {
															"id": 742,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4483:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4459:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 744,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "4499:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "4459:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "4459:52:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 748,
															"name": "_claimIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4546:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														{
															"id": 749,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4560:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 747,
														"name": "ClaimTopicsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "4527:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (contract IClaimIssuer,uint256[] memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4527:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "EmitStatement",
												"src": "4522:51:6"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "3558:449:6",
										"text": "@notice Updates the claim topics associated with a claim issuer.\n @param _claimIssuer The address of the claim issuer.\n @param _claimTopics An array of claim topics to be associated with the claim issuer.\n Requirements:\n - The caller must be the owner of the contract.\n - The claim issuer must exist in the registry.\n - The claim topics array must not be empty.\n Emits a ClaimTopicsUpdated event."
									},
									"functionSelector": "04bc7e84",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 712,
												"name": "onlyOwner",
												"nameLocations": [
													"4136:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "4136:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4136:9:6"
										}
									],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "4021:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "4067:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4054:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4054:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4054:12:6"
													},
													"referencedDeclaration": 49,
													"src": "4054:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "4108:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4089:31:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 708,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4089:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 709,
													"nodeType": "ArrayTypeName",
													"src": "4089:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:82:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4146:0:6"
									},
									"scope": 1040,
									"src": "4012:568:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1102
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "4779:37:6",
										"statements": [
											{
												"expression": {
													"id": 761,
													"name": "_claimIssuers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 523,
													"src": "4796:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
														"typeString": "contract IClaimIssuer[] storage ref"
													}
												},
												"functionReturnParameters": 760,
												"id": 762,
												"nodeType": "Return",
												"src": "4789:20:6"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "4586:115:6",
										"text": "@notice Returns an array of all claim issuers in the registry.\n @return A memory array of claim issuers."
									},
									"functionSelector": "d4f4ac4e",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIssuers",
									"nameLocation": "4715:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4730:2:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4756:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 757,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 756,
															"name": "IClaimIssuer",
															"nameLocations": [
																"4756:12:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "4756:12:6"
														},
														"referencedDeclaration": 49,
														"src": "4756:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 758,
													"nodeType": "ArrayTypeName",
													"src": "4756:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4755:23:6"
									},
									"scope": 1040,
									"src": "4706:110:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1112
									],
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "5163:61:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 774,
														"name": "_claimTopicToClaimIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "5180:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
															"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
														}
													},
													"id": 776,
													"indexExpression": {
														"id": 775,
														"name": "claimTopic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5206:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5180:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
														"typeString": "contract IClaimIssuer[] storage ref"
													}
												},
												"functionReturnParameters": 773,
												"id": 777,
												"nodeType": "Return",
												"src": "5173:44:6"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "4822:218:6",
										"text": "@notice Returns an array of all claim issuers associated with a specific claim topic.\n @param claimTopic The claim topic to find associated claim issuers for.\n @return A memory array of claim issuers."
									},
									"functionSelector": "6b2c56bd",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIssuersForClaimTopic",
									"nameLocation": "5054:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "5100:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5092:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:34:6"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "5140:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 770,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 769,
															"name": "IClaimIssuer",
															"nameLocations": [
																"5140:12:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "5140:12:6"
														},
														"referencedDeclaration": 49,
														"src": "5140:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 771,
													"nodeType": "ArrayTypeName",
													"src": "5140:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5139:23:6"
									},
									"scope": 1040,
									"src": "5045:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "5493:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "_issuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5525:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														],
														"id": 788,
														"name": "_isClaimIssuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "5510:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IClaimIssuer_$49_$returns$_t_bool_$",
															"typeString": "function (contract IClaimIssuer) view returns (bool)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5510:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 787,
												"id": 791,
												"nodeType": "Return",
												"src": "5503:30:6"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "5230:184:6",
										"text": "@notice Checks if an address is a claim issuer in the registry.\n @param _issuer The address to check.\n @return True if the address is a claim issuer, false otherwise."
									},
									"functionSelector": "6de48708",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimIssuer",
									"nameLocation": "5428:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "5455:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "5442:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 782,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 781,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5442:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5442:12:6"
													},
													"referencedDeclaration": 49,
													"src": "5442:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5441:22:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "5487:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 785,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5487:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5486:6:6"
									},
									"scope": 1040,
									"src": "5419:121:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1131
									],
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "5883:142:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 805,
																	"name": "_claimIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "5916:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																],
																"id": 804,
																"name": "_isClaimIssuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "5901:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IClaimIssuer_$49_$returns$_t_bool_$",
																	"typeString": "function (contract IClaimIssuer) view returns (bool)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5901:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552432d333634333a2049737375657220646f65736e2774206578697374",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5931:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293",
																"typeString": "literal_string \"ERC-3643: Issuer doesn't exist\""
															},
															"value": "ERC-3643: Issuer doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce3ca0faf598c676a46c51867de612a9e65d1c3663993979a8695d390ddbd293",
																"typeString": "literal_string \"ERC-3643: Issuer doesn't exist\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5893:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5893:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "5893:71:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 810,
														"name": "_claimIssuerClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "5981:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
														}
													},
													"id": 812,
													"indexExpression": {
														"id": 811,
														"name": "_claimIssuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "6005:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5981:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 802,
												"id": 813,
												"nodeType": "Return",
												"src": "5974:44:6"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "5546:215:6",
										"text": "@notice Returns an array of claim topics associated with a specific claim issuer.\n @param _claimIssuer The claim issuer to find associated claim topics for.\n @return A memory array of claim topics."
									},
									"functionSelector": "122dade8",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIssuerClaimTopics",
									"nameLocation": "5775:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "5823:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5810:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 795,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5810:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5810:12:6"
													},
													"referencedDeclaration": 49,
													"src": "5810:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:41:6"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5865:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 799,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5865:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 800,
													"nodeType": "ArrayTypeName",
													"src": "5865:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5864:18:6"
									},
									"scope": 1040,
									"src": "5766:259:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1142
									],
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "6499:373:6",
										"statements": [
											{
												"assignments": [
													827
												],
												"declarations": [
													{
														"constant": false,
														"id": 827,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6517:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "6509:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 826,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6509:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 832,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 828,
															"name": "_claimIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "6526:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
															}
														},
														"id": 830,
														"indexExpression": {
															"id": 829,
															"name": "_issuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "6550:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6526:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6559:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6526:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6509:56:6"
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "claimTopics",
														"nameLocation": "6592:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "6575:28:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 835,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6575:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 836,
															"nodeType": "ArrayTypeName",
															"src": "6575:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"baseExpression": {
														"id": 838,
														"name": "_claimIssuerClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "6606:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
														}
													},
													"id": 840,
													"indexExpression": {
														"id": 839,
														"name": "_issuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "6630:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6606:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6575:63:6"
											},
											{
												"body": {
													"id": 862,
													"nodeType": "Block",
													"src": "6682:162:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 849,
																		"name": "claimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "6700:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 851,
																	"indexExpression": {
																		"id": 850,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "6712:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6700:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 852,
																	"name": "_claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "6718:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6700:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 857,
															"nodeType": "IfStatement",
															"src": "6696:79:6",
															"trueBody": {
																"id": 856,
																"nodeType": "Block",
																"src": "6731:44:6",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6756:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 825,
																		"id": 855,
																		"nodeType": "Return",
																		"src": "6749:11:6"
																	}
																]
															}
														},
														{
															"id": 861,
															"nodeType": "UncheckedBlock",
															"src": "6788:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "6816:3:6",
																		"subExpression": {
																			"id": 858,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "6818:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 860,
																	"nodeType": "ExpressionStatement",
																	"src": "6816:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "6668:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 847,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "6672:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6668:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"initializationExpression": {
													"assignments": [
														843
													],
													"declarations": [
														{
															"constant": false,
															"id": 843,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6661:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 863,
															"src": "6653:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 845,
													"initialValue": {
														"hexValue": "30",
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6665:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6653:13:6"
												},
												"nodeType": "ForStatement",
												"src": "6648:196:6"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6860:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 825,
												"id": 865,
												"nodeType": "Return",
												"src": "6853:12:6"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "6031:346:6",
										"text": "@notice Checks if a claim issuer has a specific claim topic.\n @dev This function checks if a specific claim topic is associated with a claim issuer.\n @param _issuer The claim issuer to check.\n @param _claimTopic The claim topic to check.\n @return bool True if the claim issuer has the claim topic, otherwise false."
									},
									"functionSelector": "34a89987",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "6391:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "6427:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "6414:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 817,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6414:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "6414:12:6"
													},
													"referencedDeclaration": 49,
													"src": "6414:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "6452:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "6444:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6404:65:6"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "6493:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6493:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6492:6:6"
									},
									"scope": 1040,
									"src": "6382:490:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "7205:256:6",
										"statements": [
											{
												"body": {
													"id": 900,
													"nodeType": "Block",
													"src": "7249:206:6",
													"statements": [
														{
															"assignments": [
																884
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 884,
																	"mutability": "mutable",
																	"name": "claimTopic",
																	"nameLocation": "7271:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 900,
																	"src": "7263:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7263:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 890,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 885,
																		"name": "_claimIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "7284:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
																		}
																	},
																	"id": 887,
																	"indexExpression": {
																		"id": 886,
																		"name": "claimIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "7308:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7284:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 889,
																"indexExpression": {
																	"id": 888,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "7321:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7284:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7263:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 892,
																		"name": "claimIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "7361:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	},
																	{
																		"id": 893,
																		"name": "claimTopic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "7374:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 891,
																	"name": "_removeIssuerFromTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "7338:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IClaimIssuer_$49_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IClaimIssuer,uint256)"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7338:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 895,
															"nodeType": "ExpressionStatement",
															"src": "7338:47:6"
														},
														{
															"id": 899,
															"nodeType": "UncheckedBlock",
															"src": "7399:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "7427:3:6",
																		"subExpression": {
																			"id": 896,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7429:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 898,
																	"nodeType": "ExpressionStatement",
																	"src": "7427:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 880,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "7235:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 881,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "7239:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7235:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"initializationExpression": {
													"assignments": [
														877
													],
													"declarations": [
														{
															"constant": false,
															"id": 877,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7228:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 901,
															"src": "7220:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 876,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7220:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 879,
													"initialValue": {
														"hexValue": "30",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7232:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7220:13:6"
												},
												"nodeType": "ForStatement",
												"src": "7215:240:6"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "6878:207:6",
										"text": "@dev Removes a claim issuer from all associated claim topics.\n @param claimIssuer The claim issuer to be removed.\n @param length The number of claim topics associated with the claim issuer."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeClaimIssuerFromAllClaimTopics",
									"nameLocation": "7099:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "claimIssuer",
												"nameLocation": "7158:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7145:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 869,
														"name": "IClaimIssuer",
														"nameLocations": [
															"7145:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "7145:12:6"
													},
													"referencedDeclaration": 49,
													"src": "7145:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "7184:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7179:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7179:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7135:61:6"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7205:0:6"
									},
									"scope": 1040,
									"src": "7090:371:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "7761:424:6",
										"statements": [
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "claimTopics",
														"nameLocation": "7788:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "7771:28:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 912,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7771:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 913,
															"nodeType": "ArrayTypeName",
															"src": "7771:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"baseExpression": {
														"id": 915,
														"name": "_claimIssuerClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "7802:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
														}
													},
													"id": 917,
													"indexExpression": {
														"id": 916,
														"name": "claimIssuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "7826:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7802:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7771:67:6"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "7853:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "7848:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 919,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7848:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"expression": {
														"id": 921,
														"name": "claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "7862:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7874:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7862:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7848:32:6"
											},
											{
												"body": {
													"id": 955,
													"nodeType": "Block",
													"src": "7925:254:6",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "claimTopic",
																	"nameLocation": "7947:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 955,
																	"src": "7939:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7939:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 936,
															"initialValue": {
																"baseExpression": {
																	"id": 933,
																	"name": "claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "7960:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 935,
																"indexExpression": {
																	"id": 934,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "7972:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7960:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7939:35:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 938,
																		"name": "claimIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "8012:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	},
																	{
																		"id": 939,
																		"name": "claimTopic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "8025:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 937,
																	"name": "_removeIssuerFromTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "7989:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IClaimIssuer_$49_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IClaimIssuer,uint256)"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7989:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 941,
															"nodeType": "ExpressionStatement",
															"src": "7989:47:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 948,
																		"name": "claimIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "8097:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 942,
																			"name": "_claimTopicToClaimIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "8050:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																				"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																			}
																		},
																		"id": 946,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 943,
																				"name": "claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 914,
																				"src": "8076:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 945,
																			"indexExpression": {
																				"id": 944,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 925,
																				"src": "8088:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8076:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8050:41:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8092:4:6",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8050:46:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$49_$returns$__$attached_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																		"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8050:59:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 950,
															"nodeType": "ExpressionStatement",
															"src": "8050:59:6"
														},
														{
															"id": 954,
															"nodeType": "UncheckedBlock",
															"src": "8123:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "8151:3:6",
																		"subExpression": {
																			"id": 951,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "8153:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "8151:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "7911:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 929,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "7915:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7911:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"initializationExpression": {
													"assignments": [
														925
													],
													"declarations": [
														{
															"constant": false,
															"id": 925,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7904:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 956,
															"src": "7896:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 924,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7896:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 927,
													"initialValue": {
														"hexValue": "30",
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7908:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7896:13:6"
												},
												"nodeType": "ForStatement",
												"src": "7891:288:6"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "7467:217:6",
										"text": "@dev Updates a claim issuer across all associated claim topics.\n      The function removes the claim issuer from each topic, and then adds it back.\n @param claimIssuer The claim issuer to be updated."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateIssuerAcrossAllTopics",
									"nameLocation": "7698:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "claimIssuer",
												"nameLocation": "7740:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "7727:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 905,
														"name": "IClaimIssuer",
														"nameLocations": [
															"7727:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "7727:12:6"
													},
													"referencedDeclaration": 49,
													"src": "7727:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7726:26:6"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7761:0:6"
									},
									"scope": 1040,
									"src": "7689:496:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "8705:538:6",
										"statements": [
											{
												"assignments": [
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "claimIssuers",
														"nameLocation": "8737:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "8715:34:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
															"typeString": "contract IClaimIssuer[]"
														},
														"typeName": {
															"baseType": {
																"id": 969,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 968,
																	"name": "IClaimIssuer",
																	"nameLocations": [
																		"8715:12:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 49,
																	"src": "8715:12:6"
																},
																"referencedDeclaration": 49,
																"src": "8715:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																	"typeString": "contract IClaimIssuer"
																}
															},
															"id": 970,
															"nodeType": "ArrayTypeName",
															"src": "8715:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
																"typeString": "contract IClaimIssuer[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"baseExpression": {
														"id": 972,
														"name": "_claimTopicToClaimIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "8752:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
															"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
														}
													},
													"id": 974,
													"indexExpression": {
														"id": 973,
														"name": "claimTopic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "8791:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8752:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
														"typeString": "contract IClaimIssuer[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:96:6"
											},
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "8826:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "8821:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 976,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8821:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"expression": {
														"id": 978,
														"name": "claimIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "8835:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
															"typeString": "contract IClaimIssuer[] memory"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8848:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8835:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8821:33:6"
											},
											{
												"body": {
													"id": 1018,
													"nodeType": "Block",
													"src": "8896:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																	"typeString": "contract IClaimIssuer"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 988,
																		"name": "claimIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "8914:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																			"typeString": "contract IClaimIssuer[] memory"
																		}
																	},
																	"id": 990,
																	"indexExpression": {
																		"id": 989,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "8927:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8914:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 991,
																	"name": "claimIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "8933:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"src": "8914:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1013,
															"nodeType": "IfStatement",
															"src": "8910:258:6",
															"trueBody": {
																"id": 1012,
																"nodeType": "Block",
																"src": "8946:222:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 993,
																						"name": "_claimTopicToClaimIssuers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 537,
																						"src": "8964:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																							"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																						}
																					},
																					"id": 996,
																					"indexExpression": {
																						"id": 994,
																						"name": "claimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 964,
																						"src": "8990:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8964:37:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 997,
																				"indexExpression": {
																					"id": 995,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 982,
																					"src": "9002:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8964:40:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 998,
																					"name": "claimIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "9007:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																						"typeString": "contract IClaimIssuer[] memory"
																					}
																				},
																				"id": 1002,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 999,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 977,
																						"src": "9041:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1000,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9050:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "9041:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9007:62:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "8964:105:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																				"typeString": "contract IClaimIssuer"
																			}
																		},
																		"id": 1004,
																		"nodeType": "ExpressionStatement",
																		"src": "8964:105:6"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"baseExpression": {
																						"id": 1005,
																						"name": "_claimTopicToClaimIssuers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 537,
																						"src": "9087:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																							"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																						}
																					},
																					"id": 1007,
																					"indexExpression": {
																						"id": 1006,
																						"name": "claimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 964,
																						"src": "9113:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9087:37:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9125:3:6",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "9087:41:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																					"typeString": "function (contract IClaimIssuer[] storage pointer)"
																				}
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9087:43:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1010,
																		"nodeType": "ExpressionStatement",
																		"src": "9087:43:6"
																	},
																	{
																		"id": 1011,
																		"nodeType": "Break",
																		"src": "9148:5:6"
																	}
																]
															}
														},
														{
															"id": 1017,
															"nodeType": "UncheckedBlock",
															"src": "9181:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "9209:3:6",
																		"subExpression": {
																			"id": 1014,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "9211:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1016,
																	"nodeType": "ExpressionStatement",
																	"src": "9209:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "8882:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 986,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "8886:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8882:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"initializationExpression": {
													"assignments": [
														982
													],
													"declarations": [
														{
															"constant": false,
															"id": 982,
															"mutability": "mutable",
															"name": "j",
															"nameLocation": "8875:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1019,
															"src": "8870:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 981,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8870:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 984,
													"initialValue": {
														"hexValue": "30",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8879:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8870:10:6"
												},
												"nodeType": "ForStatement",
												"src": "8865:372:6"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "8191:404:6",
										"text": "@dev Removes a claim issuer from a specific claim topic.\n      The function identifies and replaces the claim issuer with the last element in the list\n      then removes the last element, effectively removing the issuer from the list.\n @param claimIssuer The claim issuer to be removed.\n @param claimTopic The claim topic identifier from which the issuer is to be removed."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeIssuerFromTopic",
									"nameLocation": "8609:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "claimIssuer",
												"nameLocation": "8654:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "8641:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 961,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 960,
														"name": "IClaimIssuer",
														"nameLocations": [
															"8641:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "8641:12:6"
													},
													"referencedDeclaration": 49,
													"src": "8641:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "8680:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "8675:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8631:65:6"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8705:0:6"
									},
									"scope": 1040,
									"src": "8600:643:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "9510:70:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1030,
																		"name": "_claimIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "9528:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(contract IClaimIssuer => uint256[] storage ref)"
																		}
																	},
																	"id": 1032,
																	"indexExpression": {
																		"id": 1031,
																		"name": "_issuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "9552:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9528:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9561:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9528:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9571:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1036,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9527:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1037,
												"nodeType": "Return",
												"src": "9520:53:6"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "9249:182:6",
										"text": "@dev Checks if an address is a claim issuer.\n @param _issuer The address to check.\n @return bool Returns true if the address is a claim issuer, and false otherwise."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isClaimIssuer",
									"nameLocation": "9445:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "9473:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "9460:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1023,
														"name": "IClaimIssuer",
														"nameLocations": [
															"9460:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "9460:12:6"
													},
													"referencedDeclaration": 49,
													"src": "9460:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9459:22:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "9504:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9504:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9503:6:6"
									},
									"scope": 1040,
									"src": "9436:144:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1041,
							"src": "413:9169:6",
							"usedErrors": [
								342,
								347
							],
							"usedEvents": [
								353,
								1052,
								1058,
								1067
							]
						}
					],
					"src": "36:9547:6"
				},
				"id": 6
			},
			"contracts/registry/interface/IClaimIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/registry/interface/IClaimIssuersRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IClaimIssuersRegistry": [
							1143
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						]
					},
					"id": 1144,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1042,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:7"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1043,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1144,
							"sourceUnit": 50,
							"src": "61:67:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1143,
							"linearizedBaseContracts": [
								1143
							],
							"name": "IClaimIssuersRegistry",
							"nameLocation": "140:21:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "168:311:7",
										"text": "  this event is emitted when a claim issuer is added in the registry.\n  the event is emitted by the addClaimIssuer function\n  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the claim issuer is allowed to emit"
									},
									"eventSelector": "375851630239b005eafd9230e43a9a9d4a5d7b96a4956fc8e9d2ab3ff4583d16",
									"id": 1052,
									"name": "ClaimIssuerAdded",
									"nameLocation": "490:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimIssuer",
												"nameLocation": "537:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "516:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1045,
														"name": "IClaimIssuer",
														"nameLocations": [
															"516:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "516:12:7"
													},
													"referencedDeclaration": 49,
													"src": "516:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "568:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "558:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1048,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "558:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1049,
													"nodeType": "ArrayTypeName",
													"src": "558:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:79:7"
									},
									"src": "484:102:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "592:234:7",
										"text": "  this event is emitted when a claim issuer is removed from the registry.\n  the event is emitted by the removeClaimIssuer function\n  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract"
									},
									"eventSelector": "8432c8693d2550c2eb52d3f0a803b38eb8c3c0e62234fa1b6b8b35cc38667854",
									"id": 1058,
									"name": "ClaimIssuerRemoved",
									"nameLocation": "837:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimIssuer",
												"nameLocation": "877:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "856:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IClaimIssuer",
														"nameLocations": [
															"856:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "856:12:7"
													},
													"referencedDeclaration": 49,
													"src": "856:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:34:7"
									},
									"src": "831:59:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "896:340:7",
										"text": "  this event is emitted when the set of claim topics is changed for a given claim issuer.\n  the event is emitted by the updateIssuerClaimTopics function\n  `claimIssuer` is the address of the claim issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the claim issuer is allowed to emit"
									},
									"eventSelector": "ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf",
									"id": 1067,
									"name": "ClaimTopicsUpdated",
									"nameLocation": "1247:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimIssuer",
												"nameLocation": "1296:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1275:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1060,
														"name": "IClaimIssuer",
														"nameLocations": [
															"1275:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "1275:12:7"
													},
													"referencedDeclaration": 49,
													"src": "1275:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "1327:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1317:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1063,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1317:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1064,
													"nodeType": "ArrayTypeName",
													"src": "1317:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:79:7"
									},
									"src": "1241:104:7"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1351:637:7",
										"text": "  @dev registers a ClaimIssuer contract as claim claim issuer.\n  Requires that a ClaimIssuer contract doesn't already exist\n  Requires that the claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  Requires that there is no more than 50 Claim issuers\n  @param _claimIssuer The ClaimIssuer contract address of the claim claim issuer.\n  @param _claimTopics the set of claim topics that the claim issuer is allowed to emit\n  This function can only be called by the owner of the Claim Issuers Registry contract\n  emits a `ClaimIssuerAdded` event"
									},
									"functionSelector": "38d742a4",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimIssuer",
									"nameLocation": "2002:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "2039:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2026:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1069,
														"name": "IClaimIssuer",
														"nameLocations": [
															"2026:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "2026:12:7"
													},
													"referencedDeclaration": 49,
													"src": "2026:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "2080:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2061:31:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1072,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1073,
													"nodeType": "ArrayTypeName",
													"src": "2061:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2016:82:7"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:0:7"
									},
									"scope": 1143,
									"src": "1993:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "2114:345:7",
										"text": "  @dev Removes the ClaimIssuer contract of a claim claim issuer.\n  Requires that the claim issuer contract to be registered first\n  @param _claimIssuer the claim issuer to remove.\n  This function can only be called by the owner of the Claim Issuers Registry contract\n  emits a `ClaimIssuerRemoved` event"
									},
									"functionSelector": "0b4b764c",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimIssuer",
									"nameLocation": "2473:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "2504:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2491:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1079,
														"name": "IClaimIssuer",
														"nameLocations": [
															"2491:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "2491:12:7"
													},
													"referencedDeclaration": 49,
													"src": "2491:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:27:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:0:7"
									},
									"scope": 1143,
									"src": "2464:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "2533:583:7",
										"text": "  @dev Updates the set of claim topics that a claim issuer is allowed to emit.\n  Requires that this ClaimIssuer contract already exists in the registry\n  Requires that the provided claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  @param _claimIssuer the claim issuer to update.\n  @param _claimTopics the set of claim topics that the claim issuer is allowed to emit\n  This function can only be called by the owner of the Claim Issuers Registry contract\n  emits a `ClaimTopicsUpdated` event"
									},
									"functionSelector": "04bc7e84",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "3130:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "3176:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "3163:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1086,
														"name": "IClaimIssuer",
														"nameLocations": [
															"3163:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "3163:12:7"
													},
													"referencedDeclaration": 49,
													"src": "3163:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "3217:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "3198:31:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1089,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3198:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1090,
													"nodeType": "ArrayTypeName",
													"src": "3198:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:82:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3244:0:7"
									},
									"scope": 1143,
									"src": "3121:124:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "3251:136:7",
										"text": "  @dev Function for getting all the claim claim issuers stored.\n  @return array of all claim issuers registered."
									},
									"functionSelector": "d4f4ac4e",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIssuers",
									"nameLocation": "3401:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3416:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "3442:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1098,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1097,
															"name": "IClaimIssuer",
															"nameLocations": [
																"3442:12:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "3442:12:7"
														},
														"referencedDeclaration": 49,
														"src": "3442:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1099,
													"nodeType": "ArrayTypeName",
													"src": "3442:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:23:7"
									},
									"scope": 1143,
									"src": "3392:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "3471:267:7",
										"text": "  @dev Function for getting all the claim issuer allowed for a given claim topic.\n  @param claimTopic the claim topic to get the claim issuers for.\n  @return array of all claim issuer addresses that are allowed for the given claim topic."
									},
									"functionSelector": "6b2c56bd",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIssuersForClaimTopic",
									"nameLocation": "3752:28:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "3798:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "3790:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3780:34:7"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "3838:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1107,
															"name": "IClaimIssuer",
															"nameLocations": [
																"3838:12:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "3838:12:7"
														},
														"referencedDeclaration": 49,
														"src": "3838:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "3838:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:23:7"
									},
									"scope": 1143,
									"src": "3743:118:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "3867:193:7",
										"text": "  @dev Checks if the ClaimIssuer contract is claim\n  @param _issuer the address of the ClaimIssuer contract\n  @return true if the issuer is claim, false otherwise."
									},
									"functionSelector": "6de48708",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimIssuer",
									"nameLocation": "4074:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "4101:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4088:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1114,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4088:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4088:12:7"
													},
													"referencedDeclaration": 49,
													"src": "4088:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:22:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4133:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4133:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4132:6:7"
									},
									"scope": 1143,
									"src": "4065:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "4145:323:7",
										"text": "  @dev Function for getting all the claim topic of claim claim issuer\n  Requires the provided ClaimIssuer contract to be registered in the claim issuers registry.\n  @param _claimIssuer the claim issuer concerned.\n  @return The set of claim topics that the claim issuer is allowed to emit"
									},
									"functionSelector": "122dade8",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIssuerClaimTopics",
									"nameLocation": "4482:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "_claimIssuer",
												"nameLocation": "4530:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "4517:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1123,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4517:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4517:12:7"
													},
													"referencedDeclaration": 49,
													"src": "4517:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4507:41:7"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "4572:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1127,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4572:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1128,
													"nodeType": "ArrayTypeName",
													"src": "4572:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4571:18:7"
									},
									"scope": 1143,
									"src": "4473:117:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "4596:377:7",
										"text": "  @dev Function for checking if the claim claim issuer is allowed\n  to emit a certain claim topic\n  @param _issuer the address of the claim issuer's ClaimIssuer contract\n  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n  @return true if the issuer is claim for this claim topic."
									},
									"functionSelector": "34a89987",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "4987:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "5023:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "5010:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1133,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5010:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5010:12:7"
													},
													"referencedDeclaration": 49,
													"src": "5010:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "5048:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "5040:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5000:65:7"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "5089:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5089:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:6:7"
									},
									"scope": 1143,
									"src": "4978:117:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1144,
							"src": "130:4967:7",
							"usedErrors": [],
							"usedEvents": [
								1052,
								1058,
								1067
							]
						}
					],
					"src": "36:5062:7"
				},
				"id": 7
			}
		}
	}
}